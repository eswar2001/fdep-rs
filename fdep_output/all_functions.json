[
  {
    "name": "after_analysis",
    "fully_qualified_path": "fdep::after_analysis",
    "is_method": true,
    "self_type": null,
    "input_types": [
      {
        "type_name": "&Compiler",
        "crate_name": "rustc_interface",
        "module_path": "interface",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/fdep.rs"
      },
      {
        "type_name": "&Queries<''tcx>",
        "crate_name": "rustc_interface",
        "module_path": "queries",
        "generic_args": [
          {
            "type_name": "''tcx",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": "src/bin/fdep.rs"
          }
        ],
        "is_generic_param": false,
        "src_location": "src/bin/fdep.rs"
      }
    ],
    "output_types": [
      {
        "type_name": "Compilation",
        "crate_name": "rustc_driver_impl",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<QueryResult<&'_ GlobalCtxt>, ErrorGuaranteed>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "QueryResult<&'_ GlobalCtxt>",
            "crate_name": "rustc_interface",
            "module_path": "queries",
            "generic_args": [
              {
                "type_name": "&'_ GlobalCtxt",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "GlobalCtxt",
                    "crate_name": "rustc_middle",
                    "module_path": "ty::context",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "ErrorGuaranteed",
            "crate_name": "rustc_span",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ Queries",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Queries",
            "crate_name": "rustc_interface",
            "module_path": "queries",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((TyCtxt)) -> ()>",
        "crate_name": "fdep",
        "module_path": "<CallgraphCallbacks as rustc_driver::Callbacks>::after_analysis::{closure#0}",
        "generic_args": [
          {
            "type_name": "(TyCtxt)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "TyCtxt",
                "crate_name": "rustc_middle",
                "module_path": "ty::context",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "QueryResult<&'_ GlobalCtxt>",
        "crate_name": "rustc_interface",
        "module_path": "queries",
        "generic_args": [
          {
            "type_name": "&'_ GlobalCtxt",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "GlobalCtxt",
                "crate_name": "rustc_middle",
                "module_path": "ty::context",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Compilation",
        "crate_name": "rustc_driver_impl",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [],
    "functions_called": [],
    "methods_called": [
      {
        "name": "enter",
        "fully_qualified_path": "rustc_interface::queries::QueryResult::<'a, &'tcx rustc_middle::ty::context::GlobalCtxt<'tcx>>::enter",
        "is_method": true,
        "receiver_type": {
          "type_name": "QueryResult<&'_ GlobalCtxt>",
          "crate_name": "rustc_interface",
          "module_path": "queries",
          "generic_args": [
            {
              "type_name": "&'_ GlobalCtxt",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [
                {
                  "type_name": "GlobalCtxt",
                  "crate_name": "rustc_middle",
                  "module_path": "ty::context",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "impl FnOnce(TyCtxt<'tcx>) -> T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 23,
        "column_number": 39,
        "origin_crate": "rustc_interface",
        "origin_module": "queries::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "unwrap",
        "fully_qualified_path": "std::result::Result::<T, E>::unwrap",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<QueryResult<&'_ GlobalCtxt>, ErrorGuaranteed>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "QueryResult<&'_ GlobalCtxt>",
              "crate_name": "rustc_interface",
              "module_path": "queries",
              "generic_args": [
                {
                  "type_name": "&'_ GlobalCtxt",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [
                    {
                      "type_name": "GlobalCtxt",
                      "crate_name": "rustc_middle",
                      "module_path": "ty::context",
                      "generic_args": [],
                      "is_generic_param": false,
                      "src_location": ""
                    }
                  ],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "ErrorGuaranteed",
              "crate_name": "rustc_span",
              "module_path": "",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 23,
        "column_number": 30,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "global_ctxt",
        "fully_qualified_path": "rustc_interface::Queries::<'tcx>::global_ctxt",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ Queries",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "Queries",
              "crate_name": "rustc_interface",
              "module_path": "queries",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Result<QueryResult<&'_ GlobalCtxt>, ErrorGuaranteed>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "QueryResult<&'_ GlobalCtxt>",
                "crate_name": "rustc_interface",
                "module_path": "queries",
                "generic_args": [
                  {
                    "type_name": "&'_ GlobalCtxt",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "GlobalCtxt",
                        "crate_name": "rustc_middle",
                        "module_path": "ty::context",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "ErrorGuaranteed",
                "crate_name": "rustc_span",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 23,
        "column_number": 16,
        "origin_crate": "rustc_interface",
        "origin_module": "queries::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {
      "closure_1": {
        "name": "closure_1",
        "fully_qualified_path": "closure_1",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(TyCtxt)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "TyCtxt",
                "crate_name": "rustc_middle",
                "module_path": "ty::context",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "fn(&'_ TyCtxt) -> ()",
            "crate_name": "fdep",
            "module_path": "",
            "generic_args": [
              {
                "type_name": "&'_ TyCtxt",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "TyCtxt",
                    "crate_name": "rustc_middle",
                    "module_path": "ty::context",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "()",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "TyCtxt",
            "crate_name": "rustc_middle",
            "module_path": "ty::context",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ TyCtxt",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "TyCtxt",
                "crate_name": "rustc_middle",
                "module_path": "ty::context",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [],
        "functions_called": [
          {
            "name": "analyze",
            "fully_qualified_path": "fdep::analyze",
            "is_method": false,
            "receiver_type": null,
            "input_types": [
              {
                "type_name": "&'_ TyCtxt",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "TyCtxt",
                    "crate_name": "rustc_middle",
                    "module_path": "ty::context",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "output_types": [
              {
                "type_name": "()",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/fdep.rs",
            "line_number": 24,
            "column_number": 12,
            "origin_crate": "fdep",
            "origin_module": "",
            "call_type": "function"
          }
        ],
        "methods_called": [],
        "where_functions": {},
        "src_location": "src/bin/fdep.rs",
        "src_code": "|tcx| {\n            analyze(&tcx);\n        }",
        "line_number_start": 23,
        "line_number_end": 25,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      }
    },
    "src_location": "src/bin/fdep.rs",
    "src_code": "fn after_analysis<'tcx>(\n        &mut self,\n        _compiler: &Compiler,\n        queries: &'tcx Queries<'tcx>,\n    ) -> Compilation {\n        queries.global_ctxt().unwrap().enter(|tcx| {\n            analyze(&tcx);\n        });\n\n        Compilation::Stop\n    }",
    "line_number_start": 18,
    "line_number_end": 28,
    "crate_name": "fdep",
    "module_path": "",
    "visibility": "pub",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "main",
    "fully_qualified_path": "fdep::main",
    "is_method": false,
    "self_type": null,
    "input_types": [],
    "output_types": [
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "types_used": [
      {
        "type_name": "fn() -> Args",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "CallgraphCallbacks",
        "crate_name": "fdep",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> Option<String>",
        "crate_name": "fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "Option<String>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Iter<String>",
        "crate_name": "core",
        "module_path": "slice::iter",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((&'_ String)) -> bool>",
        "crate_name": "fdep",
        "module_path": "main::{closure#0}",
        "generic_args": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ [String]) -> Option<PathBuf>",
        "crate_name": "fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "&'_ [String]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[String]",
                "crate_name": "core",
                "module_path": "slice",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Option<PathBuf>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "PathBuf",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "RunCompiler",
        "crate_name": "rustc_driver_impl",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ mut CallgraphCallbacks",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "CallgraphCallbacks",
            "crate_name": "fdep",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<(), ErrorGuaranteed>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "ErrorGuaranteed",
            "crate_name": "rustc_span",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<String>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ [String], &'_ mut dyn [Binder { value: Trait(rustc_driver::Callbacks), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:26673 ~ core[5d62]::marker::Send)), bound_vars: [] }] + 'b/#1) -> RunCompiler",
        "crate_name": "rustc_driver_impl",
        "module_path": "{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ [String]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[String]",
                "crate_name": "core",
                "module_path": "slice",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ mut dyn [Binder { value: Trait(rustc_driver::Callbacks), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:26673 ~ core[5d62]::marker::Send)), bound_vars: [] }] + 'b/#1",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "dyn [Binder { value: Trait(rustc_driver::Callbacks), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:26673 ~ core[5d62]::marker::Send)), bound_vars: [] }] + 'b/#1",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "RunCompiler",
            "crate_name": "rustc_driver_impl",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "String",
        "crate_name": "alloc",
        "module_path": "string",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<PathBuf>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Args",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ Vec<String, Global>",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Vec<String, Global>",
            "crate_name": "alloc",
            "module_path": "vec",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Global",
                "crate_name": "alloc",
                "module_path": "alloc",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Vec<String, Global>",
        "crate_name": "alloc",
        "module_path": "vec",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Global",
            "crate_name": "alloc",
            "module_path": "alloc",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"--sysroot\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/fdep.rs",
        "line_number": 41,
        "column_number": 27
      }
    ],
    "functions_called": [
      {
        "name": "args",
        "fully_qualified_path": "std::env::args",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 32,
        "column_number": 27,
        "origin_crate": "std",
        "origin_module": "env",
        "call_type": "function"
      },
      {
        "name": "compile_time_sysroot",
        "fully_qualified_path": "fdep::compile_time_sysroot",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "Option<String>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 40,
        "column_number": 27,
        "origin_crate": "fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "get_output_dir",
        "fully_qualified_path": "get_output_dir",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [String]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[String]",
                "crate_name": "core",
                "module_path": "slice",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<PathBuf>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "PathBuf",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 50,
        "column_number": 21,
        "origin_crate": "fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "new",
        "fully_qualified_path": "rustc_driver::RunCompiler::<'a, 'b>::new",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [String]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[String]",
                "crate_name": "core",
                "module_path": "slice",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ mut dyn [Binder { value: Trait(rustc_driver::Callbacks), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:26673 ~ core[5d62]::marker::Send)), bound_vars: [] }] + 'b/#1",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "dyn [Binder { value: Trait(rustc_driver::Callbacks), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:26673 ~ core[5d62]::marker::Send)), bound_vars: [] }] + 'b/#1",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "RunCompiler",
            "crate_name": "rustc_driver_impl",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 54,
        "column_number": 23,
        "origin_crate": "rustc_driver_impl",
        "origin_module": "{{impl}}",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "collect",
        "fully_qualified_path": "std::iter::Iterator::collect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Args",
          "crate_name": "std",
          "module_path": "env",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "B",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 32,
        "column_number": 44,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "any",
        "fully_qualified_path": "std::iter::Iterator::any",
        "is_method": true,
        "receiver_type": {
          "type_name": "Iter<String>",
          "crate_name": "core",
          "module_path": "slice::iter",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "F",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 42,
        "column_number": 24,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "iter",
        "fully_qualified_path": "core::slice::<impl [T]>::iter",
        "is_method": true,
        "receiver_type": {
          "type_name": "Vec<String, Global>",
          "crate_name": "alloc",
          "module_path": "vec",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Global",
              "crate_name": "alloc",
              "module_path": "alloc",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Iter<T>",
            "crate_name": "core",
            "module_path": "slice::iter",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 42,
        "column_number": 17,
        "origin_crate": "core",
        "origin_module": "slice::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "push",
        "fully_qualified_path": "std::vec::Vec::<T, A>::push",
        "is_method": true,
        "receiver_type": {
          "type_name": "Vec<String, Global>",
          "crate_name": "alloc",
          "module_path": "vec",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Global",
              "crate_name": "alloc",
              "module_path": "alloc",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 44,
        "column_number": 17,
        "origin_crate": "alloc",
        "origin_module": "vec::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "to_owned",
        "fully_qualified_path": "std::borrow::ToOwned::to_owned",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ str",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "str",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(5:779 ~ alloc[1836]::borrow::ToOwned::Owned), .. })",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 44,
        "column_number": 35,
        "origin_crate": "alloc",
        "origin_module": "borrow::ToOwned",
        "call_type": "method"
      },
      {
        "name": "push",
        "fully_qualified_path": "std::vec::Vec::<T, A>::push",
        "is_method": true,
        "receiver_type": {
          "type_name": "Vec<String, Global>",
          "crate_name": "alloc",
          "module_path": "vec",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Global",
              "crate_name": "alloc",
              "module_path": "alloc",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 45,
        "column_number": 17,
        "origin_crate": "alloc",
        "origin_module": "vec::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "run",
        "fully_qualified_path": "rustc_driver::RunCompiler::<'a, 'b>::run",
        "is_method": true,
        "receiver_type": {
          "type_name": "RunCompiler",
          "crate_name": "rustc_driver_impl",
          "module_path": "",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Result<(), ErrorGuaranteed>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "()",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "ErrorGuaranteed",
                "crate_name": "rustc_span",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 55,
        "column_number": 17,
        "origin_crate": "rustc_driver_impl",
        "origin_module": "{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {
      "closure_1": {
        "name": "closure_1",
        "fully_qualified_path": "closure_1",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "&'_ String",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [],
        "functions_called": [],
        "methods_called": [],
        "where_functions": {},
        "src_location": "src/bin/fdep.rs",
        "src_code": "|e| e == sysroot_flag",
        "line_number_start": 42,
        "line_number_end": 42,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      }
    },
    "src_location": "src/bin/fdep.rs",
    "src_code": "fn main() {\n    let mut args: Vec<_> = std::env::args().collect();\n\n    // Make sure we use the right default sysroot. The default sysroot is wrong,\n    // because `get_or_default_sysroot` in `librustc_session` bases that on `current_exe`.\n    //\n    // Make sure we always call `compile_time_sysroot` as that also does some sanity-checks\n    // of the environment we were built in.\n    // FIXME: Ideally we'd turn a bad build env into a compile-time error via CTFE or so.\n    if let Some(sysroot) = compile_time_sysroot() {\n        let sysroot_flag = \"--sysroot\";\n        if !args.iter().any(|e| e == sysroot_flag) {\n            // We need to overwrite the default that librustc_session would compute.\n            args.push(sysroot_flag.to_owned());\n            args.push(sysroot);\n        }\n    }\n\n    // Determine output directory from command-line arguments\n    let output_dir = get_output_dir(&args);\n\n    let mut calls = CallgraphCallbacks { output_dir };\n\n    let run_compiler = rustc_driver::RunCompiler::new(&args, &mut calls);\n    run_compiler.run();\n}",
    "line_number_start": 31,
    "line_number_end": 56,
    "crate_name": "fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "get_output_dir",
    "fully_qualified_path": "fdep::get_output_dir",
    "is_method": false,
    "self_type": null,
    "input_types": [
      {
        "type_name": "&[String]",
        "crate_name": "core",
        "module_path": "slice",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": "src/bin/fdep.rs"
          }
        ],
        "is_generic_param": false,
        "src_location": "src/bin/fdep.rs"
      }
    ],
    "output_types": [
      {
        "type_name": "Option",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Split<char>",
        "crate_name": "core",
        "module_path": "str::iter",
        "generic_args": [
          {
            "type_name": "char",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "usize",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "String",
        "crate_name": "alloc",
        "module_path": "string",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Enumerate<Iter<String>>",
        "crate_name": "core",
        "module_path": "iter::adapters::enumerate",
        "generic_args": [
          {
            "type_name": "Iter<String>",
            "crate_name": "core",
            "module_path": "slice::iter",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ mut Enumerate<Iter<String>>",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Enumerate<Iter<String>>",
            "crate_name": "core",
            "module_path": "iter::adapters::enumerate",
            "generic_args": [
              {
                "type_name": "Iter<String>",
                "crate_name": "core",
                "module_path": "slice::iter",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<Infallible>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "Infallible",
            "crate_name": "core",
            "module_path": "convert",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Iter<String>",
        "crate_name": "core",
        "module_path": "slice::iter",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<(usize, &'_ String)>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "(usize, &'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "usize",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ String",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(T) -> Option<T>",
        "crate_name": "core",
        "module_path": "option::Option::Some",
        "generic_args": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Option<T>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(T) -> Self",
        "crate_name": "core",
        "module_path": "convert::From",
        "generic_args": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Self",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "!",
        "crate_name": "unknown",
        "module_path": "unknown",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "PathBuf",
        "crate_name": "std",
        "module_path": "path",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(Self) -> ControlFlow<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:3792 ~ core[5d62]::ops::try_trait::Try::Residual), .. }), Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:3791 ~ core[5d62]::ops::try_trait::Try::Output), .. })>",
        "crate_name": "core",
        "module_path": "ops::try_trait::Try",
        "generic_args": [
          {
            "type_name": "Self",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "ControlFlow<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:3792 ~ core[5d62]::ops::try_trait::Try::Residual), .. }), Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:3791 ~ core[5d62]::ops::try_trait::Try::Output), .. })>",
            "crate_name": "core",
            "module_path": "ops::control_flow",
            "generic_args": [
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:3792 ~ core[5d62]::ops::try_trait::Try::Residual), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:3791 ~ core[5d62]::ops::try_trait::Try::Output), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(R) -> Self",
        "crate_name": "core",
        "module_path": "ops::try_trait::FromResidual",
        "generic_args": [
          {
            "type_name": "R",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Self",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "ControlFlow<Option<Infallible>, &'_ str>",
        "crate_name": "core",
        "module_path": "ops::control_flow",
        "generic_args": [
          {
            "type_name": "Option<Infallible>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "Infallible",
                "crate_name": "core",
                "module_path": "convert",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<PathBuf>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ mut Self) -> Option<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })>",
        "crate_name": "core",
        "module_path": "iter::traits::iterator::Iterator",
        "generic_args": [
          {
            "type_name": "&'_ mut Self",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Self",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Option<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(Self) -> Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8333 ~ core[5d62]::iter::traits::collect::IntoIterator::IntoIter), .. })",
        "crate_name": "core",
        "module_path": "iter::traits::collect::IntoIterator",
        "generic_args": [
          {
            "type_name": "Self",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8333 ~ core[5d62]::iter::traits::collect::IntoIterator::IntoIter), .. })",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<&'_ str>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [String]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[String]",
            "crate_name": "core",
            "module_path": "slice",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "char",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"--output\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/fdep.rs",
        "line_number": 61,
        "column_number": 18
      },
      {
        "value": "\"-o\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/fdep.rs",
        "line_number": 61,
        "column_number": 39
      },
      {
        "value": "1",
        "literal_type": "unsigned integer",
        "span": "src/bin/fdep.rs",
        "line_number": 62,
        "column_number": 19
      },
      {
        "value": "1",
        "literal_type": "unsigned integer",
        "span": "src/bin/fdep.rs",
        "line_number": 63,
        "column_number": 52
      },
      {
        "value": "\"--output=\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/fdep.rs",
        "line_number": 67,
        "column_number": 27
      },
      {
        "value": "'='",
        "literal_type": "char",
        "span": "src/bin/fdep.rs",
        "line_number": 68,
        "column_number": 33
      },
      {
        "value": "1",
        "literal_type": "unsigned integer",
        "span": "src/bin/fdep.rs",
        "line_number": 68,
        "column_number": 42
      }
    ],
    "functions_called": [
      {
        "name": "into_iter",
        "fully_qualified_path": "std::iter::IntoIterator::into_iter",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Self",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8333 ~ core[5d62]::iter::traits::collect::IntoIterator::IntoIter), .. })",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 60,
        "column_number": 20,
        "origin_crate": "core",
        "origin_module": "iter::traits::collect::IntoIterator",
        "call_type": "function"
      },
      {
        "name": "next",
        "fully_qualified_path": "std::iter::Iterator::next",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ mut Self",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Self",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 60,
        "column_number": 20,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "function"
      },
      {
        "name": "Some",
        "fully_qualified_path": "std::prelude::v1::Some",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<T>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 63,
        "column_number": 23,
        "origin_crate": "core",
        "origin_module": "option::Option::Some",
        "call_type": "function"
      },
      {
        "name": "from",
        "fully_qualified_path": "std::convert::From::from",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Self",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 63,
        "column_number": 28,
        "origin_crate": "core",
        "origin_module": "convert::From",
        "call_type": "function"
      },
      {
        "name": "branch",
        "fully_qualified_path": "std::ops::Try::branch",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Self",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "ControlFlow<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:3792 ~ core[5d62]::ops::try_trait::Try::Residual), .. }), Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:3791 ~ core[5d62]::ops::try_trait::Try::Output), .. })>",
            "crate_name": "core",
            "module_path": "ops::control_flow",
            "generic_args": [
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:3792 ~ core[5d62]::ops::try_trait::Try::Residual), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:3791 ~ core[5d62]::ops::try_trait::Try::Output), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 68,
        "column_number": 23,
        "origin_crate": "core",
        "origin_module": "ops::try_trait::Try",
        "call_type": "function"
      },
      {
        "name": "from_residual",
        "fully_qualified_path": "std::ops::FromResidual::from_residual",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "R",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Self",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 68,
        "column_number": 44,
        "origin_crate": "core",
        "origin_module": "ops::try_trait::FromResidual",
        "call_type": "function"
      },
      {
        "name": "Some",
        "fully_qualified_path": "std::prelude::v1::Some",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<T>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 69,
        "column_number": 19,
        "origin_crate": "core",
        "origin_module": "option::Option::Some",
        "call_type": "function"
      },
      {
        "name": "from",
        "fully_qualified_path": "std::convert::From::from",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Self",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 69,
        "column_number": 24,
        "origin_crate": "core",
        "origin_module": "convert::From",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "enumerate",
        "fully_qualified_path": "std::iter::Iterator::enumerate",
        "is_method": true,
        "receiver_type": {
          "type_name": "Iter<String>",
          "crate_name": "core",
          "module_path": "slice::iter",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Enumerate<Self>",
            "crate_name": "core",
            "module_path": "iter::adapters::enumerate",
            "generic_args": [
              {
                "type_name": "Self",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 60,
        "column_number": 32,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "iter",
        "fully_qualified_path": "core::slice::<impl [T]>::iter",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ [String]",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "[String]",
              "crate_name": "core",
              "module_path": "slice",
              "generic_args": [
                {
                  "type_name": "String",
                  "crate_name": "alloc",
                  "module_path": "string",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Iter<T>",
            "crate_name": "core",
            "module_path": "slice::iter",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 60,
        "column_number": 25,
        "origin_crate": "core",
        "origin_module": "slice::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "len",
        "fully_qualified_path": "core::slice::<impl [T]>::len",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ [String]",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "[String]",
              "crate_name": "core",
              "module_path": "slice",
              "generic_args": [
                {
                  "type_name": "String",
                  "crate_name": "alloc",
                  "module_path": "string",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "usize",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 62,
        "column_number": 28,
        "origin_crate": "core",
        "origin_module": "slice::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "starts_with",
        "fully_qualified_path": "core::str::<impl str>::starts_with",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ String",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "P",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 67,
        "column_number": 15,
        "origin_crate": "core",
        "origin_module": "str::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "nth",
        "fully_qualified_path": "std::iter::Iterator::nth",
        "is_method": true,
        "receiver_type": {
          "type_name": "Split<char>",
          "crate_name": "core",
          "module_path": "str::iter",
          "generic_args": [
            {
              "type_name": "char",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "usize",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 68,
        "column_number": 38,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "split",
        "fully_qualified_path": "core::str::<impl str>::split",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ String",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "P",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Split<P>",
            "crate_name": "core",
            "module_path": "str::iter",
            "generic_args": [
              {
                "type_name": "P",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 68,
        "column_number": 27,
        "origin_crate": "core",
        "origin_module": "str::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {},
    "src_location": "src/bin/fdep.rs",
    "src_code": "fn get_output_dir(args: &[String]) -> Option<PathBuf> {\n    for (i, arg) in args.iter().enumerate() {\n        if arg == \"--output\" || arg == \"-o\" {\n            if i + 1 < args.len() {\n                return Some(PathBuf::from(&args[i + 1]));\n            }\n        }\n\n        if arg.starts_with(\"--output=\") {\n            let path = arg.split('=').nth(1)?;\n            return Some(PathBuf::from(path));\n        }\n    }\n    None\n}",
    "line_number_start": 59,
    "line_number_end": 73,
    "crate_name": "fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "after_analysis",
    "fully_qualified_path": "fdep::after_analysis",
    "is_method": true,
    "self_type": null,
    "input_types": [
      {
        "type_name": "&Compiler",
        "crate_name": "rustc_interface",
        "module_path": "interface",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/fdep.rs"
      },
      {
        "type_name": "&Queries<''tcx>",
        "crate_name": "rustc_interface",
        "module_path": "queries",
        "generic_args": [
          {
            "type_name": "''tcx",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": "src/bin/fdep.rs"
          }
        ],
        "is_generic_param": false,
        "src_location": "src/bin/fdep.rs"
      }
    ],
    "output_types": [
      {
        "type_name": "Compilation",
        "crate_name": "rustc_driver_impl",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<QueryResult<&'_ GlobalCtxt>, ErrorGuaranteed>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "QueryResult<&'_ GlobalCtxt>",
            "crate_name": "rustc_interface",
            "module_path": "queries",
            "generic_args": [
              {
                "type_name": "&'_ GlobalCtxt",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "GlobalCtxt",
                    "crate_name": "rustc_middle",
                    "module_path": "ty::context",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "ErrorGuaranteed",
            "crate_name": "rustc_span",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((TyCtxt)) -> ()>",
        "crate_name": "fdep",
        "module_path": "<CallgraphCallbacks as rustc_driver::Callbacks>::after_analysis::{closure#0}",
        "generic_args": [
          {
            "type_name": "(TyCtxt)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "TyCtxt",
                "crate_name": "rustc_middle",
                "module_path": "ty::context",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Compilation",
        "crate_name": "rustc_driver_impl",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ Queries",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Queries",
            "crate_name": "rustc_interface",
            "module_path": "queries",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "QueryResult<&'_ GlobalCtxt>",
        "crate_name": "rustc_interface",
        "module_path": "queries",
        "generic_args": [
          {
            "type_name": "&'_ GlobalCtxt",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "GlobalCtxt",
                "crate_name": "rustc_middle",
                "module_path": "ty::context",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [],
    "functions_called": [],
    "methods_called": [
      {
        "name": "enter",
        "fully_qualified_path": "rustc_interface::queries::QueryResult::<'a, &'tcx rustc_middle::ty::context::GlobalCtxt<'tcx>>::enter",
        "is_method": true,
        "receiver_type": {
          "type_name": "QueryResult<&'_ GlobalCtxt>",
          "crate_name": "rustc_interface",
          "module_path": "queries",
          "generic_args": [
            {
              "type_name": "&'_ GlobalCtxt",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [
                {
                  "type_name": "GlobalCtxt",
                  "crate_name": "rustc_middle",
                  "module_path": "ty::context",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "impl FnOnce(TyCtxt<'tcx>) -> T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 23,
        "column_number": 39,
        "origin_crate": "rustc_interface",
        "origin_module": "queries::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "unwrap",
        "fully_qualified_path": "std::result::Result::<T, E>::unwrap",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<QueryResult<&'_ GlobalCtxt>, ErrorGuaranteed>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "QueryResult<&'_ GlobalCtxt>",
              "crate_name": "rustc_interface",
              "module_path": "queries",
              "generic_args": [
                {
                  "type_name": "&'_ GlobalCtxt",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [
                    {
                      "type_name": "GlobalCtxt",
                      "crate_name": "rustc_middle",
                      "module_path": "ty::context",
                      "generic_args": [],
                      "is_generic_param": false,
                      "src_location": ""
                    }
                  ],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "ErrorGuaranteed",
              "crate_name": "rustc_span",
              "module_path": "",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 23,
        "column_number": 30,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "global_ctxt",
        "fully_qualified_path": "rustc_interface::Queries::<'tcx>::global_ctxt",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ Queries",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "Queries",
              "crate_name": "rustc_interface",
              "module_path": "queries",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Result<QueryResult<&'_ GlobalCtxt>, ErrorGuaranteed>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "QueryResult<&'_ GlobalCtxt>",
                "crate_name": "rustc_interface",
                "module_path": "queries",
                "generic_args": [
                  {
                    "type_name": "&'_ GlobalCtxt",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "GlobalCtxt",
                        "crate_name": "rustc_middle",
                        "module_path": "ty::context",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "ErrorGuaranteed",
                "crate_name": "rustc_span",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/fdep.rs",
        "line_number": 23,
        "column_number": 16,
        "origin_crate": "rustc_interface",
        "origin_module": "queries::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {
      "closure_1": {
        "name": "closure_1",
        "fully_qualified_path": "closure_1",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(TyCtxt)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "TyCtxt",
                "crate_name": "rustc_middle",
                "module_path": "ty::context",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "TyCtxt",
            "crate_name": "rustc_middle",
            "module_path": "ty::context",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ TyCtxt",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "TyCtxt",
                "crate_name": "rustc_middle",
                "module_path": "ty::context",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "fn(&'_ TyCtxt) -> ()",
            "crate_name": "fdep",
            "module_path": "",
            "generic_args": [
              {
                "type_name": "&'_ TyCtxt",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "TyCtxt",
                    "crate_name": "rustc_middle",
                    "module_path": "ty::context",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "()",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [],
        "functions_called": [
          {
            "name": "analyze",
            "fully_qualified_path": "fdep::analyze",
            "is_method": false,
            "receiver_type": null,
            "input_types": [
              {
                "type_name": "&'_ TyCtxt",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "TyCtxt",
                    "crate_name": "rustc_middle",
                    "module_path": "ty::context",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "output_types": [
              {
                "type_name": "()",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/fdep.rs",
            "line_number": 24,
            "column_number": 12,
            "origin_crate": "fdep",
            "origin_module": "",
            "call_type": "function"
          }
        ],
        "methods_called": [],
        "where_functions": {},
        "src_location": "src/bin/fdep.rs",
        "src_code": "|tcx| {\n            analyze(&tcx);\n        }",
        "line_number_start": 23,
        "line_number_end": 25,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      }
    },
    "src_location": "src/bin/fdep.rs",
    "src_code": "fn after_analysis<'tcx>(\n        &mut self,\n        _compiler: &Compiler,\n        queries: &'tcx Queries<'tcx>,\n    ) -> Compilation {\n        queries.global_ctxt().unwrap().enter(|tcx| {\n            analyze(&tcx);\n        });\n\n        Compilation::Stop\n    }",
    "line_number_start": 18,
    "line_number_end": 28,
    "crate_name": "fdep",
    "module_path": "",
    "visibility": "pub",
    "doc_comments": "",
    "attributes": []
  }
]