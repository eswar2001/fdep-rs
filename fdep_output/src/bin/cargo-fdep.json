[
  {
    "name": "show_error",
    "fully_qualified_path": "cargo_fdep::show_error",
    "is_method": false,
    "self_type": null,
    "input_types": [
      {
        "type_name": "impl AsRef<str>",
        "crate_name": "cargo_fdep",
        "module_path": "show_error",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "output_types": [
      {
        "type_name": "!",
        "crate_name": "core",
        "module_path": "never",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "Arguments",
        "crate_name": "core",
        "module_path": "fmt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ T) -> Argument",
        "crate_name": "core",
        "module_path": "fmt::rt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(i32) -> !",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [
          {
            "type_name": "i32",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [Argument; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[Argument; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "Argument",
                "crate_name": "core",
                "module_path": "fmt::rt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Argument",
        "crate_name": "core",
        "module_path": "fmt::rt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [&'_ str; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[&'_ str; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "!",
        "crate_name": "unknown",
        "module_path": "unknown",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(Arguments) -> ()",
        "crate_name": "std",
        "module_path": "io::stdio",
        "generic_args": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ [&'static str; ?], &'_ [Argument; ?]) -> Arguments",
        "crate_name": "core",
        "module_path": "fmt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ &'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[&'_ str; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "impl AsRef<str>",
        "crate_name": "",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": true,
        "src_location": ""
      },
      {
        "type_name": "i32",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[Argument; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"{}\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 17,
        "column_number": 13
      },
      {
        "value": "\"{}\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 17,
        "column_number": 13
      },
      {
        "value": "1",
        "literal_type": "integer",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 18,
        "column_number": 23
      }
    ],
    "functions_called": [
      {
        "name": "_print",
        "fully_qualified_path": "std::io::_print",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 143,
        "column_number": 8,
        "origin_crate": "std",
        "origin_module": "io::stdio",
        "call_type": "function"
      },
      {
        "name": "new_v1",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_v1",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 143,
        "column_number": 27,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new_display",
        "fully_qualified_path": "core::fmt::rt::Argument::<'a>::new_display",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 17,
        "column_number": 14,
        "origin_crate": "core",
        "origin_module": "fmt::rt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "exit",
        "fully_qualified_path": "std::process::exit",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "i32",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 18,
        "column_number": 4,
        "origin_crate": "std",
        "origin_module": "process",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "as_ref",
        "fully_qualified_path": "std::convert::AsRef::as_ref",
        "is_method": true,
        "receiver_type": {
          "type_name": "impl AsRef<str>",
          "crate_name": "",
          "module_path": "",
          "generic_args": [],
          "is_generic_param": true,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 17,
        "column_number": 23,
        "origin_crate": "core",
        "origin_module": "convert::AsRef",
        "call_type": "method"
      }
    ],
    "where_functions": {},
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn show_error(msg: impl AsRef<str>) -> ! {\n    println!(\"{}\", msg.as_ref());\n    std::process::exit(1)\n}",
    "line_number_start": 16,
    "line_number_end": 19,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "has_arg_flag",
    "fully_qualified_path": "cargo_fdep::has_arg_flag",
    "is_method": false,
    "self_type": null,
    "input_types": [
      {
        "type_name": "&str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "output_types": [
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Args",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "TakeWhile<Args, Closure<((&'_ String)) -> bool>>",
        "crate_name": "core",
        "module_path": "iter::adapters::take_while",
        "generic_args": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Closure<((&'_ String)) -> bool>",
            "crate_name": "cargo_fdep",
            "module_path": "has_arg_flag::{closure#0}",
            "generic_args": [
              {
                "type_name": "(&'_ String)",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "&'_ String",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "String",
                        "crate_name": "alloc",
                        "module_path": "string",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "bool",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((String)) -> bool>",
        "crate_name": "cargo_fdep",
        "module_path": "has_arg_flag::{closure#1}",
        "generic_args": [
          {
            "type_name": "(String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> Args",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((&'_ String)) -> bool>",
        "crate_name": "cargo_fdep",
        "module_path": "has_arg_flag::{closure#0}",
        "generic_args": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [],
    "functions_called": [
      {
        "name": "args",
        "fully_qualified_path": "std::env::args",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 24,
        "column_number": 19,
        "origin_crate": "std",
        "origin_module": "env",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "take_while",
        "fully_qualified_path": "std::iter::Iterator::take_while",
        "is_method": true,
        "receiver_type": {
          "type_name": "Args",
          "crate_name": "std",
          "module_path": "env",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "P",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "TakeWhile<Self, P>",
            "crate_name": "core",
            "module_path": "iter::adapters::take_while",
            "generic_args": [
              {
                "type_name": "Self",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              },
              {
                "type_name": "P",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 24,
        "column_number": 36,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "any",
        "fully_qualified_path": "std::iter::Iterator::any",
        "is_method": true,
        "receiver_type": {
          "type_name": "TakeWhile<Args, Closure<((&'_ String)) -> bool>>",
          "crate_name": "core",
          "module_path": "iter::adapters::take_while",
          "generic_args": [
            {
              "type_name": "Args",
              "crate_name": "std",
              "module_path": "env",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Closure<((&'_ String)) -> bool>",
              "crate_name": "cargo_fdep",
              "module_path": "has_arg_flag::{closure#0}",
              "generic_args": [
                {
                  "type_name": "(&'_ String)",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [
                    {
                      "type_name": "&'_ String",
                      "crate_name": "core",
                      "module_path": "primitive",
                      "generic_args": [
                        {
                          "type_name": "String",
                          "crate_name": "alloc",
                          "module_path": "string",
                          "generic_args": [],
                          "is_generic_param": false,
                          "src_location": ""
                        }
                      ],
                      "is_generic_param": false,
                      "src_location": ""
                    }
                  ],
                  "is_generic_param": false,
                  "src_location": ""
                },
                {
                  "type_name": "bool",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "F",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 25,
        "column_number": 9,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      }
    ],
    "where_functions": {
      "closure_1": {
        "name": "closure_1",
        "fully_qualified_path": "closure_1",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ String",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [
          {
            "value": "\"--\"",
            "literal_type": "&'{erased} str",
            "span": "src/bin/cargo-fdep.rs",
            "line_number": 24,
            "column_number": 60
          }
        ],
        "functions_called": [],
        "methods_called": [],
        "where_functions": {},
        "src_location": "src/bin/cargo-fdep.rs",
        "src_code": "|val| val != \"--\"",
        "line_number_start": 24,
        "line_number_end": 24,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      },
      "closure_2": {
        "name": "closure_2",
        "fully_qualified_path": "closure_2",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [],
        "functions_called": [],
        "methods_called": [],
        "where_functions": {},
        "src_location": "src/bin/cargo-fdep.rs",
        "src_code": "|val| val == name",
        "line_number_start": 25,
        "line_number_end": 25,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      }
    },
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn has_arg_flag(name: &str) -> bool {\n    // Stop searching at `--`.\n    let mut args = std::env::args().take_while(|val| val != \"--\");\n    args.any(|val| val == name)\n}",
    "line_number_start": 22,
    "line_number_end": 26,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "get_arg_flag_value",
    "fully_qualified_path": "cargo_fdep::get_arg_flag_value",
    "is_method": false,
    "self_type": null,
    "input_types": [
      {
        "type_name": "&str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "output_types": [
      {
        "type_name": "Option",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "RangeFrom<usize>",
        "crate_name": "core",
        "module_path": "ops::range",
        "generic_args": [
          {
            "type_name": "usize",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> Args",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((&'_ String)) -> bool>",
        "crate_name": "cargo_fdep",
        "module_path": "get_arg_flag_value::{closure#0}",
        "generic_args": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "usize",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(T) -> Option<T>",
        "crate_name": "core",
        "module_path": "option::Option::Some",
        "generic_args": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Option<T>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Args",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "TakeWhile<Args, Closure<((&'_ String)) -> bool>>",
        "crate_name": "core",
        "module_path": "iter::adapters::take_while",
        "generic_args": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Closure<((&'_ String)) -> bool>",
            "crate_name": "cargo_fdep",
            "module_path": "get_arg_flag_value::{closure#0}",
            "generic_args": [
              {
                "type_name": "(&'_ String)",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "&'_ String",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "String",
                        "crate_name": "alloc",
                        "module_path": "string",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "bool",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "char",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "String",
        "crate_name": "alloc",
        "module_path": "string",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<String>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "!",
        "crate_name": "unknown",
        "module_path": "unknown",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "'='",
        "literal_type": "char",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 45,
        "column_number": 37
      },
      {
        "value": "1",
        "literal_type": "unsigned integer",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 48,
        "column_number": 31
      }
    ],
    "functions_called": [
      {
        "name": "args",
        "fully_qualified_path": "std::env::args",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 31,
        "column_number": 19,
        "origin_crate": "std",
        "origin_module": "env",
        "call_type": "function"
      },
      {
        "name": "Some",
        "fully_qualified_path": "std::prelude::v1::Some",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<T>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 48,
        "column_number": 19,
        "origin_crate": "core",
        "origin_module": "option::Option::Some",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "take_while",
        "fully_qualified_path": "std::iter::Iterator::take_while",
        "is_method": true,
        "receiver_type": {
          "type_name": "Args",
          "crate_name": "std",
          "module_path": "env",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "P",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "TakeWhile<Self, P>",
            "crate_name": "core",
            "module_path": "iter::adapters::take_while",
            "generic_args": [
              {
                "type_name": "Self",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              },
              {
                "type_name": "P",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 31,
        "column_number": 36,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "next",
        "fully_qualified_path": "std::iter::Iterator::next",
        "is_method": true,
        "receiver_type": {
          "type_name": "TakeWhile<Args, Closure<((&'_ String)) -> bool>>",
          "crate_name": "core",
          "module_path": "iter::adapters::take_while",
          "generic_args": [
            {
              "type_name": "Args",
              "crate_name": "std",
              "module_path": "env",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Closure<((&'_ String)) -> bool>",
              "crate_name": "cargo_fdep",
              "module_path": "get_arg_flag_value::{closure#0}",
              "generic_args": [
                {
                  "type_name": "(&'_ String)",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [
                    {
                      "type_name": "&'_ String",
                      "crate_name": "core",
                      "module_path": "primitive",
                      "generic_args": [
                        {
                          "type_name": "String",
                          "crate_name": "alloc",
                          "module_path": "string",
                          "generic_args": [],
                          "is_generic_param": false,
                          "src_location": ""
                        }
                      ],
                      "is_generic_param": false,
                      "src_location": ""
                    }
                  ],
                  "is_generic_param": false,
                  "src_location": ""
                },
                {
                  "type_name": "bool",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Option<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 33,
        "column_number": 29,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "starts_with",
        "fully_qualified_path": "core::str::<impl str>::starts_with",
        "is_method": true,
        "receiver_type": {
          "type_name": "String",
          "crate_name": "alloc",
          "module_path": "string",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "P",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 37,
        "column_number": 16,
        "origin_crate": "core",
        "origin_module": "str::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "len",
        "fully_qualified_path": "core::str::<impl str>::len",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ str",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "str",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "usize",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 41,
        "column_number": 31,
        "origin_crate": "core",
        "origin_module": "str::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "is_empty",
        "fully_qualified_path": "core::str::<impl str>::is_empty",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ str",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "str",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 42,
        "column_number": 18,
        "origin_crate": "core",
        "origin_module": "str::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "next",
        "fully_qualified_path": "std::iter::Iterator::next",
        "is_method": true,
        "receiver_type": {
          "type_name": "TakeWhile<Args, Closure<((&'_ String)) -> bool>>",
          "crate_name": "core",
          "module_path": "iter::adapters::take_while",
          "generic_args": [
            {
              "type_name": "Args",
              "crate_name": "std",
              "module_path": "env",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Closure<((&'_ String)) -> bool>",
              "crate_name": "cargo_fdep",
              "module_path": "get_arg_flag_value::{closure#0}",
              "generic_args": [
                {
                  "type_name": "(&'_ String)",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [
                    {
                      "type_name": "&'_ String",
                      "crate_name": "core",
                      "module_path": "primitive",
                      "generic_args": [
                        {
                          "type_name": "String",
                          "crate_name": "alloc",
                          "module_path": "string",
                          "generic_args": [],
                          "is_generic_param": false,
                          "src_location": ""
                        }
                      ],
                      "is_generic_param": false,
                      "src_location": ""
                    }
                  ],
                  "is_generic_param": false,
                  "src_location": ""
                },
                {
                  "type_name": "bool",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Option<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 44,
        "column_number": 24,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "starts_with",
        "fully_qualified_path": "core::str::<impl str>::starts_with",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ str",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "str",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "P",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 45,
        "column_number": 25,
        "origin_crate": "core",
        "origin_module": "str::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "to_owned",
        "fully_qualified_path": "std::borrow::ToOwned::to_owned",
        "is_method": true,
        "receiver_type": {
          "type_name": "str",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(5:779 ~ alloc[1836]::borrow::ToOwned::Owned), .. })",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 48,
        "column_number": 36,
        "origin_crate": "alloc",
        "origin_module": "borrow::ToOwned",
        "call_type": "method"
      }
    ],
    "where_functions": {
      "closure_1": {
        "name": "closure_1",
        "fully_qualified_path": "closure_1",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ String",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [
          {
            "value": "\"--\"",
            "literal_type": "&'{erased} str",
            "span": "src/bin/cargo-fdep.rs",
            "line_number": 31,
            "column_number": 60
          }
        ],
        "functions_called": [],
        "methods_called": [],
        "where_functions": {},
        "src_location": "src/bin/cargo-fdep.rs",
        "src_code": "|val| val != \"--\"",
        "line_number_start": 31,
        "line_number_end": 31,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      }
    },
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn get_arg_flag_value(name: &str) -> Option<String> {\n    // Stop searching at `--`.\n    let mut args = std::env::args().take_while(|val| val != \"--\");\n    loop {\n        let arg = match args.next() {\n            Some(arg) => arg,\n            None => return None,\n        };\n        if !arg.starts_with(name) {\n            continue;\n        }\n        // Strip leading `name`.\n        let suffix = &arg[name.len()..];\n        if suffix.is_empty() {\n            // This argument is exactly `name`; the next one is the value.\n            return args.next();\n        } else if suffix.starts_with('=') {\n            // This argument is `name=value`; get the value.\n            // Strip leading `=`.\n            return Some(suffix[1..].to_owned());\n        }\n    }\n}",
    "line_number_start": 29,
    "line_number_end": 51,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "any_arg_flag",
    "fully_qualified_path": "cargo_fdep::any_arg_flag",
    "is_method": false,
    "self_type": null,
    "input_types": [
      {
        "type_name": "&str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      },
      {
        "type_name": "F",
        "crate_name": "cargo_fdep",
        "module_path": "any_arg_flag",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "output_types": [
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "fn() -> Args",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((&'_ String)) -> bool>",
        "crate_name": "cargo_fdep",
        "module_path": "any_arg_flag::{closure#0}",
        "generic_args": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "TakeWhile<Args, Closure<((&'_ String)) -> bool>>",
        "crate_name": "core",
        "module_path": "iter::adapters::take_while",
        "generic_args": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Closure<((&'_ String)) -> bool>",
            "crate_name": "cargo_fdep",
            "module_path": "any_arg_flag::{closure#0}",
            "generic_args": [
              {
                "type_name": "(&'_ String)",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "&'_ String",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "String",
                        "crate_name": "alloc",
                        "module_path": "string",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "bool",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Args",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "char",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "usize",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "RangeFrom<usize>",
        "crate_name": "core",
        "module_path": "ops::range",
        "generic_args": [
          {
            "type_name": "usize",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<String>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ String",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "String",
        "crate_name": "alloc",
        "module_path": "string",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "F",
        "crate_name": "",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": true,
        "src_location": ""
      },
      {
        "type_name": "!",
        "crate_name": "unknown",
        "module_path": "unknown",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "false",
        "literal_type": "boolean",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 62,
        "column_number": 27
      },
      {
        "value": "false",
        "literal_type": "boolean",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 74,
        "column_number": 31
      },
      {
        "value": "'='",
        "literal_type": "char",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 76,
        "column_number": 37
      },
      {
        "value": "1",
        "literal_type": "unsigned integer",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 79,
        "column_number": 19
      },
      {
        "value": "false",
        "literal_type": "boolean",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 81,
        "column_number": 19
      },
      {
        "value": "true",
        "literal_type": "boolean",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 85,
        "column_number": 19
      }
    ],
    "functions_called": [
      {
        "name": "args",
        "fully_qualified_path": "std::env::args",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 58,
        "column_number": 19,
        "origin_crate": "std",
        "origin_module": "env",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "take_while",
        "fully_qualified_path": "std::iter::Iterator::take_while",
        "is_method": true,
        "receiver_type": {
          "type_name": "Args",
          "crate_name": "std",
          "module_path": "env",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "P",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "TakeWhile<Self, P>",
            "crate_name": "core",
            "module_path": "iter::adapters::take_while",
            "generic_args": [
              {
                "type_name": "Self",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              },
              {
                "type_name": "P",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 58,
        "column_number": 36,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "next",
        "fully_qualified_path": "std::iter::Iterator::next",
        "is_method": true,
        "receiver_type": {
          "type_name": "TakeWhile<Args, Closure<((&'_ String)) -> bool>>",
          "crate_name": "core",
          "module_path": "iter::adapters::take_while",
          "generic_args": [
            {
              "type_name": "Args",
              "crate_name": "std",
              "module_path": "env",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Closure<((&'_ String)) -> bool>",
              "crate_name": "cargo_fdep",
              "module_path": "any_arg_flag::{closure#0}",
              "generic_args": [
                {
                  "type_name": "(&'_ String)",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [
                    {
                      "type_name": "&'_ String",
                      "crate_name": "core",
                      "module_path": "primitive",
                      "generic_args": [
                        {
                          "type_name": "String",
                          "crate_name": "alloc",
                          "module_path": "string",
                          "generic_args": [],
                          "is_generic_param": false,
                          "src_location": ""
                        }
                      ],
                      "is_generic_param": false,
                      "src_location": ""
                    }
                  ],
                  "is_generic_param": false,
                  "src_location": ""
                },
                {
                  "type_name": "bool",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Option<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 60,
        "column_number": 29,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "starts_with",
        "fully_qualified_path": "core::str::<impl str>::starts_with",
        "is_method": true,
        "receiver_type": {
          "type_name": "String",
          "crate_name": "alloc",
          "module_path": "string",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "P",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 64,
        "column_number": 16,
        "origin_crate": "core",
        "origin_module": "str::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "len",
        "fully_qualified_path": "core::str::<impl str>::len",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ str",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "str",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "usize",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 69,
        "column_number": 31,
        "origin_crate": "core",
        "origin_module": "str::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "is_empty",
        "fully_qualified_path": "core::str::<impl str>::is_empty",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ str",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "str",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 70,
        "column_number": 30,
        "origin_crate": "core",
        "origin_module": "str::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "next",
        "fully_qualified_path": "std::iter::Iterator::next",
        "is_method": true,
        "receiver_type": {
          "type_name": "TakeWhile<Args, Closure<((&'_ String)) -> bool>>",
          "crate_name": "core",
          "module_path": "iter::adapters::take_while",
          "generic_args": [
            {
              "type_name": "Args",
              "crate_name": "std",
              "module_path": "env",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Closure<((&'_ String)) -> bool>",
              "crate_name": "cargo_fdep",
              "module_path": "any_arg_flag::{closure#0}",
              "generic_args": [
                {
                  "type_name": "(&'_ String)",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [
                    {
                      "type_name": "&'_ String",
                      "crate_name": "core",
                      "module_path": "primitive",
                      "generic_args": [
                        {
                          "type_name": "String",
                          "crate_name": "alloc",
                          "module_path": "string",
                          "generic_args": [],
                          "is_generic_param": false,
                          "src_location": ""
                        }
                      ],
                      "is_generic_param": false,
                      "src_location": ""
                    }
                  ],
                  "is_generic_param": false,
                  "src_location": ""
                },
                {
                  "type_name": "bool",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Option<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 72,
        "column_number": 23,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "starts_with",
        "fully_qualified_path": "core::str::<impl str>::starts_with",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ str",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "str",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "P",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 76,
        "column_number": 25,
        "origin_crate": "core",
        "origin_module": "str::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "to_owned",
        "fully_qualified_path": "std::borrow::ToOwned::to_owned",
        "is_method": true,
        "receiver_type": {
          "type_name": "str",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(5:779 ~ alloc[1836]::borrow::ToOwned::Owned), .. })",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 79,
        "column_number": 24,
        "origin_crate": "alloc",
        "origin_module": "borrow::ToOwned",
        "call_type": "method"
      }
    ],
    "where_functions": {
      "closure_1": {
        "name": "closure_1",
        "fully_qualified_path": "closure_1",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ String",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [
          {
            "value": "\"--\"",
            "literal_type": "&'{erased} str",
            "span": "src/bin/cargo-fdep.rs",
            "line_number": 58,
            "column_number": 60
          }
        ],
        "functions_called": [],
        "methods_called": [],
        "where_functions": {},
        "src_location": "src/bin/cargo-fdep.rs",
        "src_code": "|val| val != \"--\"",
        "line_number_start": 58,
        "line_number_end": 58,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      }
    },
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn any_arg_flag<F>(name: &str, mut check: F) -> bool\nwhere\n    F: FnMut(&str) -> bool,\n{\n    // Stop searching at `--`.\n    let mut args = std::env::args().take_while(|val| val != \"--\");\n    loop {\n        let arg = match args.next() {\n            Some(arg) => arg,\n            None => return false,\n        };\n        if !arg.starts_with(name) {\n            continue;\n        }\n\n        // Strip leading `name`.\n        let suffix = &arg[name.len()..];\n        let value = if suffix.is_empty() {\n            // This argument is exactly `name`; the next one is the value.\n            match args.next() {\n                Some(arg) => arg,\n                None => return false,\n            }\n        } else if suffix.starts_with('=') {\n            // This argument is `name=value`; get the value.\n            // Strip leading `=`.\n            suffix[1..].to_owned()\n        } else {\n            return false;\n        };\n\n        if check(&value) {\n            return true;\n        }\n    }\n}",
    "line_number_start": 53,
    "line_number_end": 88,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "get_first_arg_with_rs_suffix",
    "fully_qualified_path": "cargo_fdep::get_first_arg_with_rs_suffix",
    "is_method": false,
    "self_type": null,
    "input_types": [],
    "output_types": [
      {
        "type_name": "Option",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "Option<String>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> Args",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "TakeWhile<Args, Closure<((&'_ String)) -> bool>>",
        "crate_name": "core",
        "module_path": "iter::adapters::take_while",
        "generic_args": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Closure<((&'_ String)) -> bool>",
            "crate_name": "cargo_fdep",
            "module_path": "get_first_arg_with_rs_suffix::{closure#0}",
            "generic_args": [
              {
                "type_name": "(&'_ String)",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "&'_ String",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "String",
                        "crate_name": "alloc",
                        "module_path": "string",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "bool",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((&'_ String)) -> bool>",
        "crate_name": "cargo_fdep",
        "module_path": "get_first_arg_with_rs_suffix::{closure#0}",
        "generic_args": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((&'_ String)) -> bool>",
        "crate_name": "cargo_fdep",
        "module_path": "get_first_arg_with_rs_suffix::{closure#1}",
        "generic_args": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Args",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [],
    "functions_called": [
      {
        "name": "args",
        "fully_qualified_path": "std::env::args",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 93,
        "column_number": 19,
        "origin_crate": "std",
        "origin_module": "env",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "take_while",
        "fully_qualified_path": "std::iter::Iterator::take_while",
        "is_method": true,
        "receiver_type": {
          "type_name": "Args",
          "crate_name": "std",
          "module_path": "env",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "P",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "TakeWhile<Self, P>",
            "crate_name": "core",
            "module_path": "iter::adapters::take_while",
            "generic_args": [
              {
                "type_name": "Self",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              },
              {
                "type_name": "P",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 93,
        "column_number": 36,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "find",
        "fully_qualified_path": "std::iter::Iterator::find",
        "is_method": true,
        "receiver_type": {
          "type_name": "TakeWhile<Args, Closure<((&'_ String)) -> bool>>",
          "crate_name": "core",
          "module_path": "iter::adapters::take_while",
          "generic_args": [
            {
              "type_name": "Args",
              "crate_name": "std",
              "module_path": "env",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Closure<((&'_ String)) -> bool>",
              "crate_name": "cargo_fdep",
              "module_path": "get_first_arg_with_rs_suffix::{closure#0}",
              "generic_args": [
                {
                  "type_name": "(&'_ String)",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [
                    {
                      "type_name": "&'_ String",
                      "crate_name": "core",
                      "module_path": "primitive",
                      "generic_args": [
                        {
                          "type_name": "String",
                          "crate_name": "alloc",
                          "module_path": "string",
                          "generic_args": [],
                          "is_generic_param": false,
                          "src_location": ""
                        }
                      ],
                      "is_generic_param": false,
                      "src_location": ""
                    }
                  ],
                  "is_generic_param": false,
                  "src_location": ""
                },
                {
                  "type_name": "bool",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "P",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 94,
        "column_number": 9,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      }
    ],
    "where_functions": {
      "closure_1": {
        "name": "closure_1",
        "fully_qualified_path": "closure_1",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ String",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [
          {
            "value": "\"--\"",
            "literal_type": "&'{erased} str",
            "span": "src/bin/cargo-fdep.rs",
            "line_number": 93,
            "column_number": 60
          }
        ],
        "functions_called": [],
        "methods_called": [],
        "where_functions": {},
        "src_location": "src/bin/cargo-fdep.rs",
        "src_code": "|val| val != \"--\"",
        "line_number_start": 93,
        "line_number_end": 93,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      },
      "closure_2": {
        "name": "closure_2",
        "fully_qualified_path": "closure_2",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ String",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [
          {
            "value": "\".rs\"",
            "literal_type": "&'{erased} str",
            "span": "src/bin/cargo-fdep.rs",
            "line_number": 94,
            "column_number": 34
          }
        ],
        "functions_called": [],
        "methods_called": [
          {
            "name": "ends_with",
            "fully_qualified_path": "core::str::<impl str>::ends_with",
            "is_method": true,
            "receiver_type": {
              "type_name": "&'_ String",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [
                {
                  "type_name": "String",
                  "crate_name": "alloc",
                  "module_path": "string",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            },
            "input_types": [
              {
                "type_name": "P",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "output_types": [
              {
                "type_name": "bool",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/cargo-fdep.rs",
            "line_number": 94,
            "column_number": 24,
            "origin_crate": "core",
            "origin_module": "str::{{impl}}",
            "call_type": "method"
          }
        ],
        "where_functions": {},
        "src_location": "src/bin/cargo-fdep.rs",
        "src_code": "|arg| arg.ends_with(\".rs\")",
        "line_number_start": 94,
        "line_number_end": 94,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      }
    },
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn get_first_arg_with_rs_suffix() -> Option<String> {\n    // Stop searching at `--`.\n    let mut args = std::env::args().take_while(|val| val != \"--\");\n    args.find(|arg| arg.ends_with(\".rs\"))\n}",
    "line_number_start": 91,
    "line_number_end": 95,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "version_info",
    "fully_qualified_path": "cargo_fdep::version_info",
    "is_method": false,
    "self_type": null,
    "input_types": [],
    "output_types": [
      {
        "type_name": "VersionMeta",
        "crate_name": "rustc_version",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "VersionMeta",
        "crate_name": "rustc_version",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "PathBuf",
        "crate_name": "std",
        "module_path": "path",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<VersionMeta, Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "VersionMeta",
            "crate_name": "rustc_version",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "rustc_version",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Command",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(S) -> Command",
        "crate_name": "std",
        "module_path": "process::{{impl}}",
        "generic_args": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(Command) -> Result<VersionMeta, Error>",
        "crate_name": "rustc_version",
        "module_path": "{{impl}}",
        "generic_args": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Result<VersionMeta, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "VersionMeta",
                "crate_name": "rustc_version",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "rustc_version",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> PathBuf",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"failed to determine underlying rustc version of Fdep\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 99,
        "column_number": 16
      }
    ],
    "functions_called": [
      {
        "name": "for_command",
        "fully_qualified_path": "rustc_version::VersionMeta::for_command",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Result<VersionMeta, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "VersionMeta",
                "crate_name": "rustc_version",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "rustc_version",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 98,
        "column_number": 4,
        "origin_crate": "rustc_version",
        "origin_module": "{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new",
        "fully_qualified_path": "std::process::Command::new",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 98,
        "column_number": 29,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "find_fdep",
        "fully_qualified_path": "find_fdep",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 98,
        "column_number": 42,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "expect",
        "fully_qualified_path": "std::result::Result::<T, E>::expect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<VersionMeta, Error>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "VersionMeta",
              "crate_name": "rustc_version",
              "module_path": "",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Error",
              "crate_name": "rustc_version",
              "module_path": "",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 99,
        "column_number": 9,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {},
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn version_info() -> VersionMeta {\n    VersionMeta::for_command(Command::new(find_fdep()))\n        .expect(\"failed to determine underlying rustc version of Fdep\")\n}",
    "line_number_start": 97,
    "line_number_end": 100,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "cargo_package",
    "fully_qualified_path": "cargo_fdep::cargo_package",
    "is_method": false,
    "self_type": null,
    "input_types": [],
    "output_types": [
      {
        "type_name": "Package",
        "crate_name": "cargo_metadata",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "Error",
        "crate_name": "cargo_metadata",
        "module_path": "errors",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((String)) -> PathBuf>",
        "crate_name": "cargo_fdep",
        "module_path": "cargo_package::{closure#0}",
        "generic_args": [
          {
            "type_name": "(String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ PathBuf",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ Option<PathBuf>",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Option<PathBuf>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "PathBuf",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> Result<PathBuf, Error>",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [
          {
            "type_name": "Result<PathBuf, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "PathBuf",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<Metadata, Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "Metadata",
            "crate_name": "cargo_metadata",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "cargo_metadata",
            "module_path": "errors",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "usize",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(impl AsRef<str>) -> !",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "impl AsRef<str>",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Arguments",
        "crate_name": "core",
        "module_path": "fmt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<PathBuf, Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "std",
            "module_path": "io::error",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<String>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<PathBuf>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ Error",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Error",
            "crate_name": "cargo_metadata",
            "module_path": "errors",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Package",
        "crate_name": "cargo_metadata",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Argument",
        "crate_name": "core",
        "module_path": "fmt::rt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Metadata",
        "crate_name": "cargo_metadata",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> MetadataCommand",
        "crate_name": "cargo_metadata",
        "module_path": "{{impl}}",
        "generic_args": [
          {
            "type_name": "MetadataCommand",
            "crate_name": "cargo_metadata",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [&'_ str; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[&'_ str; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((&'_ Package)) -> bool>",
        "crate_name": "cargo_fdep",
        "module_path": "cargo_package::{closure#1}",
        "generic_args": [
          {
            "type_name": "(&'_ Package)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ Package",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "Package",
                    "crate_name": "cargo_metadata",
                    "module_path": "",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ str) -> Option<String>",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Option<String>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "MetadataCommand",
        "crate_name": "cargo_metadata",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "!",
        "crate_name": "unknown",
        "module_path": "unknown",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<(()) -> usize>",
        "crate_name": "cargo_fdep",
        "module_path": "cargo_package::{closure#2}",
        "generic_args": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "usize",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<usize>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "usize",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Iter<Package>",
        "crate_name": "core",
        "module_path": "slice::iter",
        "generic_args": [
          {
            "type_name": "Package",
            "crate_name": "cargo_metadata",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Vec<Package, Global>",
        "crate_name": "alloc",
        "module_path": "vec",
        "generic_args": [
          {
            "type_name": "Package",
            "crate_name": "cargo_metadata",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Global",
            "crate_name": "alloc",
            "module_path": "alloc",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[&'_ str; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [Argument; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[Argument; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "Argument",
                "crate_name": "core",
                "module_path": "fmt::rt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ [&'static str; ?], &'_ [Argument; ?]) -> Arguments",
        "crate_name": "core",
        "module_path": "fmt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ mut MetadataCommand",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "MetadataCommand",
            "crate_name": "cargo_metadata",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(Arguments) -> String",
        "crate_name": "alloc",
        "module_path": "fmt",
        "generic_args": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "String",
        "crate_name": "alloc",
        "module_path": "string",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[Argument; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(T) -> T",
        "crate_name": "core",
        "module_path": "hint",
        "generic_args": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ T) -> Argument",
        "crate_name": "core",
        "module_path": "fmt::rt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"--manifest-path\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 105,
        "column_number": 27
      },
      {
        "value": "\"Could not obtain Cargo metadata\\n{}\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 113,
        "column_number": 37
      }
    ],
    "functions_called": [
      {
        "name": "get_arg_flag_value",
        "fully_qualified_path": "get_arg_flag_value",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<String>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 105,
        "column_number": 8,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "new",
        "fully_qualified_path": "cargo_metadata::MetadataCommand::new",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "MetadataCommand",
            "crate_name": "cargo_metadata",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 107,
        "column_number": 18,
        "origin_crate": "cargo_metadata",
        "origin_module": "{{impl}}",
        "call_type": "function"
      },
      {
        "name": "show_error",
        "fully_qualified_path": "show_error",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "impl AsRef<str>",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 113,
        "column_number": 18,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "must_use",
        "fully_qualified_path": "std::hint::must_use",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs",
        "line_number": 127,
        "column_number": 8,
        "origin_crate": "core",
        "origin_module": "hint",
        "call_type": "function"
      },
      {
        "name": "format",
        "fully_qualified_path": "std::fmt::format",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs",
        "line_number": 128,
        "column_number": 22,
        "origin_crate": "alloc",
        "origin_module": "fmt",
        "call_type": "function"
      },
      {
        "name": "new_v1",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_v1",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs",
        "line_number": 128,
        "column_number": 42,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new_display",
        "fully_qualified_path": "core::fmt::rt::Argument::<'a>::new_display",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 113,
        "column_number": 71,
        "origin_crate": "core",
        "origin_module": "fmt::rt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "current_dir",
        "fully_qualified_path": "std::env::current_dir",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "Result<PathBuf, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "PathBuf",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 115,
        "column_number": 22,
        "origin_crate": "std",
        "origin_module": "env",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "map",
        "fully_qualified_path": "std::option::Option::<T>::map",
        "is_method": true,
        "receiver_type": {
          "type_name": "Option<String>",
          "crate_name": "core",
          "module_path": "option",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "F",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<U>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "U",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 105,
        "column_number": 46,
        "origin_crate": "core",
        "origin_module": "option::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "manifest_path",
        "fully_qualified_path": "cargo_metadata::MetadataCommand::manifest_path",
        "is_method": true,
        "receiver_type": {
          "type_name": "MetadataCommand",
          "crate_name": "cargo_metadata",
          "module_path": "",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "impl Into<PathBuf>",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut MetadataCommand",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "MetadataCommand",
                "crate_name": "cargo_metadata",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 109,
        "column_number": 12,
        "origin_crate": "cargo_metadata",
        "origin_module": "{{impl}}",
        "call_type": "method"
      },
      {
        "name": "exec",
        "fully_qualified_path": "cargo_metadata::MetadataCommand::exec",
        "is_method": true,
        "receiver_type": {
          "type_name": "MetadataCommand",
          "crate_name": "cargo_metadata",
          "module_path": "",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Result<Metadata, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "Metadata",
                "crate_name": "cargo_metadata",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "cargo_metadata",
                "module_path": "errors",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 111,
        "column_number": 33,
        "origin_crate": "cargo_metadata",
        "origin_module": "{{impl}}",
        "call_type": "method"
      },
      {
        "name": "unwrap_or_else",
        "fully_qualified_path": "std::option::Option::<T>::unwrap_or_else",
        "is_method": true,
        "receiver_type": {
          "type_name": "Option<usize>",
          "crate_name": "core",
          "module_path": "option",
          "generic_args": [
            {
              "type_name": "usize",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "F",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 135,
        "column_number": 9,
        "origin_crate": "core",
        "origin_module": "option::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "position",
        "fully_qualified_path": "std::iter::Iterator::position",
        "is_method": true,
        "receiver_type": {
          "type_name": "Iter<Package>",
          "crate_name": "core",
          "module_path": "slice::iter",
          "generic_args": [
            {
              "type_name": "Package",
              "crate_name": "cargo_metadata",
              "module_path": "",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "P",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<usize>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "usize",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 120,
        "column_number": 9,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "iter",
        "fully_qualified_path": "core::slice::<impl [T]>::iter",
        "is_method": true,
        "receiver_type": {
          "type_name": "Vec<Package, Global>",
          "crate_name": "alloc",
          "module_path": "vec",
          "generic_args": [
            {
              "type_name": "Package",
              "crate_name": "cargo_metadata",
              "module_path": "",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Global",
              "crate_name": "alloc",
              "module_path": "alloc",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Iter<T>",
            "crate_name": "core",
            "module_path": "slice::iter",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 119,
        "column_number": 9,
        "origin_crate": "core",
        "origin_module": "slice::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "remove",
        "fully_qualified_path": "std::vec::Vec::<T, A>::remove",
        "is_method": true,
        "receiver_type": {
          "type_name": "Vec<Package, Global>",
          "crate_name": "alloc",
          "module_path": "vec",
          "generic_args": [
            {
              "type_name": "Package",
              "crate_name": "cargo_metadata",
              "module_path": "",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Global",
              "crate_name": "alloc",
              "module_path": "alloc",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "usize",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 139,
        "column_number": 22,
        "origin_crate": "alloc",
        "origin_module": "vec::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {
      "closure_3": {
        "name": "closure_3",
        "fully_qualified_path": "closure_3",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "usize",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "fn(impl AsRef<str>) -> !",
            "crate_name": "cargo_fdep",
            "module_path": "",
            "generic_args": [
              {
                "type_name": "impl AsRef<str>",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              },
              {
                "type_name": "!",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [
          {
            "value": "\"This seems to be a workspace, which is not supported by cargo-fdep\"",
            "literal_type": "&'{erased} str",
            "span": "src/bin/cargo-fdep.rs",
            "line_number": 136,
            "column_number": 23
          }
        ],
        "functions_called": [
          {
            "name": "show_error",
            "fully_qualified_path": "show_error",
            "is_method": false,
            "receiver_type": null,
            "input_types": [
              {
                "type_name": "impl AsRef<str>",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "output_types": [
              {
                "type_name": "!",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/cargo-fdep.rs",
            "line_number": 136,
            "column_number": 12,
            "origin_crate": "cargo_fdep",
            "origin_module": "",
            "call_type": "function"
          }
        ],
        "methods_called": [],
        "where_functions": {},
        "src_location": "src/bin/cargo-fdep.rs",
        "src_code": "|| {\n            show_error(\"This seems to be a workspace, which is not supported by cargo-fdep\");\n        }",
        "line_number_start": 135,
        "line_number_end": 137,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      },
      "closure_1": {
        "name": "closure_1",
        "fully_qualified_path": "closure_1",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Result<PathBuf, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "PathBuf",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "fn(&'_ S) -> &'_ Path",
            "crate_name": "std",
            "module_path": "path::{{impl}}",
            "generic_args": [
              {
                "type_name": "&'_ S",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "S",
                    "crate_name": "",
                    "module_path": "",
                    "generic_args": [],
                    "is_generic_param": true,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "&'_ Path",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "Path",
                    "crate_name": "std",
                    "module_path": "path",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ String",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ Path",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Path",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [],
        "functions_called": [
          {
            "name": "new",
            "fully_qualified_path": "std::path::Path::new",
            "is_method": false,
            "receiver_type": null,
            "input_types": [
              {
                "type_name": "&'_ S",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "S",
                    "crate_name": "",
                    "module_path": "",
                    "generic_args": [],
                    "is_generic_param": true,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "output_types": [
              {
                "type_name": "&'_ Path",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "Path",
                    "crate_name": "std",
                    "module_path": "path",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/cargo-fdep.rs",
            "line_number": 105,
            "column_number": 54,
            "origin_crate": "std",
            "origin_module": "path::{{impl}}",
            "call_type": "function"
          }
        ],
        "methods_called": [
          {
            "name": "unwrap",
            "fully_qualified_path": "std::result::Result::<T, E>::unwrap",
            "is_method": true,
            "receiver_type": {
              "type_name": "Result<PathBuf, Error>",
              "crate_name": "core",
              "module_path": "result",
              "generic_args": [
                {
                  "type_name": "PathBuf",
                  "crate_name": "std",
                  "module_path": "path",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                },
                {
                  "type_name": "Error",
                  "crate_name": "std",
                  "module_path": "io::error",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            },
            "input_types": [],
            "output_types": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/cargo-fdep.rs",
            "line_number": 105,
            "column_number": 83,
            "origin_crate": "core",
            "origin_module": "result::{{impl}}",
            "call_type": "method"
          },
          {
            "name": "canonicalize",
            "fully_qualified_path": "std::path::Path::canonicalize",
            "is_method": true,
            "receiver_type": {
              "type_name": "&'_ Path",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [
                {
                  "type_name": "Path",
                  "crate_name": "std",
                  "module_path": "path",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            },
            "input_types": [],
            "output_types": [
              {
                "type_name": "Result<PathBuf, Error>",
                "crate_name": "core",
                "module_path": "result",
                "generic_args": [
                  {
                    "type_name": "PathBuf",
                    "crate_name": "std",
                    "module_path": "path",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  },
                  {
                    "type_name": "Error",
                    "crate_name": "std",
                    "module_path": "io::error",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/cargo-fdep.rs",
            "line_number": 105,
            "column_number": 68,
            "origin_crate": "std",
            "origin_module": "path::{{impl}}",
            "call_type": "method"
          }
        ],
        "where_functions": {},
        "src_location": "src/bin/cargo-fdep.rs",
        "src_code": "|m| Path::new(&m).canonicalize().unwrap()",
        "line_number_start": 105,
        "line_number_end": 105,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      },
      "closure_2": {
        "name": "closure_2",
        "fully_qualified_path": "closure_2",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(&'_ Package)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ Package",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "Package",
                    "crate_name": "cargo_metadata",
                    "module_path": "",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "Option<&'_ Path>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "&'_ Path",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "Path",
                    "crate_name": "std",
                    "module_path": "path",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ Path",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Path",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Result<&'_ PathBuf, &'_ Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "&'_ PathBuf",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "PathBuf",
                    "crate_name": "std",
                    "module_path": "path",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "&'_ Error",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "Error",
                    "crate_name": "std",
                    "module_path": "io::error",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "fn(&'_ S) -> &'_ Path",
            "crate_name": "std",
            "module_path": "path::{{impl}}",
            "generic_args": [
              {
                "type_name": "&'_ S",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "S",
                    "crate_name": "",
                    "module_path": "",
                    "generic_args": [],
                    "is_generic_param": true,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "&'_ Path",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "Path",
                    "crate_name": "std",
                    "module_path": "path",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Option<PathBuf>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "PathBuf",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ Utf8PathBuf",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Utf8PathBuf",
                "crate_name": "camino",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Utf8PathBuf",
            "crate_name": "camino",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ Option<PathBuf>",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Option<PathBuf>",
                "crate_name": "core",
                "module_path": "option",
                "generic_args": [
                  {
                    "type_name": "PathBuf",
                    "crate_name": "std",
                    "module_path": "path",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ PathBuf",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "PathBuf",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ Package",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Package",
                "crate_name": "cargo_metadata",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Result<PathBuf, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "PathBuf",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [
          {
            "value": "\"could not read current directory\"",
            "literal_type": "&'{erased} str",
            "span": "src/bin/cargo-fdep.rs",
            "line_number": 128,
            "column_number": 28
          },
          {
            "value": "\"could not find parent directory of package manifest\"",
            "literal_type": "&'{erased} str",
            "span": "src/bin/cargo-fdep.rs",
            "line_number": 131,
            "column_number": 28
          }
        ],
        "functions_called": [
          {
            "name": "new",
            "fully_qualified_path": "std::path::Path::new",
            "is_method": false,
            "receiver_type": null,
            "input_types": [
              {
                "type_name": "&'_ S",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "S",
                    "crate_name": "",
                    "module_path": "",
                    "generic_args": [],
                    "is_generic_param": true,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "output_types": [
              {
                "type_name": "&'_ Path",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "Path",
                    "crate_name": "std",
                    "module_path": "path",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/cargo-fdep.rs",
            "line_number": 121,
            "column_number": 40,
            "origin_crate": "std",
            "origin_module": "path::{{impl}}",
            "call_type": "function"
          }
        ],
        "methods_called": [
          {
            "name": "expect",
            "fully_qualified_path": "std::result::Result::<T, E>::expect",
            "is_method": true,
            "receiver_type": {
              "type_name": "Result<&'_ PathBuf, &'_ Error>",
              "crate_name": "core",
              "module_path": "result",
              "generic_args": [
                {
                  "type_name": "&'_ PathBuf",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [
                    {
                      "type_name": "PathBuf",
                      "crate_name": "std",
                      "module_path": "path",
                      "generic_args": [],
                      "is_generic_param": false,
                      "src_location": ""
                    }
                  ],
                  "is_generic_param": false,
                  "src_location": ""
                },
                {
                  "type_name": "&'_ Error",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [
                    {
                      "type_name": "Error",
                      "crate_name": "std",
                      "module_path": "io::error",
                      "generic_args": [],
                      "is_generic_param": false,
                      "src_location": ""
                    }
                  ],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            },
            "input_types": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "output_types": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/cargo-fdep.rs",
            "line_number": 128,
            "column_number": 21,
            "origin_crate": "core",
            "origin_module": "result::{{impl}}",
            "call_type": "method"
          },
          {
            "name": "as_ref",
            "fully_qualified_path": "std::result::Result::<T, E>::as_ref",
            "is_method": true,
            "receiver_type": {
              "type_name": "Result<PathBuf, Error>",
              "crate_name": "core",
              "module_path": "result",
              "generic_args": [
                {
                  "type_name": "PathBuf",
                  "crate_name": "std",
                  "module_path": "path",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                },
                {
                  "type_name": "Error",
                  "crate_name": "std",
                  "module_path": "io::error",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            },
            "input_types": [],
            "output_types": [
              {
                "type_name": "Result<&'_ T, &'_ E>",
                "crate_name": "core",
                "module_path": "result",
                "generic_args": [
                  {
                    "type_name": "&'_ T",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "T",
                        "crate_name": "",
                        "module_path": "",
                        "generic_args": [],
                        "is_generic_param": true,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  },
                  {
                    "type_name": "&'_ E",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "E",
                        "crate_name": "",
                        "module_path": "",
                        "generic_args": [],
                        "is_generic_param": true,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/cargo-fdep.rs",
            "line_number": 127,
            "column_number": 21,
            "origin_crate": "core",
            "origin_module": "result::{{impl}}",
            "call_type": "method"
          },
          {
            "name": "expect",
            "fully_qualified_path": "std::option::Option::<T>::expect",
            "is_method": true,
            "receiver_type": {
              "type_name": "Option<&'_ Path>",
              "crate_name": "core",
              "module_path": "option",
              "generic_args": [
                {
                  "type_name": "&'_ Path",
                  "crate_name": "core",
                  "module_path": "primitive",
                  "generic_args": [
                    {
                      "type_name": "Path",
                      "crate_name": "std",
                      "module_path": "path",
                      "generic_args": [],
                      "is_generic_param": false,
                      "src_location": ""
                    }
                  ],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            },
            "input_types": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "output_types": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/cargo-fdep.rs",
            "line_number": 131,
            "column_number": 21,
            "origin_crate": "core",
            "origin_module": "option::{{impl}}",
            "call_type": "method"
          },
          {
            "name": "parent",
            "fully_qualified_path": "std::path::Path::parent",
            "is_method": true,
            "receiver_type": {
              "type_name": "&'_ Path",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [
                {
                  "type_name": "Path",
                  "crate_name": "std",
                  "module_path": "path",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            },
            "input_types": [],
            "output_types": [
              {
                "type_name": "Option<&'_ Path>",
                "crate_name": "core",
                "module_path": "option",
                "generic_args": [
                  {
                    "type_name": "&'_ Path",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "Path",
                        "crate_name": "std",
                        "module_path": "path",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/cargo-fdep.rs",
            "line_number": 130,
            "column_number": 21,
            "origin_crate": "std",
            "origin_module": "path::{{impl}}",
            "call_type": "method"
          }
        ],
        "where_functions": {},
        "src_location": "src/bin/cargo-fdep.rs",
        "src_code": "|package| {\n            let package_manifest_path = Path::new(&package.manifest_path);\n\n            if let Some(manifest_path) = &manifest_path {\n                package_manifest_path == manifest_path\n            } else {\n                let current_dir = current_dir\n                    .as_ref()\n                    .expect(\"could not read current directory\");\n                let package_manifest_directory = package_manifest_path\n                    .parent()\n                    .expect(\"could not find parent directory of package manifest\");\n                package_manifest_directory == current_dir\n            }\n        }",
        "line_number_start": 120,
        "line_number_end": 134,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      }
    },
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn cargo_package() -> cargo_metadata::Package {\n    // We need to get the manifest, and then the metadata, to enumerate targets.\n    let manifest_path =\n        get_arg_flag_value(\"--manifest-path\").map(|m| Path::new(&m).canonicalize().unwrap());\n\n    let mut cmd = cargo_metadata::MetadataCommand::new();\n    if let Some(manifest_path) = &manifest_path {\n        cmd.manifest_path(manifest_path);\n    }\n    let mut metadata = match cmd.exec() {\n        Ok(metadata) => metadata,\n        Err(e) => show_error(format!(\"Could not obtain Cargo metadata\\n{}\", e)),\n    };\n    let current_dir = std::env::current_dir();\n\n    let package_index = metadata\n        .packages\n        .iter()\n        .position(|package| {\n            let package_manifest_path = Path::new(&package.manifest_path);\n\n            if let Some(manifest_path) = &manifest_path {\n                package_manifest_path == manifest_path\n            } else {\n                let current_dir = current_dir\n                    .as_ref()\n                    .expect(\"could not read current directory\");\n                let package_manifest_directory = package_manifest_path\n                    .parent()\n                    .expect(\"could not find parent directory of package manifest\");\n                package_manifest_directory == current_dir\n            }\n        })\n        .unwrap_or_else(|| {\n            show_error(\"This seems to be a workspace, which is not supported by cargo-fdep\");\n        });\n\n    metadata.packages.remove(package_index)\n}",
    "line_number_start": 102,
    "line_number_end": 140,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "find_fdep",
    "fully_qualified_path": "cargo_fdep::find_fdep",
    "is_method": false,
    "self_type": null,
    "input_types": [],
    "output_types": [
      {
        "type_name": "PathBuf",
        "crate_name": "std",
        "module_path": "path",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "fn() -> Result<PathBuf, Error>",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [
          {
            "type_name": "Result<PathBuf, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "PathBuf",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "PathBuf",
        "crate_name": "std",
        "module_path": "path",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<PathBuf, Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "std",
            "module_path": "io::error",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"current executable path invalid\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 144,
        "column_number": 50
      },
      {
        "value": "\"fdep\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 145,
        "column_number": 23
      }
    ],
    "functions_called": [
      {
        "name": "current_exe",
        "fully_qualified_path": "std::env::current_exe",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "Result<PathBuf, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "PathBuf",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 144,
        "column_number": 19,
        "origin_crate": "std",
        "origin_module": "env",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "expect",
        "fully_qualified_path": "std::result::Result::<T, E>::expect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<PathBuf, Error>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "PathBuf",
              "crate_name": "std",
              "module_path": "path",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Error",
              "crate_name": "std",
              "module_path": "io::error",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 144,
        "column_number": 43,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "set_file_name",
        "fully_qualified_path": "std::path::PathBuf::set_file_name",
        "is_method": true,
        "receiver_type": {
          "type_name": "PathBuf",
          "crate_name": "std",
          "module_path": "path",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 145,
        "column_number": 9,
        "origin_crate": "std",
        "origin_module": "path::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {},
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn find_fdep() -> PathBuf {\n    let mut path = std::env::current_exe().expect(\"current executable path invalid\");\n    path.set_file_name(\"fdep\");\n    path\n}",
    "line_number_start": 143,
    "line_number_end": 147,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "test_sysroot_consistency",
    "fully_qualified_path": "cargo_fdep::test_sysroot_consistency",
    "is_method": false,
    "self_type": null,
    "input_types": [],
    "output_types": [
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "types_used": [
      {
        "type_name": "!",
        "crate_name": "unknown",
        "module_path": "unknown",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Arguments",
        "crate_name": "core",
        "module_path": "fmt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [&'_ str; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[&'_ str; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(T) -> T",
        "crate_name": "core",
        "module_path": "hint",
        "generic_args": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "String",
        "crate_name": "alloc",
        "module_path": "string",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ Display",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Display",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> PathBuf",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(impl AsRef<str>) -> !",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "impl AsRef<str>",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ [&'static str; ?], &'_ [Argument; ?]) -> Arguments",
        "crate_name": "core",
        "module_path": "fmt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "PathBuf",
        "crate_name": "std",
        "module_path": "path",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(S) -> Command",
        "crate_name": "std",
        "module_path": "process::{{impl}}",
        "generic_args": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Display",
        "crate_name": "std",
        "module_path": "path",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [Argument; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[Argument; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "Argument",
                "crate_name": "core",
                "module_path": "fmt::rt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ T) -> Argument",
        "crate_name": "core",
        "module_path": "fmt::rt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Command",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(Arguments) -> String",
        "crate_name": "alloc",
        "module_path": "fmt",
        "generic_args": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[&'_ str; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[Argument; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(Command) -> PathBuf",
        "crate_name": "cargo_fdep",
        "module_path": "test_sysroot_consistency",
        "generic_args": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Argument",
        "crate_name": "core",
        "module_path": "fmt::rt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"rustc\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 173,
        "column_number": 49
      },
      {
        "value": "\"fdep was built for a different sysroot than the rustc in your current toolchain.\\n\\\n             Make sure you use the same toolchain to run fdep that you used to build it!\\n\\\n             rustc sysroot: `{}`\\n\\\n             fdep sysroot: `{}`\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 178,
        "column_number": 12
      },
      {
        "value": "\"fdep was built for a different sysroot than the rustc in your current toolchain.\\n\\\n             Make sure you use the same toolchain to run fdep that you used to build it!\\n\\\n             rustc sysroot: `{}`\\n\\\n             fdep sysroot: `{}`\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 178,
        "column_number": 12
      },
      {
        "value": "\"fdep was built for a different sysroot than the rustc in your current toolchain.\\n\\\n             Make sure you use the same toolchain to run fdep that you used to build it!\\n\\\n             rustc sysroot: `{}`\\n\\\n             fdep sysroot: `{}`\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 178,
        "column_number": 12
      }
    ],
    "functions_called": [
      {
        "name": "get_sysroot",
        "fully_qualified_path": "test_sysroot_consistency::get_sysroot",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 173,
        "column_number": 24,
        "origin_crate": "cargo_fdep",
        "origin_module": "test_sysroot_consistency",
        "call_type": "function"
      },
      {
        "name": "new",
        "fully_qualified_path": "std::process::Command::new",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 173,
        "column_number": 36,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "get_sysroot",
        "fully_qualified_path": "test_sysroot_consistency::get_sysroot",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 174,
        "column_number": 23,
        "origin_crate": "cargo_fdep",
        "origin_module": "test_sysroot_consistency",
        "call_type": "function"
      },
      {
        "name": "new",
        "fully_qualified_path": "std::process::Command::new",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 174,
        "column_number": 35,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "find_fdep",
        "fully_qualified_path": "find_fdep",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 174,
        "column_number": 48,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "show_error",
        "fully_qualified_path": "show_error",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "impl AsRef<str>",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 177,
        "column_number": 8,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "must_use",
        "fully_qualified_path": "std::hint::must_use",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs",
        "line_number": 127,
        "column_number": 8,
        "origin_crate": "core",
        "origin_module": "hint",
        "call_type": "function"
      },
      {
        "name": "format",
        "fully_qualified_path": "std::fmt::format",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs",
        "line_number": 128,
        "column_number": 22,
        "origin_crate": "alloc",
        "origin_module": "fmt",
        "call_type": "function"
      },
      {
        "name": "new_v1",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_v1",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs",
        "line_number": 128,
        "column_number": 42,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new_display",
        "fully_qualified_path": "core::fmt::rt::Argument::<'a>::new_display",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 180,
        "column_number": 29,
        "origin_crate": "core",
        "origin_module": "fmt::rt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new_display",
        "fully_qualified_path": "core::fmt::rt::Argument::<'a>::new_display",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 181,
        "column_number": 28,
        "origin_crate": "core",
        "origin_module": "fmt::rt::{{impl}}",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "display",
        "fully_qualified_path": "std::path::Path::display",
        "is_method": true,
        "receiver_type": {
          "type_name": "PathBuf",
          "crate_name": "std",
          "module_path": "path",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Display",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 182,
        "column_number": 26,
        "origin_crate": "std",
        "origin_module": "path::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "display",
        "fully_qualified_path": "std::path::Path::display",
        "is_method": true,
        "receiver_type": {
          "type_name": "PathBuf",
          "crate_name": "std",
          "module_path": "path",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Display",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 183,
        "column_number": 25,
        "origin_crate": "std",
        "origin_module": "path::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {},
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn test_sysroot_consistency() {\n    fn get_sysroot(mut cmd: Command) -> PathBuf {\n        let out = cmd\n            .arg(\"--print\")\n            .arg(\"sysroot\")\n            .output()\n            .expect(\"Failed to run rustc to get sysroot info\");\n        let stdout = String::from_utf8(out.stdout).expect(\"stdout is not valid UTF-8\");\n        let stderr = String::from_utf8(out.stderr).expect(\"stderr is not valid UTF-8\");\n        let stdout = stdout.trim();\n        assert!(\n            out.status.success(),\n            \"Bad status code when getting sysroot info.\\nstdout:\\n{}\\nstderr:\\n{}\",\n            stdout,\n            stderr\n        );\n        PathBuf::from(stdout)\n            .canonicalize()\n            .unwrap_or_else(|_| panic!(\"Failed to canonicalize sysroot: {}\", stdout))\n    }\n\n    let rustc_sysroot = get_sysroot(Command::new(\"rustc\"));\n    let fdep_sysroot = get_sysroot(Command::new(find_fdep()));\n\n    if rustc_sysroot != fdep_sysroot {\n        show_error(format!(\n            \"fdep was built for a different sysroot than the rustc in your current toolchain.\\n\\\n             Make sure you use the same toolchain to run fdep that you used to build it!\\n\\\n             rustc sysroot: `{}`\\n\\\n             fdep sysroot: `{}`\",\n            rustc_sysroot.display(),\n            fdep_sysroot.display()\n        ));\n    }\n}",
    "line_number_start": 152,
    "line_number_end": 186,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "get_sysroot",
    "fully_qualified_path": "cargo_fdep::get_sysroot",
    "is_method": false,
    "self_type": null,
    "input_types": [
      {
        "type_name": "Command",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "output_types": [
      {
        "type_name": "PathBuf",
        "crate_name": "std",
        "module_path": "path",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "Result<PathBuf, Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "std",
            "module_path": "io::error",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(T) -> Self",
        "crate_name": "core",
        "module_path": "convert::From",
        "generic_args": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Self",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[Argument; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ T) -> Argument",
        "crate_name": "core",
        "module_path": "fmt::rt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(Arguments) -> !",
        "crate_name": "core",
        "module_path": "panicking",
        "generic_args": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Argument",
        "crate_name": "core",
        "module_path": "fmt::rt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Output",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "PathBuf",
        "crate_name": "std",
        "module_path": "path",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "ExitStatus",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [Argument; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[Argument; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "Argument",
                "crate_name": "core",
                "module_path": "fmt::rt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[&'_ str; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Command",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<Output, Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "Output",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "std",
            "module_path": "io::error",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ [&'static str; ?], &'_ [Argument; ?]) -> Arguments",
        "crate_name": "core",
        "module_path": "fmt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "String",
        "crate_name": "alloc",
        "module_path": "string",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<String, FromUtf8Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "FromUtf8Error",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [&'_ str; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[&'_ str; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ mut Command",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(Vec<u8, Global>) -> Result<String, FromUtf8Error>",
        "crate_name": "alloc",
        "module_path": "string::{{impl}}",
        "generic_args": [
          {
            "type_name": "Vec<u8, Global>",
            "crate_name": "alloc",
            "module_path": "vec",
            "generic_args": [
              {
                "type_name": "u8",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Global",
                "crate_name": "alloc",
                "module_path": "alloc",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Result<String, FromUtf8Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "FromUtf8Error",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Arguments",
        "crate_name": "core",
        "module_path": "fmt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ &'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Vec<u8, Global>",
        "crate_name": "alloc",
        "module_path": "vec",
        "generic_args": [
          {
            "type_name": "u8",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Global",
            "crate_name": "alloc",
            "module_path": "alloc",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "!",
        "crate_name": "unknown",
        "module_path": "unknown",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ String",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((Error)) -> PathBuf>",
        "crate_name": "cargo_fdep",
        "module_path": "test_sysroot_consistency::get_sysroot::{closure#0}",
        "generic_args": [
          {
            "type_name": "(Error)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"--print\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 155,
        "column_number": 17
      },
      {
        "value": "\"sysroot\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 156,
        "column_number": 17
      },
      {
        "value": "\"Failed to run rustc to get sysroot info\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 158,
        "column_number": 20
      },
      {
        "value": "\"stdout is not valid UTF-8\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 159,
        "column_number": 58
      },
      {
        "value": "\"stderr is not valid UTF-8\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 160,
        "column_number": 58
      },
      {
        "value": "\"Bad status code when getting sysroot info.\\nstdout:\\n{}\\nstderr:\\n{}\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 164,
        "column_number": 12
      },
      {
        "value": "\"Bad status code when getting sysroot info.\\nstdout:\\n{}\\nstderr:\\n{}\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 164,
        "column_number": 12
      }
    ],
    "functions_called": [
      {
        "name": "from_utf8",
        "fully_qualified_path": "std::string::String::from_utf8",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Vec<u8, Global>",
            "crate_name": "alloc",
            "module_path": "vec",
            "generic_args": [
              {
                "type_name": "u8",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Global",
                "crate_name": "alloc",
                "module_path": "alloc",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Result<String, FromUtf8Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "FromUtf8Error",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 159,
        "column_number": 21,
        "origin_crate": "alloc",
        "origin_module": "string::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "from_utf8",
        "fully_qualified_path": "std::string::String::from_utf8",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Vec<u8, Global>",
            "crate_name": "alloc",
            "module_path": "vec",
            "generic_args": [
              {
                "type_name": "u8",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Global",
                "crate_name": "alloc",
                "module_path": "alloc",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Result<String, FromUtf8Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "FromUtf8Error",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 160,
        "column_number": 21,
        "origin_crate": "alloc",
        "origin_module": "string::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "panic_fmt",
        "fully_qualified_path": "std::rt::panic_fmt",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/panic.rs",
        "line_number": 230,
        "column_number": 8,
        "origin_crate": "core",
        "origin_module": "panicking",
        "call_type": "function"
      },
      {
        "name": "new_v1",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_v1",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/panic.rs",
        "line_number": 230,
        "column_number": 30,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new_display",
        "fully_qualified_path": "core::fmt::rt::Argument::<'a>::new_display",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 164,
        "column_number": 66,
        "origin_crate": "core",
        "origin_module": "fmt::rt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new_display",
        "fully_qualified_path": "core::fmt::rt::Argument::<'a>::new_display",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 164,
        "column_number": 79,
        "origin_crate": "core",
        "origin_module": "fmt::rt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "from",
        "fully_qualified_path": "std::convert::From::from",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Self",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 168,
        "column_number": 8,
        "origin_crate": "core",
        "origin_module": "convert::From",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "expect",
        "fully_qualified_path": "std::result::Result::<T, E>::expect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<Output, Error>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "Output",
              "crate_name": "std",
              "module_path": "process",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Error",
              "crate_name": "std",
              "module_path": "io::error",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 158,
        "column_number": 13,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "output",
        "fully_qualified_path": "std::process::Command::output",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ mut Command",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "Command",
              "crate_name": "std",
              "module_path": "process",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Result<Output, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "Output",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 157,
        "column_number": 13,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "arg",
        "fully_qualified_path": "std::process::Command::arg",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ mut Command",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "Command",
              "crate_name": "std",
              "module_path": "process",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 156,
        "column_number": 13,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "arg",
        "fully_qualified_path": "std::process::Command::arg",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 155,
        "column_number": 13,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "expect",
        "fully_qualified_path": "std::result::Result::<T, E>::expect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<String, FromUtf8Error>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "FromUtf8Error",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 159,
        "column_number": 51,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "expect",
        "fully_qualified_path": "std::result::Result::<T, E>::expect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<String, FromUtf8Error>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "FromUtf8Error",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 160,
        "column_number": 51,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "trim",
        "fully_qualified_path": "core::str::<impl str>::trim",
        "is_method": true,
        "receiver_type": {
          "type_name": "String",
          "crate_name": "alloc",
          "module_path": "string",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 161,
        "column_number": 28,
        "origin_crate": "core",
        "origin_module": "str::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "success",
        "fully_qualified_path": "std::process::ExitStatus::success",
        "is_method": true,
        "receiver_type": {
          "type_name": "ExitStatus",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 163,
        "column_number": 23,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "unwrap_or_else",
        "fully_qualified_path": "std::result::Result::<T, E>::unwrap_or_else",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<PathBuf, Error>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "PathBuf",
              "crate_name": "std",
              "module_path": "path",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Error",
              "crate_name": "std",
              "module_path": "io::error",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "F",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 170,
        "column_number": 13,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "canonicalize",
        "fully_qualified_path": "std::path::Path::canonicalize",
        "is_method": true,
        "receiver_type": {
          "type_name": "PathBuf",
          "crate_name": "std",
          "module_path": "path",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Result<PathBuf, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "PathBuf",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 169,
        "column_number": 13,
        "origin_crate": "std",
        "origin_module": "path::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {
      "closure_1": {
        "name": "closure_1",
        "fully_qualified_path": "closure_1",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(Error)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [&'_ str; usize]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'_ str; usize]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'_ str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "[&'_ str; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "fn(&'_ T) -> Argument",
            "crate_name": "core",
            "module_path": "fmt::rt::{{impl}}",
            "generic_args": [
              {
                "type_name": "&'_ T",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "T",
                    "crate_name": "",
                    "module_path": "",
                    "generic_args": [],
                    "is_generic_param": true,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Argument",
                "crate_name": "core",
                "module_path": "fmt::rt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "fn(Arguments) -> !",
            "crate_name": "core",
            "module_path": "panicking",
            "generic_args": [
              {
                "type_name": "Arguments",
                "crate_name": "core",
                "module_path": "fmt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "!",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ &'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "[Argument; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "Argument",
                "crate_name": "core",
                "module_path": "fmt::rt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "fn(&'_ [&'static str; ?], &'_ [Argument; ?]) -> Arguments",
            "crate_name": "core",
            "module_path": "fmt::{{impl}}",
            "generic_args": [
              {
                "type_name": "&'_ [&'static str; ?]",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "[&'static str; ?]",
                    "crate_name": "core",
                    "module_path": "array",
                    "generic_args": [
                      {
                        "type_name": "&'static str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [
                          {
                            "type_name": "str",
                            "crate_name": "core",
                            "module_path": "primitive",
                            "generic_args": [],
                            "is_generic_param": false,
                            "src_location": ""
                          }
                        ],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "&'_ [Argument; ?]",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "[Argument; ?]",
                    "crate_name": "core",
                    "module_path": "array",
                    "generic_args": [
                      {
                        "type_name": "Argument",
                        "crate_name": "core",
                        "module_path": "fmt::rt",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Arguments",
                "crate_name": "core",
                "module_path": "fmt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; usize]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; usize]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [
          {
            "value": "\"Failed to canonicalize sysroot: {}\"",
            "literal_type": "&'{erased} str",
            "span": "src/bin/cargo-fdep.rs",
            "line_number": 170,
            "column_number": 39
          }
        ],
        "functions_called": [
          {
            "name": "panic_fmt",
            "fully_qualified_path": "std::rt::panic_fmt",
            "is_method": false,
            "receiver_type": null,
            "input_types": [
              {
                "type_name": "Arguments",
                "crate_name": "core",
                "module_path": "fmt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "output_types": [
              {
                "type_name": "!",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/panic.rs",
            "line_number": 230,
            "column_number": 8,
            "origin_crate": "core",
            "origin_module": "panicking",
            "call_type": "function"
          },
          {
            "name": "new_v1",
            "fully_qualified_path": "std::fmt::Arguments::<'a>::new_v1",
            "is_method": false,
            "receiver_type": null,
            "input_types": [
              {
                "type_name": "&'_ [&'static str; ?]",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "[&'static str; ?]",
                    "crate_name": "core",
                    "module_path": "array",
                    "generic_args": [
                      {
                        "type_name": "&'static str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [
                          {
                            "type_name": "str",
                            "crate_name": "core",
                            "module_path": "primitive",
                            "generic_args": [],
                            "is_generic_param": false,
                            "src_location": ""
                          }
                        ],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "&'_ [Argument; ?]",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "[Argument; ?]",
                    "crate_name": "core",
                    "module_path": "array",
                    "generic_args": [
                      {
                        "type_name": "Argument",
                        "crate_name": "core",
                        "module_path": "fmt::rt",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "output_types": [
              {
                "type_name": "Arguments",
                "crate_name": "core",
                "module_path": "fmt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/panic.rs",
            "line_number": 230,
            "column_number": 30,
            "origin_crate": "core",
            "origin_module": "fmt::{{impl}}",
            "call_type": "function"
          },
          {
            "name": "new_display",
            "fully_qualified_path": "core::fmt::rt::Argument::<'a>::new_display",
            "is_method": false,
            "receiver_type": null,
            "input_types": [
              {
                "type_name": "&'_ T",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "T",
                    "crate_name": "",
                    "module_path": "",
                    "generic_args": [],
                    "is_generic_param": true,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "output_types": [
              {
                "type_name": "Argument",
                "crate_name": "core",
                "module_path": "fmt::rt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/cargo-fdep.rs",
            "line_number": 170,
            "column_number": 72,
            "origin_crate": "core",
            "origin_module": "fmt::rt::{{impl}}",
            "call_type": "function"
          }
        ],
        "methods_called": [],
        "where_functions": {},
        "src_location": "src/bin/cargo-fdep.rs",
        "src_code": "|_| panic!(\"Failed to canonicalize sysroot: {}\", stdout)",
        "line_number_start": 170,
        "line_number_end": 170,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      }
    },
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn get_sysroot(mut cmd: Command) -> PathBuf {\n        let out = cmd\n            .arg(\"--print\")\n            .arg(\"sysroot\")\n            .output()\n            .expect(\"Failed to run rustc to get sysroot info\");\n        let stdout = String::from_utf8(out.stdout).expect(\"stdout is not valid UTF-8\");\n        let stderr = String::from_utf8(out.stderr).expect(\"stderr is not valid UTF-8\");\n        let stdout = stdout.trim();\n        assert!(\n            out.status.success(),\n            \"Bad status code when getting sysroot info.\\nstdout:\\n{}\\nstderr:\\n{}\",\n            stdout,\n            stderr\n        );\n        PathBuf::from(stdout)\n            .canonicalize()\n            .unwrap_or_else(|_| panic!(\"Failed to canonicalize sysroot: {}\", stdout))\n    }",
    "line_number_start": 153,
    "line_number_end": 171,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "clean_package",
    "fully_qualified_path": "cargo_fdep::clean_package",
    "is_method": false,
    "self_type": null,
    "input_types": [
      {
        "type_name": "&str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "output_types": [
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "types_used": [
      {
        "type_name": "VersionMeta",
        "crate_name": "rustc_version",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "String",
        "crate_name": "alloc",
        "module_path": "string",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(S) -> Command",
        "crate_name": "std",
        "module_path": "process::{{impl}}",
        "generic_args": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> VersionMeta",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "VersionMeta",
            "crate_name": "rustc_version",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<ExitStatus, Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "ExitStatus",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "std",
            "module_path": "io::error",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Child",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(impl AsRef<str>) -> !",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "impl AsRef<str>",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [&'_ str; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[&'_ str; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "ExitStatus",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Arguments",
        "crate_name": "core",
        "module_path": "fmt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<Child, Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "Child",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "std",
            "module_path": "io::error",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "!",
        "crate_name": "unknown",
        "module_path": "unknown",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(Arguments) -> String",
        "crate_name": "alloc",
        "module_path": "fmt",
        "generic_args": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(T) -> T",
        "crate_name": "core",
        "module_path": "hint",
        "generic_args": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[&'_ str; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Command",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ [&'static str; ?]) -> Arguments",
        "crate_name": "core",
        "module_path": "fmt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ mut Command",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"cargo\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 189,
        "column_number": 31
      },
      {
        "value": "\"clean\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 190,
        "column_number": 12
      },
      {
        "value": "\"-p\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 192,
        "column_number": 12
      },
      {
        "value": "\"--target\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 195,
        "column_number": 12
      },
      {
        "value": "\"could not run cargo clean\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 200,
        "column_number": 16
      },
      {
        "value": "\"failed to wait for cargo?\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 202,
        "column_number": 16
      },
      {
        "value": "\"cargo clean failed\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 205,
        "column_number": 27
      }
    ],
    "functions_called": [
      {
        "name": "new",
        "fully_qualified_path": "std::process::Command::new",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 189,
        "column_number": 18,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "version_info",
        "fully_qualified_path": "version_info",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "VersionMeta",
            "crate_name": "rustc_version",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 196,
        "column_number": 12,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "show_error",
        "fully_qualified_path": "show_error",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "impl AsRef<str>",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 205,
        "column_number": 8,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "must_use",
        "fully_qualified_path": "std::hint::must_use",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs",
        "line_number": 127,
        "column_number": 8,
        "origin_crate": "core",
        "origin_module": "hint",
        "call_type": "function"
      },
      {
        "name": "format",
        "fully_qualified_path": "std::fmt::format",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs",
        "line_number": 128,
        "column_number": 22,
        "origin_crate": "alloc",
        "origin_module": "fmt",
        "call_type": "function"
      },
      {
        "name": "new_const",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_const",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/alloc/src/macros.rs",
        "line_number": 128,
        "column_number": 42,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "arg",
        "fully_qualified_path": "std::process::Command::arg",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 190,
        "column_number": 8,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "arg",
        "fully_qualified_path": "std::process::Command::arg",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 192,
        "column_number": 8,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "arg",
        "fully_qualified_path": "std::process::Command::arg",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 193,
        "column_number": 8,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "arg",
        "fully_qualified_path": "std::process::Command::arg",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 195,
        "column_number": 8,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "arg",
        "fully_qualified_path": "std::process::Command::arg",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 196,
        "column_number": 8,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "expect",
        "fully_qualified_path": "std::result::Result::<T, E>::expect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<ExitStatus, Error>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "ExitStatus",
              "crate_name": "std",
              "module_path": "process",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Error",
              "crate_name": "std",
              "module_path": "io::error",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 202,
        "column_number": 9,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "wait",
        "fully_qualified_path": "std::process::Child::wait",
        "is_method": true,
        "receiver_type": {
          "type_name": "Child",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Result<ExitStatus, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "ExitStatus",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 201,
        "column_number": 9,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "expect",
        "fully_qualified_path": "std::result::Result::<T, E>::expect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<Child, Error>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "Child",
              "crate_name": "std",
              "module_path": "process",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Error",
              "crate_name": "std",
              "module_path": "io::error",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 200,
        "column_number": 9,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "spawn",
        "fully_qualified_path": "std::process::Command::spawn",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Result<Child, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "Child",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 199,
        "column_number": 9,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "success",
        "fully_qualified_path": "std::process::ExitStatus::success",
        "is_method": true,
        "receiver_type": {
          "type_name": "ExitStatus",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 204,
        "column_number": 20,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {},
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn clean_package(package_name: &str) {\n    let mut cmd = Command::new(\"cargo\");\n    cmd.arg(\"clean\");\n\n    cmd.arg(\"-p\");\n    cmd.arg(package_name);\n\n    cmd.arg(\"--target\");\n    cmd.arg(version_info().host);\n\n    let exit_status = cmd\n        .spawn()\n        .expect(\"could not run cargo clean\")\n        .wait()\n        .expect(\"failed to wait for cargo?\");\n\n    if !exit_status.success() {\n        show_error(format!(\"cargo clean failed\"));\n    }\n}",
    "line_number_start": 188,
    "line_number_end": 207,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "main",
    "fully_qualified_path": "cargo_fdep::main",
    "is_method": false,
    "self_type": null,
    "input_types": [],
    "output_types": [
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "types_used": [
      {
        "type_name": "[&'_ str; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Arguments",
        "crate_name": "core",
        "module_path": "fmt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ [&'static str; ?]) -> Arguments",
        "crate_name": "core",
        "module_path": "fmt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<String>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> Args",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(Arguments) -> ()",
        "crate_name": "std",
        "module_path": "io::stdio",
        "generic_args": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> ()",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Args",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(impl AsRef<str>) -> !",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "impl AsRef<str>",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "!",
        "crate_name": "unknown",
        "module_path": "unknown",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [&'_ str; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[&'_ str; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "String",
        "crate_name": "alloc",
        "module_path": "string",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"`cargo-fdep` called without first argument; please only invoke this binary through `cargo fdep`\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 216,
        "column_number": 12
      },
      {
        "value": "\"fdep\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 221,
        "column_number": 8
      },
      {
        "value": "\"Running cargo fdep\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 222,
        "column_number": 22
      },
      {
        "value": "\"cargo fdep finished\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 227,
        "column_number": 22
      },
      {
        "value": "\"rustc\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 230,
        "column_number": 29
      },
      {
        "value": "\"Running cargo rustc\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 231,
        "column_number": 22
      },
      {
        "value": "\"cargo rustc finished\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 235,
        "column_number": 22
      },
      {
        "value": "\"`cargo-fdep` must be called with either `fdep` or `rustc` as first argument.\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 239,
        "column_number": 16
      }
    ],
    "functions_called": [
      {
        "name": "args",
        "fully_qualified_path": "std::env::args",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 210,
        "column_number": 19,
        "origin_crate": "std",
        "origin_module": "env",
        "call_type": "function"
      },
      {
        "name": "show_error",
        "fully_qualified_path": "show_error",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "impl AsRef<str>",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 215,
        "column_number": 8,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "_eprint",
        "fully_qualified_path": "std::io::_eprint",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 221,
        "column_number": 8,
        "origin_crate": "std",
        "origin_module": "io::stdio",
        "call_type": "function"
      },
      {
        "name": "new_const",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_const",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 221,
        "column_number": 28,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "in_cargo_fdep",
        "fully_qualified_path": "in_cargo_fdep",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 226,
        "column_number": 12,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "_eprint",
        "fully_qualified_path": "std::io::_eprint",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 221,
        "column_number": 8,
        "origin_crate": "std",
        "origin_module": "io::stdio",
        "call_type": "function"
      },
      {
        "name": "new_const",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_const",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 221,
        "column_number": 28,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "_eprint",
        "fully_qualified_path": "std::io::_eprint",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 221,
        "column_number": 8,
        "origin_crate": "std",
        "origin_module": "io::stdio",
        "call_type": "function"
      },
      {
        "name": "new_const",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_const",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 221,
        "column_number": 28,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "inside_cargo_rustc",
        "fully_qualified_path": "inside_cargo_rustc",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 234,
        "column_number": 12,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "_eprint",
        "fully_qualified_path": "std::io::_eprint",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 221,
        "column_number": 8,
        "origin_crate": "std",
        "origin_module": "io::stdio",
        "call_type": "function"
      },
      {
        "name": "new_const",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_const",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 221,
        "column_number": 28,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "show_error",
        "fully_qualified_path": "show_error",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "impl AsRef<str>",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 238,
        "column_number": 12,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "unwrap",
        "fully_qualified_path": "std::option::Option::<T>::unwrap",
        "is_method": true,
        "receiver_type": {
          "type_name": "Option<String>",
          "crate_name": "core",
          "module_path": "option",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 212,
        "column_number": 16,
        "origin_crate": "core",
        "origin_module": "option::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "next",
        "fully_qualified_path": "std::iter::Iterator::next",
        "is_method": true,
        "receiver_type": {
          "type_name": "Args",
          "crate_name": "std",
          "module_path": "env",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Option<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 212,
        "column_number": 9,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "next",
        "fully_qualified_path": "std::iter::Iterator::next",
        "is_method": true,
        "receiver_type": {
          "type_name": "Args",
          "crate_name": "std",
          "module_path": "env",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Option<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 214,
        "column_number": 27,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "as_str",
        "fully_qualified_path": "std::string::String::as_str",
        "is_method": true,
        "receiver_type": {
          "type_name": "String",
          "crate_name": "alloc",
          "module_path": "string",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 220,
        "column_number": 16,
        "origin_crate": "alloc",
        "origin_module": "string::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "ends_with",
        "fully_qualified_path": "core::str::<impl str>::ends_with",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ str",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "str",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "P",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 230,
        "column_number": 19,
        "origin_crate": "core",
        "origin_module": "str::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {},
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn main() {\n    let mut args = std::env::args();\n    // Skip binary name.\n    args.next().unwrap();\n\n    let Some(first) = args.next() else {\n        show_error(\n            \"`cargo-fdep` called without first argument; please only invoke this binary through `cargo fdep`\"\n        )\n    };\n\n    match first.as_str() {\n        \"fdep\" => {\n            eprintln!(\"Running cargo fdep\");\n            // This arm is for when `cargo fdep` is called. We call `cargo rustc` for each applicable target,\n            // but with the `RUSTC` env var set to the `cargo-fdep` binary so that we come back in the other branch,\n            // and dispatch the invocations to `rustc` and `fdep`, respectively.\n            in_cargo_fdep();\n            eprintln!(\"cargo fdep finished\");\n        }\n        // Check if arg is a path that ends with \"/rustc\"\n        arg if arg.ends_with(\"rustc\") => {\n            eprintln!(\"Running cargo rustc\");\n            // This arm is executed when `cargo-fdep` runs `cargo rustc` with the `RUSTC_WRAPPER` env var set to itself:\n            // dependencies get dispatched to `rustc`, the final test/binary to `fdep`.\n            inside_cargo_rustc();\n            eprintln!(\"cargo rustc finished\");\n        }\n        _ => {\n            show_error(\n                \"`cargo-fdep` must be called with either `fdep` or `rustc` as first argument.\",\n            );\n        }\n    }\n}",
    "line_number_start": 209,
    "line_number_end": 243,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "is_lib_str",
    "fully_qualified_path": "cargo_fdep::is_lib_str",
    "is_method": true,
    "self_type": null,
    "input_types": [
      {
        "type_name": "&str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "output_types": [
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"lib\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 254,
        "column_number": 13
      },
      {
        "value": "\"rlib\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 254,
        "column_number": 27
      },
      {
        "value": "\"staticlib\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 254,
        "column_number": 42
      }
    ],
    "functions_called": [],
    "methods_called": [],
    "where_functions": {},
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn is_lib_str(s: &str) -> bool {\n        s == \"lib\" || s == \"rlib\" || s == \"staticlib\"\n    }",
    "line_number_start": 253,
    "line_number_end": 255,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "from",
    "fully_qualified_path": "cargo_fdep::from",
    "is_method": true,
    "self_type": null,
    "input_types": [
      {
        "type_name": "&Target",
        "crate_name": "cargo_metadata",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "output_types": [],
    "types_used": [
      {
        "type_name": "usize",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<&'_ str>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Iter<String>",
        "crate_name": "core",
        "module_path": "slice::iter",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ Target",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Target",
            "crate_name": "cargo_metadata",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<&'_ String>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "&'_ String",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "TargetKind",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((&'_ String)) -> bool>",
        "crate_name": "cargo_fdep",
        "module_path": "<TargetKind as std::convert::From<&cargo_metadata::Target>>::from::{closure#0}",
        "generic_args": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Vec<String, Global>",
        "crate_name": "alloc",
        "module_path": "vec",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Global",
            "crate_name": "alloc",
            "module_path": "alloc",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((&'_ String)) -> &'_ str>",
        "crate_name": "cargo_fdep",
        "module_path": "<TargetKind as std::convert::From<&cargo_metadata::Target>>::from::{closure#1}",
        "generic_args": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "0",
        "literal_type": "unsigned integer",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 262,
        "column_number": 52
      },
      {
        "value": "\"bin\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 262,
        "column_number": 27
      }
    ],
    "functions_called": [],
    "methods_called": [
      {
        "name": "any",
        "fully_qualified_path": "std::iter::Iterator::any",
        "is_method": true,
        "receiver_type": {
          "type_name": "Iter<String>",
          "crate_name": "core",
          "module_path": "slice::iter",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "F",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 260,
        "column_number": 30,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "iter",
        "fully_qualified_path": "core::slice::<impl [T]>::iter",
        "is_method": true,
        "receiver_type": {
          "type_name": "Vec<String, Global>",
          "crate_name": "alloc",
          "module_path": "vec",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Global",
              "crate_name": "alloc",
              "module_path": "alloc",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Iter<T>",
            "crate_name": "core",
            "module_path": "slice::iter",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 260,
        "column_number": 23,
        "origin_crate": "core",
        "origin_module": "slice::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "map",
        "fully_qualified_path": "std::option::Option::<T>::map",
        "is_method": true,
        "receiver_type": {
          "type_name": "Option<&'_ String>",
          "crate_name": "core",
          "module_path": "option",
          "generic_args": [
            {
              "type_name": "&'_ String",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [
                {
                  "type_name": "String",
                  "crate_name": "alloc",
                  "module_path": "string",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "F",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<U>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "U",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 262,
        "column_number": 55,
        "origin_crate": "core",
        "origin_module": "option::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "get",
        "fully_qualified_path": "core::slice::<impl [T]>::get",
        "is_method": true,
        "receiver_type": {
          "type_name": "Vec<String, Global>",
          "crate_name": "alloc",
          "module_path": "vec",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Global",
              "crate_name": "alloc",
              "module_path": "alloc",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "I",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<&'_ Alias(Projection, AliasTy { args: [I/#1, [T/#0]], def_id: DefId(2:11586 ~ core[5d62]::slice::index::SliceIndex::Output), .. })>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "&'_ Alias(Projection, AliasTy { args: [I/#1, [T/#0]], def_id: DefId(2:11586 ~ core[5d62]::slice::index::SliceIndex::Output), .. })",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "Alias(Projection, AliasTy { args: [I/#1, [T/#0]], def_id: DefId(2:11586 ~ core[5d62]::slice::index::SliceIndex::Output), .. })",
                    "crate_name": "unknown",
                    "module_path": "unknown",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 262,
        "column_number": 48,
        "origin_crate": "core",
        "origin_module": "slice::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {
      "closure_1": {
        "name": "closure_1",
        "fully_qualified_path": "closure_1",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "&'_ String",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "fn(&'_ str) -> bool",
            "crate_name": "cargo_fdep",
            "module_path": "{{impl}}",
            "generic_args": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "bool",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [],
        "functions_called": [
          {
            "name": "is_lib_str",
            "fully_qualified_path": "TargetKind::is_lib_str",
            "is_method": false,
            "receiver_type": null,
            "input_types": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "output_types": [
              {
                "type_name": "bool",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/cargo-fdep.rs",
            "line_number": 260,
            "column_number": 38,
            "origin_crate": "cargo_fdep",
            "origin_module": "{{impl}}",
            "call_type": "function"
          }
        ],
        "methods_called": [],
        "where_functions": {},
        "src_location": "src/bin/cargo-fdep.rs",
        "src_code": "|s| TargetKind::is_lib_str(s)",
        "line_number_start": 260,
        "line_number_end": 260,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      },
      "closure_2": {
        "name": "closure_2",
        "fully_qualified_path": "closure_2",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ String",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [],
        "functions_called": [],
        "methods_called": [
          {
            "name": "as_ref",
            "fully_qualified_path": "std::convert::AsRef::as_ref",
            "is_method": true,
            "receiver_type": {
              "type_name": "&'_ String",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [
                {
                  "type_name": "String",
                  "crate_name": "alloc",
                  "module_path": "string",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            },
            "input_types": [],
            "output_types": [
              {
                "type_name": "&'_ T",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "T",
                    "crate_name": "",
                    "module_path": "",
                    "generic_args": [],
                    "is_generic_param": true,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/cargo-fdep.rs",
            "line_number": 262,
            "column_number": 65,
            "origin_crate": "core",
            "origin_module": "convert::AsRef",
            "call_type": "method"
          }
        ],
        "where_functions": {},
        "src_location": "src/bin/cargo-fdep.rs",
        "src_code": "|s| s.as_ref()",
        "line_number_start": 262,
        "line_number_end": 262,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      }
    },
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn from(target: &cargo_metadata::Target) -> Self {\n        if target.kind.iter().any(|s| TargetKind::is_lib_str(s)) {\n            TargetKind::Library\n        } else if let Some(\"bin\") = target.kind.get(0).map(|s| s.as_ref()) {\n            TargetKind::Bin\n        } else {\n            TargetKind::Unknown\n        }\n    }",
    "line_number_start": 259,
    "line_number_end": 267,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "fmt",
    "fully_qualified_path": "cargo_fdep::fmt",
    "is_method": true,
    "self_type": null,
    "input_types": [
      {
        "type_name": "&mut Formatter<''_>",
        "crate_name": "core",
        "module_path": "fmt",
        "generic_args": [
          {
            "type_name": "''_",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": "src/bin/cargo-fdep.rs"
          }
        ],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "output_types": [
      {
        "type_name": "Result",
        "crate_name": "core",
        "module_path": "fmt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "&'_ mut Formatter",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Formatter",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [Argument; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[Argument; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "Argument",
                "crate_name": "core",
                "module_path": "fmt::rt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[&'_ str; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Arguments",
        "crate_name": "core",
        "module_path": "fmt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Argument",
        "crate_name": "core",
        "module_path": "fmt::rt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ &'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ TargetKind",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "TargetKind",
            "crate_name": "cargo_fdep",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [&'_ str; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[&'_ str; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ T) -> Argument",
        "crate_name": "core",
        "module_path": "fmt::rt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<(), Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ [&'static str; ?], &'_ [Argument; ?]) -> Arguments",
        "crate_name": "core",
        "module_path": "fmt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[Argument; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"{}\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 274,
        "column_number": 12
      },
      {
        "value": "\"lib\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 276,
        "column_number": 39
      },
      {
        "value": "\"bin\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 277,
        "column_number": 35
      },
      {
        "value": "\"unknown\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 278,
        "column_number": 39
      }
    ],
    "functions_called": [
      {
        "name": "new_v1",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_v1",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        "line_number": 650,
        "column_number": 23,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new_display",
        "fully_qualified_path": "core::fmt::rt::Argument::<'a>::new_display",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 274,
        "column_number": 13,
        "origin_crate": "core",
        "origin_module": "fmt::rt::{{impl}}",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "write_fmt",
        "fully_qualified_path": "std::fmt::Formatter::<'a>::write_fmt",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ mut Formatter",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "Formatter",
              "crate_name": "core",
              "module_path": "fmt",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Result<(), Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "()",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "core",
                "module_path": "fmt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        "line_number": 650,
        "column_number": 13,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {},
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n        write!(\n            f,\n            \"{}\",\n            match self {\n                TargetKind::Library => \"lib\",\n                TargetKind::Bin => \"bin\",\n                TargetKind::Unknown => \"unknown\",\n            }\n        )\n    }",
    "line_number_start": 271,
    "line_number_end": 281,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "in_cargo_fdep",
    "fully_qualified_path": "cargo_fdep::in_cargo_fdep",
    "is_method": false,
    "self_type": null,
    "input_types": [],
    "output_types": [
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "types_used": [
      {
        "type_name": "usize",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ &'_ String",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "&'_ String",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ Vec<String, Global>",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Vec<String, Global>",
            "crate_name": "alloc",
            "module_path": "vec",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Global",
                "crate_name": "alloc",
                "module_path": "alloc",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Vec<Target, Global>",
        "crate_name": "alloc",
        "module_path": "vec",
        "generic_args": [
          {
            "type_name": "Target",
            "crate_name": "cargo_metadata",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Global",
            "crate_name": "alloc",
            "module_path": "alloc",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[Argument; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ [&'static str; ?], &'_ [Argument; ?]) -> Arguments",
        "crate_name": "core",
        "module_path": "fmt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((&'_ Target)) -> u8>",
        "crate_name": "cargo_fdep",
        "module_path": "in_cargo_fdep::{closure#0}",
        "generic_args": [
          {
            "type_name": "(&'_ Target)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ Target",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "Target",
                    "crate_name": "cargo_metadata",
                    "module_path": "",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "u8",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> ()",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Target",
        "crate_name": "cargo_metadata",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<Target>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "Target",
            "crate_name": "cargo_metadata",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Argument",
        "crate_name": "core",
        "module_path": "fmt::rt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<ExitStatus, Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "ExitStatus",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "std",
            "module_path": "io::error",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<Child, Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "Child",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "std",
            "module_path": "io::error",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ mut Self) -> Option<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })>",
        "crate_name": "core",
        "module_path": "iter::traits::iterator::Iterator",
        "generic_args": [
          {
            "type_name": "&'_ mut Self",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Self",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Option<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<Option<ExitStatus>, Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "Option<ExitStatus>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "ExitStatus",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "std",
            "module_path": "io::error",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Child",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(u64) -> Duration",
        "crate_name": "core",
        "module_path": "time::{{impl}}",
        "generic_args": [
          {
            "type_name": "u64",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Duration",
            "crate_name": "core",
            "module_path": "time",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "TargetKind",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> VersionMeta",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "VersionMeta",
            "crate_name": "rustc_version",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> Package",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "Package",
            "crate_name": "cargo_metadata",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> Args",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(Self) -> Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8333 ~ core[5d62]::iter::traits::collect::IntoIterator::IntoIter), .. })",
        "crate_name": "core",
        "module_path": "iter::traits::collect::IntoIterator",
        "generic_args": [
          {
            "type_name": "Self",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8333 ~ core[5d62]::iter::traits::collect::IntoIterator::IntoIter), .. })",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[&'_ str; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ str) -> Option<String>",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Option<String>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "PathBuf",
        "crate_name": "std",
        "module_path": "path",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ mut IntoIter<Target, Global>",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "IntoIter<Target, Global>",
            "crate_name": "alloc",
            "module_path": "vec::into_iter",
            "generic_args": [
              {
                "type_name": "Target",
                "crate_name": "cargo_metadata",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Global",
                "crate_name": "alloc",
                "module_path": "alloc",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Args",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "!",
        "crate_name": "unknown",
        "module_path": "unknown",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Arguments",
        "crate_name": "core",
        "module_path": "fmt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ String",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "u64",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ mut Command",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Duration",
        "crate_name": "core",
        "module_path": "time",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ str) -> bool",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(T) -> Self",
        "crate_name": "core",
        "module_path": "convert::From",
        "generic_args": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Self",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Vec<String, Global>",
        "crate_name": "alloc",
        "module_path": "vec",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Global",
            "crate_name": "alloc",
            "module_path": "alloc",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(impl AsRef<str>) -> !",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "impl AsRef<str>",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [String]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[String]",
            "crate_name": "core",
            "module_path": "slice",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<String, Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "serde_json",
            "module_path": "error",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<OsString>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "OsString",
            "crate_name": "std",
            "module_path": "ffi::os_str",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(S) -> Command",
        "crate_name": "std",
        "module_path": "process::{{impl}}",
        "generic_args": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(Arguments) -> ()",
        "crate_name": "std",
        "module_path": "io::stdio",
        "generic_args": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ [&'static str; ?]) -> Arguments",
        "crate_name": "core",
        "module_path": "fmt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Command",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "ExitStatus",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "IntoIter<Target, Global>",
        "crate_name": "alloc",
        "module_path": "vec::into_iter",
        "generic_args": [
          {
            "type_name": "Target",
            "crate_name": "cargo_metadata",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Global",
            "crate_name": "alloc",
            "module_path": "alloc",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [&'_ str; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[&'_ str; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ T) -> Argument",
        "crate_name": "core",
        "module_path": "fmt::rt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ T) -> Result<String, Error>",
        "crate_name": "serde_json",
        "module_path": "ser",
        "generic_args": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Result<String, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "serde_json",
                "module_path": "error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "String",
        "crate_name": "alloc",
        "module_path": "string",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> Result<PathBuf, Error>",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [
          {
            "type_name": "Result<PathBuf, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "PathBuf",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "VersionMeta",
        "crate_name": "rustc_version",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Package",
        "crate_name": "cargo_metadata",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ str) -> ()",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Skip<Args>",
        "crate_name": "core",
        "module_path": "iter::adapters::skip",
        "generic_args": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<PathBuf, Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "std",
            "module_path": "io::error",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<ExitStatus>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "ExitStatus",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<(), Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "std",
            "module_path": "io::error",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [Argument; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[Argument; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "Argument",
                "crate_name": "core",
                "module_path": "fmt::rt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ Target",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Target",
            "crate_name": "cargo_metadata",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<String>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ Command",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(K) -> Option<OsString>",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [
          {
            "type_name": "K",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Option<OsString>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "OsString",
                "crate_name": "std",
                "module_path": "ffi::os_str",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"-v\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 285,
        "column_number": 31
      },
      {
        "value": "2",
        "literal_type": "unsigned integer",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 299,
        "column_number": 45
      },
      {
        "value": "\"Target name: {}\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 302,
        "column_number": 17
      },
      {
        "value": "\"Target name: {}\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 302,
        "column_number": 17
      },
      {
        "value": "\"cargo\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 307,
        "column_number": 35
      },
      {
        "value": "\"check\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 308,
        "column_number": 16
      },
      {
        "value": "\"--bin\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 313,
        "column_number": 24
      },
      {
        "value": "\"--lib\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 317,
        "column_number": 24
      },
      {
        "value": "\"Target {}:{} is not supported\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 323,
        "column_number": 20
      },
      {
        "value": "\"Target {}:{} is not supported\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 323,
        "column_number": 20
      },
      {
        "value": "\"Target {}:{} is not supported\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 323,
        "column_number": 20
      },
      {
        "value": "\"/\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 324,
        "column_number": 48
      },
      {
        "value": "cfg!(debug_assertions)",
        "literal_type": "boolean",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 331,
        "column_number": 12
      },
      {
        "value": "\"-q\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 332,
        "column_number": 20
      },
      {
        "value": "\"--\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 337,
        "column_number": 22
      },
      {
        "value": "\"--target\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 346,
        "column_number": 30
      },
      {
        "value": "\"--target\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 348,
        "column_number": 20
      },
      {
        "value": "\"FDEP_ARGS\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 359,
        "column_number": 12
      },
      {
        "value": "\"failed to serialize args\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 360,
        "column_number": 52
      },
      {
        "value": "\"RUSTC_WRAPPER\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 366,
        "column_number": 23
      },
      {
        "value": "\"WARNING: Ignoring existing `RUSTC_WRAPPER` environment variable, fdep does not support wrapping.\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 367,
        "column_number": 22
      },
      {
        "value": "\"current executable path invalid\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 370,
        "column_number": 50
      },
      {
        "value": "\"RUSTC_WRAPPER\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 371,
        "column_number": 16
      },
      {
        "value": "\"FDEP_VERBOSE\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 373,
        "column_number": 20
      },
      {
        "value": "\"\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 373,
        "column_number": 36
      },
      {
        "value": "\"+ {:?}\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 374,
        "column_number": 22
      },
      {
        "value": "\"+ {:?}\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 374,
        "column_number": 22
      },
      {
        "value": "\"could not run cargo check\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 377,
        "column_number": 43
      },
      {
        "value": "60",
        "literal_type": "unsigned integer",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 380,
        "column_number": 46
      },
      {
        "value": "60",
        "literal_type": "unsigned integer",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 380,
        "column_number": 51
      },
      {
        "value": "\"failed to wait for subprocess\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 381,
        "column_number": 20
      },
      {
        "value": "\"Finished with non-zero exit code\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 385,
        "column_number": 31
      },
      {
        "value": "\"failed to kill subprocess\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 389,
        "column_number": 36
      },
      {
        "value": "\"failed to wait for subprocess\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 390,
        "column_number": 36
      },
      {
        "value": "\"Killed due to timeout\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 391,
        "column_number": 27
      }
    ],
    "functions_called": [
      {
        "name": "has_arg_flag",
        "fully_qualified_path": "has_arg_flag",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 285,
        "column_number": 18,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "test_sysroot_consistency",
        "fully_qualified_path": "test_sysroot_consistency",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 288,
        "column_number": 4,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "cargo_package",
        "fully_qualified_path": "cargo_package",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "Package",
            "crate_name": "cargo_metadata",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 291,
        "column_number": 18,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "into_iter",
        "fully_qualified_path": "std::iter::IntoIterator::into_iter",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Self",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8333 ~ core[5d62]::iter::traits::collect::IntoIterator::IntoIter), .. })",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 297,
        "column_number": 18,
        "origin_crate": "core",
        "origin_module": "iter::traits::collect::IntoIterator",
        "call_type": "function"
      },
      {
        "name": "next",
        "fully_qualified_path": "std::iter::Iterator::next",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ mut Self",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Self",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 297,
        "column_number": 18,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "function"
      },
      {
        "name": "args",
        "fully_qualified_path": "std::env::args",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 299,
        "column_number": 23,
        "origin_crate": "std",
        "origin_module": "env",
        "call_type": "function"
      },
      {
        "name": "from",
        "fully_qualified_path": "std::convert::From::from",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Self",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 300,
        "column_number": 19,
        "origin_crate": "core",
        "origin_module": "convert::From",
        "call_type": "function"
      },
      {
        "name": "_print",
        "fully_qualified_path": "std::io::_print",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 143,
        "column_number": 8,
        "origin_crate": "std",
        "origin_module": "io::stdio",
        "call_type": "function"
      },
      {
        "name": "new_v1",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_v1",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 143,
        "column_number": 27,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new_display",
        "fully_qualified_path": "core::fmt::rt::Argument::<'a>::new_display",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 302,
        "column_number": 31,
        "origin_crate": "core",
        "origin_module": "fmt::rt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new",
        "fully_qualified_path": "std::process::Command::new",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 307,
        "column_number": 22,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "clean_package",
        "fully_qualified_path": "clean_package",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 319,
        "column_number": 16,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "_print",
        "fully_qualified_path": "std::io::_print",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 143,
        "column_number": 8,
        "origin_crate": "std",
        "origin_module": "io::stdio",
        "call_type": "function"
      },
      {
        "name": "new_v1",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_v1",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 143,
        "column_number": 27,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new_display",
        "fully_qualified_path": "core::fmt::rt::Argument::<'a>::new_display",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 323,
        "column_number": 28,
        "origin_crate": "core",
        "origin_module": "fmt::rt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new_display",
        "fully_qualified_path": "core::fmt::rt::Argument::<'a>::new_display",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 323,
        "column_number": 31,
        "origin_crate": "core",
        "origin_module": "fmt::rt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "get_arg_flag_value",
        "fully_qualified_path": "get_arg_flag_value",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<String>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 346,
        "column_number": 11,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "version_info",
        "fully_qualified_path": "version_info",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "VersionMeta",
            "crate_name": "rustc_version",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 349,
        "column_number": 20,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "to_string",
        "fully_qualified_path": "serde_json::to_string",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Result<String, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "serde_json",
                "module_path": "error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 360,
        "column_number": 12,
        "origin_crate": "serde_json",
        "origin_module": "ser",
        "call_type": "function"
      },
      {
        "name": "var_os",
        "fully_qualified_path": "std::env::var_os",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "K",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<OsString>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "OsString",
                "crate_name": "std",
                "module_path": "ffi::os_str",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 366,
        "column_number": 11,
        "origin_crate": "std",
        "origin_module": "env",
        "call_type": "function"
      },
      {
        "name": "_eprint",
        "fully_qualified_path": "std::io::_eprint",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 221,
        "column_number": 8,
        "origin_crate": "std",
        "origin_module": "io::stdio",
        "call_type": "function"
      },
      {
        "name": "new_const",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_const",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 221,
        "column_number": 28,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "current_exe",
        "fully_qualified_path": "std::env::current_exe",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "Result<PathBuf, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "PathBuf",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 370,
        "column_number": 19,
        "origin_crate": "std",
        "origin_module": "env",
        "call_type": "function"
      },
      {
        "name": "_eprint",
        "fully_qualified_path": "std::io::_eprint",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 221,
        "column_number": 8,
        "origin_crate": "std",
        "origin_module": "io::stdio",
        "call_type": "function"
      },
      {
        "name": "new_v1",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_v1",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 221,
        "column_number": 28,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new_debug",
        "fully_qualified_path": "core::fmt::rt::Argument::<'a>::new_debug",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 374,
        "column_number": 25,
        "origin_crate": "core",
        "origin_module": "fmt::rt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "from_secs",
        "fully_qualified_path": "std::time::Duration::from_secs",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "u64",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Duration",
            "crate_name": "core",
            "module_path": "time",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 380,
        "column_number": 26,
        "origin_crate": "core",
        "origin_module": "time::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "show_error",
        "fully_qualified_path": "show_error",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "impl AsRef<str>",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 385,
        "column_number": 20,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "show_error",
        "fully_qualified_path": "show_error",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "impl AsRef<str>",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 391,
        "column_number": 16,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "collect",
        "fully_qualified_path": "std::iter::Iterator::collect",
        "is_method": true,
        "receiver_type": {
          "type_name": "IntoIter<Target, Global>",
          "crate_name": "alloc",
          "module_path": "vec::into_iter",
          "generic_args": [
            {
              "type_name": "Target",
              "crate_name": "cargo_metadata",
              "module_path": "",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Global",
              "crate_name": "alloc",
              "module_path": "alloc",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "B",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 292,
        "column_number": 58,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "into_iter",
        "fully_qualified_path": "std::iter::IntoIterator::into_iter",
        "is_method": true,
        "receiver_type": {
          "type_name": "Vec<Target, Global>",
          "crate_name": "alloc",
          "module_path": "vec",
          "generic_args": [
            {
              "type_name": "Target",
              "crate_name": "cargo_metadata",
              "module_path": "",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Global",
              "crate_name": "alloc",
              "module_path": "alloc",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8333 ~ core[5d62]::iter::traits::collect::IntoIterator::IntoIter), .. })",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 292,
        "column_number": 46,
        "origin_crate": "core",
        "origin_module": "iter::traits::collect::IntoIterator",
        "call_type": "method"
      },
      {
        "name": "sort_by_key",
        "fully_qualified_path": "std::slice::<impl [T]>::sort_by_key",
        "is_method": true,
        "receiver_type": {
          "type_name": "Vec<Target, Global>",
          "crate_name": "alloc",
          "module_path": "vec",
          "generic_args": [
            {
              "type_name": "Target",
              "crate_name": "cargo_metadata",
              "module_path": "",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Global",
              "crate_name": "alloc",
              "module_path": "alloc",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "F",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 295,
        "column_number": 12,
        "origin_crate": "alloc",
        "origin_module": "slice::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "skip",
        "fully_qualified_path": "std::iter::Iterator::skip",
        "is_method": true,
        "receiver_type": {
          "type_name": "Args",
          "crate_name": "std",
          "module_path": "env",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "usize",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Skip<Self>",
            "crate_name": "core",
            "module_path": "iter::adapters::skip",
            "generic_args": [
              {
                "type_name": "Self",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 299,
        "column_number": 40,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "arg",
        "fully_qualified_path": "std::process::Command::arg",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 308,
        "column_number": 12,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "arg",
        "fully_qualified_path": "std::process::Command::arg",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ mut Command",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "Command",
              "crate_name": "std",
              "module_path": "process",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 313,
        "column_number": 33,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "arg",
        "fully_qualified_path": "std::process::Command::arg",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 313,
        "column_number": 20,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "arg",
        "fully_qualified_path": "std::process::Command::arg",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 317,
        "column_number": 20,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "join",
        "fully_qualified_path": "std::slice::<impl [T]>::join",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ [String]",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "[String]",
              "crate_name": "core",
              "module_path": "slice",
              "generic_args": [
                {
                  "type_name": "String",
                  "crate_name": "alloc",
                  "module_path": "string",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "Separator",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Alias(Projection, AliasTy { args: [[T/#0], Separator/#1], def_id: DefId(5:5659 ~ alloc[1836]::slice::Join::Output), .. })",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 324,
        "column_number": 43,
        "origin_crate": "alloc",
        "origin_module": "slice::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "as_slice",
        "fully_qualified_path": "std::vec::Vec::<T, A>::as_slice",
        "is_method": true,
        "receiver_type": {
          "type_name": "Vec<String, Global>",
          "crate_name": "alloc",
          "module_path": "vec",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Global",
              "crate_name": "alloc",
              "module_path": "alloc",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "&'_ [T]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[T]",
                "crate_name": "core",
                "module_path": "slice",
                "generic_args": [
                  {
                    "type_name": "T",
                    "crate_name": "",
                    "module_path": "",
                    "generic_args": [],
                    "is_generic_param": true,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 324,
        "column_number": 32,
        "origin_crate": "alloc",
        "origin_module": "vec::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "arg",
        "fully_qualified_path": "std::process::Command::arg",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 332,
        "column_number": 16,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "next",
        "fully_qualified_path": "std::iter::Iterator::next",
        "is_method": true,
        "receiver_type": {
          "type_name": "Skip<Args>",
          "crate_name": "core",
          "module_path": "iter::adapters::skip",
          "generic_args": [
            {
              "type_name": "Args",
              "crate_name": "std",
              "module_path": "env",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Option<Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(2:8505 ~ core[5d62]::iter::traits::iterator::Iterator::Item), .. })",
                "crate_name": "unknown",
                "module_path": "unknown",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 336,
        "column_number": 35,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "arg",
        "fully_qualified_path": "std::process::Command::arg",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 340,
        "column_number": 16,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "is_none",
        "fully_qualified_path": "std::option::Option::<T>::is_none",
        "is_method": true,
        "receiver_type": {
          "type_name": "Option<String>",
          "crate_name": "core",
          "module_path": "option",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 346,
        "column_number": 42,
        "origin_crate": "core",
        "origin_module": "option::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "arg",
        "fully_qualified_path": "std::process::Command::arg",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 348,
        "column_number": 16,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "arg",
        "fully_qualified_path": "std::process::Command::arg",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 349,
        "column_number": 16,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "collect",
        "fully_qualified_path": "std::iter::Iterator::collect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Skip<Args>",
          "crate_name": "core",
          "module_path": "iter::adapters::skip",
          "generic_args": [
            {
              "type_name": "Args",
              "crate_name": "std",
              "module_path": "env",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "B",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 357,
        "column_number": 41,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "env",
        "fully_qualified_path": "std::process::Command::env",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "K",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "V",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 358,
        "column_number": 12,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "expect",
        "fully_qualified_path": "std::result::Result::<T, E>::expect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<String, Error>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Error",
              "crate_name": "serde_json",
              "module_path": "error",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 360,
        "column_number": 45,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "is_some",
        "fully_qualified_path": "std::option::Option::<T>::is_some",
        "is_method": true,
        "receiver_type": {
          "type_name": "Option<OsString>",
          "crate_name": "core",
          "module_path": "option",
          "generic_args": [
            {
              "type_name": "OsString",
              "crate_name": "std",
              "module_path": "ffi::os_str",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 366,
        "column_number": 40,
        "origin_crate": "core",
        "origin_module": "option::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "expect",
        "fully_qualified_path": "std::result::Result::<T, E>::expect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<PathBuf, Error>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "PathBuf",
              "crate_name": "std",
              "module_path": "path",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Error",
              "crate_name": "std",
              "module_path": "io::error",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 370,
        "column_number": 43,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "env",
        "fully_qualified_path": "std::process::Command::env",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "K",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "V",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 371,
        "column_number": 12,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "env",
        "fully_qualified_path": "std::process::Command::env",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "K",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "V",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 373,
        "column_number": 16,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "expect",
        "fully_qualified_path": "std::result::Result::<T, E>::expect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<Child, Error>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "Child",
              "crate_name": "std",
              "module_path": "process",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Error",
              "crate_name": "std",
              "module_path": "io::error",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 377,
        "column_number": 36,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "spawn",
        "fully_qualified_path": "std::process::Command::spawn",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Result<Child, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "Child",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 377,
        "column_number": 28,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "expect",
        "fully_qualified_path": "std::result::Result::<T, E>::expect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<Option<ExitStatus>, Error>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "Option<ExitStatus>",
              "crate_name": "core",
              "module_path": "option",
              "generic_args": [
                {
                  "type_name": "ExitStatus",
                  "crate_name": "std",
                  "module_path": "process",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Error",
              "crate_name": "std",
              "module_path": "io::error",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 381,
        "column_number": 13,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "wait_timeout",
        "fully_qualified_path": "wait_timeout::ChildExt::wait_timeout",
        "is_method": true,
        "receiver_type": {
          "type_name": "Child",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "Duration",
            "crate_name": "core",
            "module_path": "time",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Result<Option<ExitStatus>, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "Option<ExitStatus>",
                "crate_name": "core",
                "module_path": "option",
                "generic_args": [
                  {
                    "type_name": "ExitStatus",
                    "crate_name": "std",
                    "module_path": "process",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 380,
        "column_number": 13,
        "origin_crate": "wait_timeout",
        "origin_module": "ChildExt",
        "call_type": "method"
      },
      {
        "name": "success",
        "fully_qualified_path": "std::process::ExitStatus::success",
        "is_method": true,
        "receiver_type": {
          "type_name": "ExitStatus",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 384,
        "column_number": 32,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "expect",
        "fully_qualified_path": "std::result::Result::<T, E>::expect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<(), Error>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "()",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Error",
              "crate_name": "std",
              "module_path": "io::error",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 389,
        "column_number": 29,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "kill",
        "fully_qualified_path": "std::process::Child::kill",
        "is_method": true,
        "receiver_type": {
          "type_name": "Child",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Result<(), Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "()",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 389,
        "column_number": 22,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "expect",
        "fully_qualified_path": "std::result::Result::<T, E>::expect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<ExitStatus, Error>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "ExitStatus",
              "crate_name": "std",
              "module_path": "process",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Error",
              "crate_name": "std",
              "module_path": "io::error",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 390,
        "column_number": 29,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "wait",
        "fully_qualified_path": "std::process::Child::wait",
        "is_method": true,
        "receiver_type": {
          "type_name": "Child",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Result<ExitStatus, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "ExitStatus",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 390,
        "column_number": 22,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {
      "closure_1": {
        "name": "closure_1",
        "fully_qualified_path": "closure_1",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(&'_ Target)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ Target",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "Target",
                    "crate_name": "cargo_metadata",
                    "module_path": "",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "u8",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "TargetKind",
            "crate_name": "cargo_fdep",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "u8",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "fn(T) -> Self",
            "crate_name": "core",
            "module_path": "convert::From",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              },
              {
                "type_name": "Self",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ Target",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Target",
                "crate_name": "cargo_metadata",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [],
        "functions_called": [
          {
            "name": "from",
            "fully_qualified_path": "std::convert::From::from",
            "is_method": false,
            "receiver_type": null,
            "input_types": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "output_types": [
              {
                "type_name": "Self",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/cargo-fdep.rs",
            "line_number": 295,
            "column_number": 33,
            "origin_crate": "core",
            "origin_module": "convert::From",
            "call_type": "function"
          }
        ],
        "methods_called": [],
        "where_functions": {},
        "src_location": "src/bin/cargo-fdep.rs",
        "src_code": "|target| TargetKind::from(target) as u8",
        "line_number_start": 295,
        "line_number_end": 295,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      }
    },
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn in_cargo_fdep() {\n    let verbose = has_arg_flag(\"-v\");\n\n    // Some basic sanity checks\n    test_sysroot_consistency();\n\n    // Now run the command.\n    let package = cargo_package();\n    let mut targets: Vec<_> = package.targets.into_iter().collect();\n\n    // Ensure `lib` is compiled before `bin`\n    targets.sort_by_key(|target| TargetKind::from(target) as u8);\n\n    for target in targets {\n        // Skip `cargo fdep`\n        let mut args = std::env::args().skip(2);\n        let kind = TargetKind::from(&target);\n\n        println!(\"Target name: {}\", &target.name);\n\n        // Now we run `cargo check $FLAGS $ARGS`, giving the user the\n        // change to add additional arguments. `FLAGS` is set to identify\n        // this target. The user gets to control what gets actually passed to fdep.\n        let mut cmd = Command::new(\"cargo\");\n        cmd.arg(\"check\");\n\n        match kind {\n            TargetKind::Bin => {\n                // Analyze all the binaries.\n                cmd.arg(\"--bin\").arg(&target.name);\n            }\n            TargetKind::Library => {\n                // There can be only one lib in a crate.\n                cmd.arg(\"--lib\");\n                // Clean the result to disable Cargo's freshness check\n                clean_package(&package.name);\n            }\n            TargetKind::Unknown => {\n                println!(\n                    \"Target {}:{} is not supported\",\n                    target.kind.as_slice().join(\"/\"),\n                    &target.name\n                );\n                continue;\n            }\n        }\n\n        if !cfg!(debug_assertions) && !verbose {\n            cmd.arg(\"-q\");\n        }\n\n        // Forward user-defined `cargo` args until first `--`.\n        while let Some(arg) = args.next() {\n            if arg == \"--\" {\n                break;\n            }\n            cmd.arg(arg);\n        }\n\n        // We want to always run `cargo` with `--target`. This later helps us detect\n        // which crates are proc-macro/build-script (host crates) and which crates are\n        // needed for the program itself.\n        if get_arg_flag_value(\"--target\").is_none() {\n            // When no `--target` is given, default to the host.\n            cmd.arg(\"--target\");\n            cmd.arg(version_info().host);\n        }\n\n        // Serialize the remaining args into a special environment variable.\n        // This will be read by `inside_cargo_rustc` when we go to invoke\n        // our actual target crate (the binary or the test we are running).\n        // Since we're using \"cargo check\", we have no other way of passing\n        // these arguments.\n        let args_vec: Vec<String> = args.collect();\n        cmd.env(\n            \"FDEP_ARGS\",\n            serde_json::to_string(&args_vec).expect(\"failed to serialize args\"),\n        );\n\n        // Set `RUSTC_WRAPPER` to ourselves.  Cargo will prepend that binary to its usual invocation,\n        // i.e., the first argument is `rustc` -- which is what we use in `main` to distinguish\n        // the two codepaths.\n        if env::var_os(\"RUSTC_WRAPPER\").is_some() {\n            eprintln!(\"WARNING: Ignoring existing `RUSTC_WRAPPER` environment variable, fdep does not support wrapping.\");\n        }\n\n        let path = std::env::current_exe().expect(\"current executable path invalid\");\n        cmd.env(\"RUSTC_WRAPPER\", path);\n        if verbose {\n            cmd.env(\"FDEP_VERBOSE\", \"\"); // this makes `inside_cargo_rustc` verbose.\n            eprintln!(\"+ {:?}\", cmd);\n        }\n\n        let mut child = cmd.spawn().expect(\"could not run cargo check\");\n        // 1 hour timeout\n        match child\n            .wait_timeout(Duration::from_secs(60 * 60))\n            .expect(\"failed to wait for subprocess\")\n        {\n            Some(exit_status) => {\n                if !exit_status.success() {\n                    show_error(\"Finished with non-zero exit code\");\n                }\n            }\n            None => {\n                child.kill().expect(\"failed to kill subprocess\");\n                child.wait().expect(\"failed to wait for subprocess\");\n                show_error(\"Killed due to timeout\");\n            }\n        };\n    }\n}",
    "line_number_start": 284,
    "line_number_end": 395,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "inside_cargo_rustc",
    "fully_qualified_path": "cargo_fdep::inside_cargo_rustc",
    "is_method": false,
    "self_type": null,
    "input_types": [],
    "output_types": [
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "types_used": [
      {
        "type_name": "fn(K) -> Result<String, VarError>",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [
          {
            "type_name": "K",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Result<String, VarError>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "VarError",
                "crate_name": "std",
                "module_path": "env",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Args",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<String, VarError>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "VarError",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Command",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "usize",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(Command) -> ()",
        "crate_name": "cargo_fdep",
        "module_path": "inside_cargo_rustc",
        "generic_args": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<PathBuf, Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "which",
            "module_path": "error",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(T) -> Result<PathBuf, Error>",
        "crate_name": "which",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Result<PathBuf, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "PathBuf",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "which",
                "module_path": "error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> Args",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "String",
        "crate_name": "alloc",
        "module_path": "string",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> PathBuf",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<Vec<String, Global>, Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "Vec<String, Global>",
            "crate_name": "alloc",
            "module_path": "vec",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Global",
                "crate_name": "alloc",
                "module_path": "alloc",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "serde_json",
            "module_path": "error",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ PathBuf",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(S) -> Command",
        "crate_name": "std",
        "module_path": "process::{{impl}}",
        "generic_args": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "PathBuf",
        "crate_name": "std",
        "module_path": "path",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> bool",
        "crate_name": "cargo_fdep",
        "module_path": "inside_cargo_rustc",
        "generic_args": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Vec<String, Global>",
        "crate_name": "alloc",
        "module_path": "vec",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Global",
            "crate_name": "alloc",
            "module_path": "alloc",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Skip<Args>",
        "crate_name": "core",
        "module_path": "iter::adapters::skip",
        "generic_args": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ str) -> Result<T, Error>",
        "crate_name": "serde_json",
        "module_path": "de",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Result<T, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "serde_json",
                "module_path": "error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ mut Command",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ String",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "false",
        "literal_type": "boolean",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 450,
        "column_number": 35
      },
      {
        "value": "2",
        "literal_type": "unsigned integer",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 454,
        "column_number": 39
      },
      {
        "value": "\"FDEP_ARGS\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 462,
        "column_number": 34
      },
      {
        "value": "\"missing FDEP_ARGS\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 462,
        "column_number": 54
      },
      {
        "value": "\"failed to deserialize FDEP_ARGS\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 464,
        "column_number": 48
      },
      {
        "value": "\"sccache\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 473,
        "column_number": 37
      },
      {
        "value": "1",
        "literal_type": "unsigned integer",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 477,
        "column_number": 47
      },
      {
        "value": "\"rustc\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 482,
        "column_number": 43
      },
      {
        "value": "2",
        "literal_type": "unsigned integer",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 484,
        "column_number": 47
      }
    ],
    "functions_called": [
      {
        "name": "contains_target_flag",
        "fully_qualified_path": "inside_cargo_rustc::contains_target_flag",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 449,
        "column_number": 27,
        "origin_crate": "cargo_fdep",
        "origin_module": "inside_cargo_rustc",
        "call_type": "function"
      },
      {
        "name": "is_target_crate",
        "fully_qualified_path": "inside_cargo_rustc::is_target_crate",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 449,
        "column_number": 53,
        "origin_crate": "cargo_fdep",
        "origin_module": "inside_cargo_rustc",
        "call_type": "function"
      },
      {
        "name": "new",
        "fully_qualified_path": "std::process::Command::new",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 453,
        "column_number": 22,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "find_fdep",
        "fully_qualified_path": "find_fdep",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "PathBuf",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 453,
        "column_number": 35,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "args",
        "fully_qualified_path": "std::env::args",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 454,
        "column_number": 17,
        "origin_crate": "std",
        "origin_module": "env",
        "call_type": "function"
      },
      {
        "name": "var",
        "fully_qualified_path": "std::env::var",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "K",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Result<String, VarError>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "VarError",
                "crate_name": "std",
                "module_path": "env",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 462,
        "column_number": 20,
        "origin_crate": "std",
        "origin_module": "env",
        "call_type": "function"
      },
      {
        "name": "from_str",
        "fully_qualified_path": "serde_json::from_str",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Result<T, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "serde_json",
                "module_path": "error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 464,
        "column_number": 12,
        "origin_crate": "serde_json",
        "origin_module": "de",
        "call_type": "function"
      },
      {
        "name": "run_command",
        "fully_qualified_path": "inside_cargo_rustc::run_command",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 467,
        "column_number": 8,
        "origin_crate": "cargo_fdep",
        "origin_module": "inside_cargo_rustc",
        "call_type": "function"
      },
      {
        "name": "is_crate_type_lib",
        "fully_qualified_path": "inside_cargo_rustc::is_crate_type_lib",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 472,
        "column_number": 28,
        "origin_crate": "cargo_fdep",
        "origin_module": "inside_cargo_rustc",
        "call_type": "function"
      },
      {
        "name": "which",
        "fully_qualified_path": "which::which",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Result<PathBuf, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "PathBuf",
                "crate_name": "std",
                "module_path": "path",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "which",
                "module_path": "error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 473,
        "column_number": 24,
        "origin_crate": "which",
        "origin_module": "",
        "call_type": "function"
      },
      {
        "name": "new",
        "fully_qualified_path": "std::process::Command::new",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 475,
        "column_number": 30,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "args",
        "fully_qualified_path": "std::env::args",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 477,
        "column_number": 25,
        "origin_crate": "std",
        "origin_module": "env",
        "call_type": "function"
      },
      {
        "name": "new",
        "fully_qualified_path": "std::process::Command::new",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "S",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 482,
        "column_number": 30,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "args",
        "fully_qualified_path": "std::env::args",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "Args",
            "crate_name": "std",
            "module_path": "env",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 484,
        "column_number": 25,
        "origin_crate": "std",
        "origin_module": "env",
        "call_type": "function"
      },
      {
        "name": "run_command",
        "fully_qualified_path": "inside_cargo_rustc::run_command",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 489,
        "column_number": 8,
        "origin_crate": "cargo_fdep",
        "origin_module": "inside_cargo_rustc",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "args",
        "fully_qualified_path": "std::process::Command::args",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "I",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 454,
        "column_number": 12,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "skip",
        "fully_qualified_path": "std::iter::Iterator::skip",
        "is_method": true,
        "receiver_type": {
          "type_name": "Args",
          "crate_name": "std",
          "module_path": "env",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "usize",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Skip<Self>",
            "crate_name": "core",
            "module_path": "iter::adapters::skip",
            "generic_args": [
              {
                "type_name": "Self",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 454,
        "column_number": 34,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "expect",
        "fully_qualified_path": "std::result::Result::<T, E>::expect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<String, VarError>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "VarError",
              "crate_name": "std",
              "module_path": "env",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 462,
        "column_number": 47,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "expect",
        "fully_qualified_path": "std::result::Result::<T, E>::expect",
        "is_method": true,
        "receiver_type": {
          "type_name": "Result<Vec<String, Global>, Error>",
          "crate_name": "core",
          "module_path": "result",
          "generic_args": [
            {
              "type_name": "Vec<String, Global>",
              "crate_name": "alloc",
              "module_path": "vec",
              "generic_args": [
                {
                  "type_name": "String",
                  "crate_name": "alloc",
                  "module_path": "string",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                },
                {
                  "type_name": "Global",
                  "crate_name": "alloc",
                  "module_path": "alloc",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Error",
              "crate_name": "serde_json",
              "module_path": "error",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 464,
        "column_number": 41,
        "origin_crate": "core",
        "origin_module": "result::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "args",
        "fully_qualified_path": "std::process::Command::args",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "I",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 465,
        "column_number": 12,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "args",
        "fully_qualified_path": "std::process::Command::args",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "I",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 477,
        "column_number": 20,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "skip",
        "fully_qualified_path": "std::iter::Iterator::skip",
        "is_method": true,
        "receiver_type": {
          "type_name": "Args",
          "crate_name": "std",
          "module_path": "env",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "usize",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Skip<Self>",
            "crate_name": "core",
            "module_path": "iter::adapters::skip",
            "generic_args": [
              {
                "type_name": "Self",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 477,
        "column_number": 42,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "args",
        "fully_qualified_path": "std::process::Command::args",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "I",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ mut Command",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "Command",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 484,
        "column_number": 20,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "skip",
        "fully_qualified_path": "std::iter::Iterator::skip",
        "is_method": true,
        "receiver_type": {
          "type_name": "Args",
          "crate_name": "std",
          "module_path": "env",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "usize",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Skip<Self>",
            "crate_name": "core",
            "module_path": "iter::adapters::skip",
            "generic_args": [
              {
                "type_name": "Self",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 484,
        "column_number": 42,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      }
    ],
    "where_functions": {},
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn inside_cargo_rustc() {\n    /// Determines if we are being invoked (as rustc) to build a crate for\n    /// the \"target\" architecture, in contrast to the \"host\" architecture.\n    /// Host crates are for build scripts and proc macros and still need to\n    /// be built like normal; target crates need to be built for or interpreted\n    /// by fdep.\n    ///\n    /// Currently, we detect this by checking for \"--target=\", which is\n    /// never set for host crates. This matches what rustc bootstrap does,\n    /// which hopefully makes it \"reliable enough\". This relies on us always\n    /// invoking cargo itself with `--target`, which `in_cargo_fdep` ensures.\n    fn contains_target_flag() -> bool {\n        get_arg_flag_value(\"--target\").is_some()\n    }\n\n    /// Returns whether we are building the target crate.\n    /// Cargo passes the file name as a relative address when building the local crate,\n    /// such as `crawl/src/bin/unsafe-counter.rs` when building the target crate.\n    /// This might not be a stable behavior, but let's rely on this for now.\n    fn is_target_crate() -> bool {\n        let entry_path_arg = match get_first_arg_with_rs_suffix() {\n            Some(arg) => arg,\n            None => return false,\n        };\n        let entry_path: &Path = entry_path_arg.as_ref();\n\n        entry_path.is_relative()\n    }\n\n    fn is_crate_type_lib() -> bool {\n        any_arg_flag(\"--crate-type\", TargetKind::is_lib_str)\n    }\n\n    fn run_command(mut cmd: Command) {\n        // Run it.\n        let verbose = std::env::var_os(\"FDEP_VERBOSE\").is_some();\n        if verbose {\n            eprintln!(\"+ {:?}\", cmd);\n        }\n\n        match cmd.status() {\n            Ok(exit) => {\n                if !exit.success() {\n                    std::process::exit(exit.code().unwrap_or(42));\n                }\n            }\n            Err(e) => panic!(\"error running {:?}:\\n{:?}\", cmd, e),\n        }\n    }\n\n    // TODO: Miri sets custom sysroot here, check if it is needed for us (FDEP-30)\n\n    let is_direct_target = contains_target_flag() && is_target_crate();\n    let mut is_additional_target = false;\n\n    if is_direct_target || is_additional_target {\n        let mut cmd = Command::new(find_fdep());\n        cmd.args(std::env::args().skip(2)); // skip `cargo-fdep rustc`\n\n        // This is the local crate that we want to analyze with Fdep.\n        // (Testing `target_crate` is needed to exclude build scripts.)\n        // We deserialize the arguments that are meant for Fdep from the special\n        // environment variable \"FDEP_ARGS\", and feed them to the 'fdep' binary.\n        //\n        // `env::var` is okay here, well-formed JSON is always UTF-8.\n        let magic = std::env::var(\"FDEP_ARGS\").expect(\"missing FDEP_ARGS\");\n        let fdep_args: Vec<String> =\n            serde_json::from_str(&magic).expect(\"failed to deserialize FDEP_ARGS\");\n        cmd.args(fdep_args);\n\n        run_command(cmd);\n    }\n\n    // Fdep does not build anything.\n    // We need to run rustc (or sccache) to build dependencies.\n    if !is_direct_target || is_crate_type_lib() {\n        let cmd = match which::which(\"sccache\") {\n            Ok(sccache_path) => {\n                let mut cmd = Command::new(&sccache_path);\n                // [\"cargo-fdep\", \"rustc\", ...]\n                cmd.args(std::env::args().skip(1));\n                cmd\n            }\n            Err(_) => {\n                // sccache was not found, use vanilla rustc\n                let mut cmd = Command::new(\"rustc\");\n                // [\"cargo-fdep\", \"rustc\", ...]\n                cmd.args(std::env::args().skip(2));\n                cmd\n            }\n        };\n\n        run_command(cmd);\n    }\n}",
    "line_number_start": 397,
    "line_number_end": 491,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "contains_target_flag",
    "fully_qualified_path": "cargo_fdep::contains_target_flag",
    "is_method": false,
    "self_type": null,
    "input_types": [],
    "output_types": [
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "fn(&'_ str) -> Option<String>",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Option<String>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<String>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"--target\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 409,
        "column_number": 27
      }
    ],
    "functions_called": [
      {
        "name": "get_arg_flag_value",
        "fully_qualified_path": "get_arg_flag_value",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<String>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 409,
        "column_number": 8,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "is_some",
        "fully_qualified_path": "std::option::Option::<T>::is_some",
        "is_method": true,
        "receiver_type": {
          "type_name": "Option<String>",
          "crate_name": "core",
          "module_path": "option",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 409,
        "column_number": 39,
        "origin_crate": "core",
        "origin_module": "option::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {},
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn contains_target_flag() -> bool {\n        get_arg_flag_value(\"--target\").is_some()\n    }",
    "line_number_start": 408,
    "line_number_end": 410,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "is_target_crate",
    "fully_qualified_path": "cargo_fdep::is_target_crate",
    "is_method": false,
    "self_type": null,
    "input_types": [],
    "output_types": [
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "!",
        "crate_name": "unknown",
        "module_path": "unknown",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ Path",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Path",
            "crate_name": "std",
            "module_path": "path",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<String>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "String",
        "crate_name": "alloc",
        "module_path": "string",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn() -> Option<String>",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "Option<String>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "false",
        "literal_type": "boolean",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 419,
        "column_number": 27
      }
    ],
    "functions_called": [
      {
        "name": "get_first_arg_with_rs_suffix",
        "fully_qualified_path": "get_first_arg_with_rs_suffix",
        "is_method": false,
        "receiver_type": null,
        "input_types": [],
        "output_types": [
          {
            "type_name": "Option<String>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 417,
        "column_number": 35,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "as_ref",
        "fully_qualified_path": "std::convert::AsRef::as_ref",
        "is_method": true,
        "receiver_type": {
          "type_name": "String",
          "crate_name": "alloc",
          "module_path": "string",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 421,
        "column_number": 47,
        "origin_crate": "core",
        "origin_module": "convert::AsRef",
        "call_type": "method"
      },
      {
        "name": "is_relative",
        "fully_qualified_path": "std::path::Path::is_relative",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ Path",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "Path",
              "crate_name": "std",
              "module_path": "path",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 423,
        "column_number": 19,
        "origin_crate": "std",
        "origin_module": "path::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {},
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn is_target_crate() -> bool {\n        let entry_path_arg = match get_first_arg_with_rs_suffix() {\n            Some(arg) => arg,\n            None => return false,\n        };\n        let entry_path: &Path = entry_path_arg.as_ref();\n\n        entry_path.is_relative()\n    }",
    "line_number_start": 416,
    "line_number_end": 424,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "is_crate_type_lib",
    "fully_qualified_path": "cargo_fdep::is_crate_type_lib",
    "is_method": false,
    "self_type": null,
    "input_types": [],
    "output_types": [
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "fn(&'_ str, F) -> bool",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "F",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ str) -> bool",
        "crate_name": "cargo_fdep",
        "module_path": "{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"--crate-type\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 427,
        "column_number": 21
      }
    ],
    "functions_called": [
      {
        "name": "any_arg_flag",
        "fully_qualified_path": "any_arg_flag",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "F",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 427,
        "column_number": 8,
        "origin_crate": "cargo_fdep",
        "origin_module": "",
        "call_type": "function"
      }
    ],
    "methods_called": [],
    "where_functions": {},
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn is_crate_type_lib() -> bool {\n        any_arg_flag(\"--crate-type\", TargetKind::is_lib_str)\n    }",
    "line_number_start": 426,
    "line_number_end": 428,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "run_command",
    "fully_qualified_path": "cargo_fdep::run_command",
    "is_method": false,
    "self_type": null,
    "input_types": [
      {
        "type_name": "Command",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "output_types": [
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "types_used": [
      {
        "type_name": "&'_ Command",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Command",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "ExitStatus",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<i32>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "i32",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(i32) -> !",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [
          {
            "type_name": "i32",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<OsString>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "OsString",
            "crate_name": "std",
            "module_path": "ffi::os_str",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[Argument; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Command",
        "crate_name": "std",
        "module_path": "process",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "!",
        "crate_name": "unknown",
        "module_path": "unknown",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<ExitStatus, Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "ExitStatus",
            "crate_name": "std",
            "module_path": "process",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "std",
            "module_path": "io::error",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "()",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(Arguments) -> ()",
        "crate_name": "std",
        "module_path": "io::stdio",
        "generic_args": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[&'_ str; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Argument",
        "crate_name": "core",
        "module_path": "fmt::rt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ [&'static str; ?], &'_ [Argument; ?]) -> Arguments",
        "crate_name": "core",
        "module_path": "fmt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ T) -> Argument",
        "crate_name": "core",
        "module_path": "fmt::rt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(K) -> Option<OsString>",
        "crate_name": "std",
        "module_path": "env",
        "generic_args": [
          {
            "type_name": "K",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          },
          {
            "type_name": "Option<OsString>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "OsString",
                "crate_name": "std",
                "module_path": "ffi::os_str",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [&'_ str; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[&'_ str; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [Argument; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[Argument; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "Argument",
                "crate_name": "core",
                "module_path": "fmt::rt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "i32",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(Arguments) -> !",
        "crate_name": "core",
        "module_path": "panicking",
        "generic_args": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Arguments",
        "crate_name": "core",
        "module_path": "fmt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ Error",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Error",
            "crate_name": "std",
            "module_path": "io::error",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Error",
        "crate_name": "std",
        "module_path": "io::error",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"FDEP_VERBOSE\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 432,
        "column_number": 39
      },
      {
        "value": "\"+ {:?}\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 434,
        "column_number": 22
      },
      {
        "value": "\"+ {:?}\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 434,
        "column_number": 22
      },
      {
        "value": "42",
        "literal_type": "integer",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 440,
        "column_number": 61
      },
      {
        "value": "\"error running {:?}:\\n{:?}\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 443,
        "column_number": 29
      },
      {
        "value": "\"error running {:?}:\\n{:?}\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 443,
        "column_number": 29
      }
    ],
    "functions_called": [
      {
        "name": "var_os",
        "fully_qualified_path": "std::env::var_os",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "K",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<OsString>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "OsString",
                "crate_name": "std",
                "module_path": "ffi::os_str",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 432,
        "column_number": 22,
        "origin_crate": "std",
        "origin_module": "env",
        "call_type": "function"
      },
      {
        "name": "_eprint",
        "fully_qualified_path": "std::io::_eprint",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 221,
        "column_number": 8,
        "origin_crate": "std",
        "origin_module": "io::stdio",
        "call_type": "function"
      },
      {
        "name": "new_v1",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_v1",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs",
        "line_number": 221,
        "column_number": 28,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new_debug",
        "fully_qualified_path": "core::fmt::rt::Argument::<'a>::new_debug",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 434,
        "column_number": 25,
        "origin_crate": "core",
        "origin_module": "fmt::rt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "exit",
        "fully_qualified_path": "std::process::exit",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "i32",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 440,
        "column_number": 20,
        "origin_crate": "std",
        "origin_module": "process",
        "call_type": "function"
      },
      {
        "name": "panic_fmt",
        "fully_qualified_path": "std::rt::panic_fmt",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "!",
            "crate_name": "unknown",
            "module_path": "unknown",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/panic.rs",
        "line_number": 230,
        "column_number": 8,
        "origin_crate": "core",
        "origin_module": "panicking",
        "call_type": "function"
      },
      {
        "name": "new_v1",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_v1",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/panic.rs",
        "line_number": 230,
        "column_number": 30,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new_debug",
        "fully_qualified_path": "core::fmt::rt::Argument::<'a>::new_debug",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 443,
        "column_number": 44,
        "origin_crate": "core",
        "origin_module": "fmt::rt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new_debug",
        "fully_qualified_path": "core::fmt::rt::Argument::<'a>::new_debug",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 443,
        "column_number": 51,
        "origin_crate": "core",
        "origin_module": "fmt::rt::{{impl}}",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "is_some",
        "fully_qualified_path": "std::option::Option::<T>::is_some",
        "is_method": true,
        "receiver_type": {
          "type_name": "Option<OsString>",
          "crate_name": "core",
          "module_path": "option",
          "generic_args": [
            {
              "type_name": "OsString",
              "crate_name": "std",
              "module_path": "ffi::os_str",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 432,
        "column_number": 55,
        "origin_crate": "core",
        "origin_module": "option::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "status",
        "fully_qualified_path": "std::process::Command::status",
        "is_method": true,
        "receiver_type": {
          "type_name": "Command",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Result<ExitStatus, Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "ExitStatus",
                "crate_name": "std",
                "module_path": "process",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "std",
                "module_path": "io::error",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 437,
        "column_number": 18,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "success",
        "fully_qualified_path": "std::process::ExitStatus::success",
        "is_method": true,
        "receiver_type": {
          "type_name": "ExitStatus",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 439,
        "column_number": 25,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "unwrap_or",
        "fully_qualified_path": "std::option::Option::<T>::unwrap_or",
        "is_method": true,
        "receiver_type": {
          "type_name": "Option<i32>",
          "crate_name": "core",
          "module_path": "option",
          "generic_args": [
            {
              "type_name": "i32",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "T",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 440,
        "column_number": 51,
        "origin_crate": "core",
        "origin_module": "option::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "code",
        "fully_qualified_path": "std::process::ExitStatus::code",
        "is_method": true,
        "receiver_type": {
          "type_name": "ExitStatus",
          "crate_name": "std",
          "module_path": "process",
          "generic_args": [],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Option<i32>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "i32",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 440,
        "column_number": 44,
        "origin_crate": "std",
        "origin_module": "process::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {},
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn run_command(mut cmd: Command) {\n        // Run it.\n        let verbose = std::env::var_os(\"FDEP_VERBOSE\").is_some();\n        if verbose {\n            eprintln!(\"+ {:?}\", cmd);\n        }\n\n        match cmd.status() {\n            Ok(exit) => {\n                if !exit.success() {\n                    std::process::exit(exit.code().unwrap_or(42));\n                }\n            }\n            Err(e) => panic!(\"error running {:?}:\\n{:?}\", cmd, e),\n        }\n    }",
    "line_number_start": 430,
    "line_number_end": 445,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "is_lib_str",
    "fully_qualified_path": "cargo_fdep::is_lib_str",
    "is_method": true,
    "self_type": null,
    "input_types": [
      {
        "type_name": "&str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "output_types": [
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"lib\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 254,
        "column_number": 13
      },
      {
        "value": "\"rlib\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 254,
        "column_number": 27
      },
      {
        "value": "\"staticlib\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 254,
        "column_number": 42
      }
    ],
    "functions_called": [],
    "methods_called": [],
    "where_functions": {},
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn is_lib_str(s: &str) -> bool {\n        s == \"lib\" || s == \"rlib\" || s == \"staticlib\"\n    }",
    "line_number_start": 253,
    "line_number_end": 255,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub()",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "from",
    "fully_qualified_path": "cargo_fdep::from",
    "is_method": true,
    "self_type": null,
    "input_types": [
      {
        "type_name": "&Target",
        "crate_name": "cargo_metadata",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "output_types": [],
    "types_used": [
      {
        "type_name": "&'_ Target",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Target",
            "crate_name": "cargo_metadata",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Iter<String>",
        "crate_name": "core",
        "module_path": "slice::iter",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<&'_ String>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "&'_ String",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "TargetKind",
        "crate_name": "cargo_fdep",
        "module_path": "",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "usize",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((&'_ String)) -> bool>",
        "crate_name": "cargo_fdep",
        "module_path": "<TargetKind as std::convert::From<&cargo_metadata::Target>>::from::{closure#0}",
        "generic_args": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Vec<String, Global>",
        "crate_name": "alloc",
        "module_path": "vec",
        "generic_args": [
          {
            "type_name": "String",
            "crate_name": "alloc",
            "module_path": "string",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Global",
            "crate_name": "alloc",
            "module_path": "alloc",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "bool",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Option<&'_ str>",
        "crate_name": "core",
        "module_path": "option",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Closure<((&'_ String)) -> &'_ str>",
        "crate_name": "cargo_fdep",
        "module_path": "<TargetKind as std::convert::From<&cargo_metadata::Target>>::from::{closure#1}",
        "generic_args": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "0",
        "literal_type": "unsigned integer",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 262,
        "column_number": 52
      },
      {
        "value": "\"bin\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 262,
        "column_number": 27
      }
    ],
    "functions_called": [],
    "methods_called": [
      {
        "name": "any",
        "fully_qualified_path": "std::iter::Iterator::any",
        "is_method": true,
        "receiver_type": {
          "type_name": "Iter<String>",
          "crate_name": "core",
          "module_path": "slice::iter",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "F",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 260,
        "column_number": 30,
        "origin_crate": "core",
        "origin_module": "iter::traits::iterator::Iterator",
        "call_type": "method"
      },
      {
        "name": "iter",
        "fully_qualified_path": "core::slice::<impl [T]>::iter",
        "is_method": true,
        "receiver_type": {
          "type_name": "Vec<String, Global>",
          "crate_name": "alloc",
          "module_path": "vec",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Global",
              "crate_name": "alloc",
              "module_path": "alloc",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [],
        "output_types": [
          {
            "type_name": "Iter<T>",
            "crate_name": "core",
            "module_path": "slice::iter",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 260,
        "column_number": 23,
        "origin_crate": "core",
        "origin_module": "slice::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "map",
        "fully_qualified_path": "std::option::Option::<T>::map",
        "is_method": true,
        "receiver_type": {
          "type_name": "Option<&'_ String>",
          "crate_name": "core",
          "module_path": "option",
          "generic_args": [
            {
              "type_name": "&'_ String",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [
                {
                  "type_name": "String",
                  "crate_name": "alloc",
                  "module_path": "string",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "F",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<U>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "U",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 262,
        "column_number": 55,
        "origin_crate": "core",
        "origin_module": "option::{{impl}}",
        "call_type": "method"
      },
      {
        "name": "get",
        "fully_qualified_path": "core::slice::<impl [T]>::get",
        "is_method": true,
        "receiver_type": {
          "type_name": "Vec<String, Global>",
          "crate_name": "alloc",
          "module_path": "vec",
          "generic_args": [
            {
              "type_name": "String",
              "crate_name": "alloc",
              "module_path": "string",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            },
            {
              "type_name": "Global",
              "crate_name": "alloc",
              "module_path": "alloc",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "I",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Option<&'_ Alias(Projection, AliasTy { args: [I/#1, [T/#0]], def_id: DefId(2:11586 ~ core[5d62]::slice::index::SliceIndex::Output), .. })>",
            "crate_name": "core",
            "module_path": "option",
            "generic_args": [
              {
                "type_name": "&'_ Alias(Projection, AliasTy { args: [I/#1, [T/#0]], def_id: DefId(2:11586 ~ core[5d62]::slice::index::SliceIndex::Output), .. })",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "Alias(Projection, AliasTy { args: [I/#1, [T/#0]], def_id: DefId(2:11586 ~ core[5d62]::slice::index::SliceIndex::Output), .. })",
                    "crate_name": "unknown",
                    "module_path": "unknown",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 262,
        "column_number": 48,
        "origin_crate": "core",
        "origin_module": "slice::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {
      "closure_2": {
        "name": "closure_2",
        "fully_qualified_path": "closure_2",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ String",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [],
        "functions_called": [],
        "methods_called": [
          {
            "name": "as_ref",
            "fully_qualified_path": "std::convert::AsRef::as_ref",
            "is_method": true,
            "receiver_type": {
              "type_name": "&'_ String",
              "crate_name": "core",
              "module_path": "primitive",
              "generic_args": [
                {
                  "type_name": "String",
                  "crate_name": "alloc",
                  "module_path": "string",
                  "generic_args": [],
                  "is_generic_param": false,
                  "src_location": ""
                }
              ],
              "is_generic_param": false,
              "src_location": ""
            },
            "input_types": [],
            "output_types": [
              {
                "type_name": "&'_ T",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "T",
                    "crate_name": "",
                    "module_path": "",
                    "generic_args": [],
                    "is_generic_param": true,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/cargo-fdep.rs",
            "line_number": 262,
            "column_number": 65,
            "origin_crate": "core",
            "origin_module": "convert::AsRef",
            "call_type": "method"
          }
        ],
        "where_functions": {},
        "src_location": "src/bin/cargo-fdep.rs",
        "src_code": "|s| s.as_ref()",
        "line_number_start": 262,
        "line_number_end": 262,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      },
      "closure_1": {
        "name": "closure_1",
        "fully_qualified_path": "closure_1",
        "is_method": false,
        "self_type": null,
        "input_types": [
          {
            "type_name": "(&'_ String)",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "&'_ String",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "String",
                    "crate_name": "alloc",
                    "module_path": "string",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "types_used": [
          {
            "type_name": "bool",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "fn(&'_ str) -> bool",
            "crate_name": "cargo_fdep",
            "module_path": "{{impl}}",
            "generic_args": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "bool",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ String",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "String",
                "crate_name": "alloc",
                "module_path": "string",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "literals_used": [],
        "functions_called": [
          {
            "name": "is_lib_str",
            "fully_qualified_path": "TargetKind::is_lib_str",
            "is_method": false,
            "receiver_type": null,
            "input_types": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "output_types": [
              {
                "type_name": "bool",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "src_location": "src/bin/cargo-fdep.rs",
            "line_number": 260,
            "column_number": 38,
            "origin_crate": "cargo_fdep",
            "origin_module": "{{impl}}",
            "call_type": "function"
          }
        ],
        "methods_called": [],
        "where_functions": {},
        "src_location": "src/bin/cargo-fdep.rs",
        "src_code": "|s| TargetKind::is_lib_str(s)",
        "line_number_start": 260,
        "line_number_end": 260,
        "crate_name": "local",
        "module_path": "closure",
        "visibility": "private",
        "doc_comments": "",
        "attributes": []
      }
    },
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn from(target: &cargo_metadata::Target) -> Self {\n        if target.kind.iter().any(|s| TargetKind::is_lib_str(s)) {\n            TargetKind::Library\n        } else if let Some(\"bin\") = target.kind.get(0).map(|s| s.as_ref()) {\n            TargetKind::Bin\n        } else {\n            TargetKind::Unknown\n        }\n    }",
    "line_number_start": 259,
    "line_number_end": 267,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub",
    "doc_comments": "",
    "attributes": []
  },
  {
    "name": "fmt",
    "fully_qualified_path": "cargo_fdep::fmt",
    "is_method": true,
    "self_type": null,
    "input_types": [
      {
        "type_name": "&mut Formatter<''_>",
        "crate_name": "core",
        "module_path": "fmt",
        "generic_args": [
          {
            "type_name": "''_",
            "crate_name": "",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": true,
            "src_location": "src/bin/cargo-fdep.rs"
          }
        ],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "output_types": [
      {
        "type_name": "Result",
        "crate_name": "core",
        "module_path": "fmt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": "src/bin/cargo-fdep.rs"
      }
    ],
    "types_used": [
      {
        "type_name": "&'_ mut Formatter",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "Formatter",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [Argument; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[Argument; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "Argument",
                "crate_name": "core",
                "module_path": "fmt::rt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[Argument; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Result<(), Error>",
        "crate_name": "core",
        "module_path": "result",
        "generic_args": [
          {
            "type_name": "()",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Error",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "[&'_ str; usize]",
        "crate_name": "core",
        "module_path": "array",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ [&'static str; ?], &'_ [Argument; ?]) -> Arguments",
        "crate_name": "core",
        "module_path": "fmt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Argument",
        "crate_name": "core",
        "module_path": "fmt::rt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ [&'_ str; usize]",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "[&'_ str; usize]",
            "crate_name": "core",
            "module_path": "array",
            "generic_args": [
              {
                "type_name": "&'_ str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [
                  {
                    "type_name": "str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ &'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "&'_ str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "str",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ TargetKind",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "TargetKind",
            "crate_name": "cargo_fdep",
            "module_path": "",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "Arguments",
        "crate_name": "core",
        "module_path": "fmt",
        "generic_args": [],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "&'_ str",
        "crate_name": "core",
        "module_path": "primitive",
        "generic_args": [
          {
            "type_name": "str",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      },
      {
        "type_name": "fn(&'_ T) -> Argument",
        "crate_name": "core",
        "module_path": "fmt::rt::{{impl}}",
        "generic_args": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "is_generic_param": false,
        "src_location": ""
      }
    ],
    "literals_used": [
      {
        "value": "\"{}\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 274,
        "column_number": 12
      },
      {
        "value": "\"lib\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 276,
        "column_number": 39
      },
      {
        "value": "\"bin\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 277,
        "column_number": 35
      },
      {
        "value": "\"unknown\"",
        "literal_type": "&'{erased} str",
        "span": "src/bin/cargo-fdep.rs",
        "line_number": 278,
        "column_number": 39
      }
    ],
    "functions_called": [
      {
        "name": "new_v1",
        "fully_qualified_path": "std::fmt::Arguments::<'a>::new_v1",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ [&'static str; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[&'static str; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "&'static str",
                    "crate_name": "core",
                    "module_path": "primitive",
                    "generic_args": [
                      {
                        "type_name": "str",
                        "crate_name": "core",
                        "module_path": "primitive",
                        "generic_args": [],
                        "is_generic_param": false,
                        "src_location": ""
                      }
                    ],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          },
          {
            "type_name": "&'_ [Argument; ?]",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "[Argument; ?]",
                "crate_name": "core",
                "module_path": "array",
                "generic_args": [
                  {
                    "type_name": "Argument",
                    "crate_name": "core",
                    "module_path": "fmt::rt",
                    "generic_args": [],
                    "is_generic_param": false,
                    "src_location": ""
                  }
                ],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        "line_number": 650,
        "column_number": 23,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "function"
      },
      {
        "name": "new_display",
        "fully_qualified_path": "core::fmt::rt::Argument::<'a>::new_display",
        "is_method": false,
        "receiver_type": null,
        "input_types": [
          {
            "type_name": "&'_ T",
            "crate_name": "core",
            "module_path": "primitive",
            "generic_args": [
              {
                "type_name": "T",
                "crate_name": "",
                "module_path": "",
                "generic_args": [],
                "is_generic_param": true,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Argument",
            "crate_name": "core",
            "module_path": "fmt::rt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "src/bin/cargo-fdep.rs",
        "line_number": 274,
        "column_number": 13,
        "origin_crate": "core",
        "origin_module": "fmt::rt::{{impl}}",
        "call_type": "function"
      }
    ],
    "methods_called": [
      {
        "name": "write_fmt",
        "fully_qualified_path": "std::fmt::Formatter::<'a>::write_fmt",
        "is_method": true,
        "receiver_type": {
          "type_name": "&'_ mut Formatter",
          "crate_name": "core",
          "module_path": "primitive",
          "generic_args": [
            {
              "type_name": "Formatter",
              "crate_name": "core",
              "module_path": "fmt",
              "generic_args": [],
              "is_generic_param": false,
              "src_location": ""
            }
          ],
          "is_generic_param": false,
          "src_location": ""
        },
        "input_types": [
          {
            "type_name": "Arguments",
            "crate_name": "core",
            "module_path": "fmt",
            "generic_args": [],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "output_types": [
          {
            "type_name": "Result<(), Error>",
            "crate_name": "core",
            "module_path": "result",
            "generic_args": [
              {
                "type_name": "()",
                "crate_name": "core",
                "module_path": "primitive",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              },
              {
                "type_name": "Error",
                "crate_name": "core",
                "module_path": "fmt",
                "generic_args": [],
                "is_generic_param": false,
                "src_location": ""
              }
            ],
            "is_generic_param": false,
            "src_location": ""
          }
        ],
        "src_location": "/Users/eswar.tadiparth/.rustup/toolchains/nightly-2024-08-07-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/macros/mod.rs",
        "line_number": 650,
        "column_number": 13,
        "origin_crate": "core",
        "origin_module": "fmt::{{impl}}",
        "call_type": "method"
      }
    ],
    "where_functions": {},
    "src_location": "src/bin/cargo-fdep.rs",
    "src_code": "fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n        write!(\n            f,\n            \"{}\",\n            match self {\n                TargetKind::Library => \"lib\",\n                TargetKind::Bin => \"bin\",\n                TargetKind::Unknown => \"unknown\",\n            }\n        )\n    }",
    "line_number_start": 271,
    "line_number_end": 281,
    "crate_name": "cargo_fdep",
    "module_path": "",
    "visibility": "pub",
    "doc_comments": "",
    "attributes": []
  }
]