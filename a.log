Running Rust compiler with arguments: ["target/debug/rust-ast-printer", "src/main.rs", "--sysroot", "/Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin"]
Traversing and printing the AST...
Item:  (kind: "`use` import")
  DefId: DefId(0:1 ~ main[cc0f]::{use#0})
  Path: {use#0}

Item: std (kind: "extern crate")
  DefId: DefId(0:2 ~ main[cc0f]::std)
  Path: std

Item: rustc_driver (kind: "extern crate")
  DefId: DefId(0:3 ~ main[cc0f]::rustc_driver)
  Path: rustc_driver
  Location: Real(LocalPath("src/main.rs")):3:0-3:26

Item: rustc_hir (kind: "extern crate")
  DefId: DefId(0:4 ~ main[cc0f]::rustc_hir)
  Path: rustc_hir
  Location: Real(LocalPath("src/main.rs")):4:0-4:23

Item: rustc_interface (kind: "extern crate")
  DefId: DefId(0:5 ~ main[cc0f]::rustc_interface)
  Path: rustc_interface
  Location: Real(LocalPath("src/main.rs")):5:0-5:29

Item: rustc_middle (kind: "extern crate")
  DefId: DefId(0:6 ~ main[cc0f]::rustc_middle)
  Path: rustc_middle
  Location: Real(LocalPath("src/main.rs")):6:0-6:26

Item: rustc_span (kind: "extern crate")
  DefId: DefId(0:7 ~ main[cc0f]::rustc_span)
  Path: rustc_span
  Location: Real(LocalPath("src/main.rs")):7:0-7:24

Item:  (kind: "`use` import")
  DefId: DefId(0:8 ~ main[cc0f]::{use#1})
  Path: {use#1}
  Location: Real(LocalPath("src/main.rs")):9:0-9:56

Item: Callbacks (kind: "`use` import")
  DefId: DefId(0:9 ~ main[cc0f]::{use#2})
  Path: {use#2}
  Location: Real(LocalPath("src/main.rs")):9:19-9:28

Item: Compilation (kind: "`use` import")
  DefId: DefId(0:10 ~ main[cc0f]::{use#3})
  Path: {use#3}
  Location: Real(LocalPath("src/main.rs")):9:30-9:41

Item: RunCompiler (kind: "`use` import")
  DefId: DefId(0:11 ~ main[cc0f]::{use#4})
  Path: {use#4}
  Location: Real(LocalPath("src/main.rs")):9:43-9:54

Item:  (kind: "`use` import")
  DefId: DefId(0:12 ~ main[cc0f]::{use#5})
  Path: {use#5}
  Location: Real(LocalPath("src/main.rs")):10:0-10:38

Item: intravisit (kind: "`use` import")
  DefId: DefId(0:13 ~ main[cc0f]::{use#6})
  Path: {use#6}
  Location: Real(LocalPath("src/main.rs")):10:16-10:26

Item: ItemKind (kind: "`use` import")
  DefId: DefId(0:14 ~ main[cc0f]::{use#7})
  Path: {use#7}
  Location: Real(LocalPath("src/main.rs")):10:28-10:36

Item: Queries (kind: "`use` import")
  DefId: DefId(0:15 ~ main[cc0f]::{use#8})
  Path: {use#8}
  Location: Real(LocalPath("src/main.rs")):11:0-11:29

Item: Pos (kind: "`use` import")
  DefId: DefId(0:16 ~ main[cc0f]::{use#9})
  Path: {use#9}
  Location: Real(LocalPath("src/main.rs")):12:0-12:20

Item: env (kind: "`use` import")
  DefId: DefId(0:17 ~ main[cc0f]::{use#10})
  Path: {use#10}
  Location: Real(LocalPath("src/main.rs")):13:0-13:13

Item: AstPrinter (kind: "struct")
  DefId: DefId(0:18 ~ main[cc0f]::AstPrinter)
  Path: AstPrinter
  Location: Real(LocalPath("src/main.rs")):15:0-15:18

Item:  (kind: "implementation")
  DefId: DefId(0:20 ~ main[cc0f]::{impl#0})
  Path: <AstPrinter as rustc_driver::Callbacks>
  Location: Real(LocalPath("src/main.rs")):17:0-44:1

Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).22), kind: Semi(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).7), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).20), kind: Semi(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).8), kind: Call(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).9), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#36), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#36, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).10), res: Err, args: None, infer_args: true }, PathSegment { ident: io#36, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).11), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#36, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).12), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#36) }, [Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).13), kind: Call(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).19), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).17), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37) }, PathSegment { ident: new_const#37, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).18), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37) }, [Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).16), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).15), kind: Array([Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).14), kind: Lit(Spanned { node: Str("Traversing and printing the AST...\n", Cooked), span: src/main.rs:23:18: 23:54 (#0) }), span: src/main.rs:23:18: 23:54 (#0) }]), span: src/main.rs:23:18: 23:54 (#0) }), span: src/main.rs:23:18: 23:54 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#36) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#36) }], expr: None, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).21), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#36), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#36) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#36) }, Stmt { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).80), kind: Semi(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).23), kind: MethodCall(PathSegment { ident: enter#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).24), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).25), kind: MethodCall(PathSegment { ident: borrow#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).27), kind: MethodCall(PathSegment { ident: unwrap#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).28), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).29), kind: MethodCall(PathSegment { ident: global_ctxt#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).30), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).31), kind: Path(Resolved(None, Path { span: src/main.rs:26:9: 26:16 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).6)), segments: [PathSegment { ident: queries#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).32), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).6)), args: None, infer_args: true }] })), span: src/main.rs:26:9: 26:16 (#0) }, [], src/main.rs:26:17: 26:30 (#0)), span: src/main.rs:26:9: 26:30 (#0) }, [], src/main.rs:26:31: 26:39 (#0)), span: src/main.rs:26:9: 26:39 (#0) }, [], src/main.rs:26:40: 26:48 (#0)), span: src/main.rs:26:9: 26:48 (#0) }, [Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).33), kind: Closure(Closure { def_id: DefId(0:23 ~ main[cc0f]::{impl#0}::after_analysis::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).79), kind: Infer, span: src/main.rs:26:56: 26:59 (#0) }], output: DefaultReturn(src/main.rs:26:61: 26:61 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).36) }, fn_decl_span: src/main.rs:26:55: 26:60 (#0), fn_arg_span: Some(src/main.rs:26:55: 26:60 (#0)), movability: None }), span: src/main.rs:26:55: 40:10 (#0) }], src/main.rs:26:49: 40:11 (#0)), span: src/main.rs:26:9: 40:11 (#0) }), span: src/main.rs:26:9: 40:12 (#0) }], expr: Some(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).81), kind: Path(Resolved(None, Path { span: src/main.rs:42:9: 42:30 (#0), res: Def(Ctor(Variant, Const), DefId(21:658 ~ rustc_driver_impl[66c9]::Compilation::Continue::{constructor#0})), segments: [PathSegment { ident: Compilation#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).82), res: Def(Enum, DefId(21:654 ~ rustc_driver_impl[66c9]::Compilation)), args: None, infer_args: true }, PathSegment { ident: Continue#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).83), res: Def(Ctor(Variant, Const), DefId(21:658 ~ rustc_driver_impl[66c9]::Compilation::Continue::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:42:9: 42:30 (#0) }), hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).84), rules: DefaultBlock, span: src/main.rs:22:22: 43:6 (#0), targeted_by_break: false }, None))
  Expression type: Adt(rustc_driver::Compilation, [])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).20), kind: Semi(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).8), kind: Call(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).9), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#36), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#36, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).10), res: Err, args: None, infer_args: true }, PathSegment { ident: io#36, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).11), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#36, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).12), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#36) }, [Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).13), kind: Call(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).19), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).17), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37) }, PathSegment { ident: new_const#37, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).18), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37) }, [Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).16), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).15), kind: Array([Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).14), kind: Lit(Spanned { node: Str("Traversing and printing the AST...\n", Cooked), span: src/main.rs:23:18: 23:54 (#0) }), span: src/main.rs:23:18: 23:54 (#0) }]), span: src/main.rs:23:18: 23:54 (#0) }), span: src/main.rs:23:18: 23:54 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#36) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#36) }], expr: None, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).21), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#36), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).9), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#36), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#36, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).10), res: Err, args: None, infer_args: true }, PathSegment { ident: io#36, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).11), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#36, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).12), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#36) }, [Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).13), kind: Call(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).19), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).17), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37) }, PathSegment { ident: new_const#37, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).18), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37) }, [Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).16), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).15), kind: Array([Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).14), kind: Lit(Spanned { node: Str("Traversing and printing the AST...\n", Cooked), span: src/main.rs:23:18: 23:54 (#0) }), span: src/main.rs:23:18: 23:54 (#0) }]), span: src/main.rs:23:18: 23:54 (#0) }), span: src/main.rs:23:18: 23:54 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#36), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#36, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).10), res: Err, args: None, infer_args: true }, PathSegment { ident: io#36, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).11), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#36, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).12), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).19), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).17), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37) }, PathSegment { ident: new_const#37, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).18), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37) }, [Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).16), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).15), kind: Array([Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).14), kind: Lit(Spanned { node: Str("Traversing and printing the AST...\n", Cooked), span: src/main.rs:23:18: 23:54 (#0) }), span: src/main.rs:23:18: 23:54 (#0) }]), span: src/main.rs:23:18: 23:54 (#0) }), span: src/main.rs:23:18: 23:54 (#0) }]))
  Function call with 1 arguments
  Called function: std::fmt::Arguments::<'a>::new_const
  Function type: FnDef(DefId(2:9415 ~ core[ae61]::fmt::{impl#2}::new_const), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).17), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#37) }, PathSegment { ident: new_const#37, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).18), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9415 ~ core[ae61]::fmt::{impl#2}::new_const), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).15), kind: Array([Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).14), kind: Lit(Spanned { node: Str("Traversing and printing the AST...\n", Cooked), span: src/main.rs:23:18: 23:54 (#0) }), span: src/main.rs:23:18: 23:54 (#0) }]), span: src/main.rs:23:18: 23:54 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).14), kind: Lit(Spanned { node: Str("Traversing and printing the AST...\n", Cooked), span: src/main.rs:23:18: 23:54 (#0) }), span: src/main.rs:23:18: 23:54 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Lit(Spanned { node: Str("Traversing and printing the AST...\n", Cooked), span: src/main.rs:23:18: 23:54 (#0) }))
  Expression type: &ReErased str
Expression (kind: MethodCall(PathSegment { ident: enter#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).24), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).25), kind: MethodCall(PathSegment { ident: borrow#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).27), kind: MethodCall(PathSegment { ident: unwrap#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).28), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).29), kind: MethodCall(PathSegment { ident: global_ctxt#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).30), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).31), kind: Path(Resolved(None, Path { span: src/main.rs:26:9: 26:16 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).6)), segments: [PathSegment { ident: queries#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).32), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).6)), args: None, infer_args: true }] })), span: src/main.rs:26:9: 26:16 (#0) }, [], src/main.rs:26:17: 26:30 (#0)), span: src/main.rs:26:9: 26:30 (#0) }, [], src/main.rs:26:31: 26:39 (#0)), span: src/main.rs:26:9: 26:39 (#0) }, [], src/main.rs:26:40: 26:48 (#0)), span: src/main.rs:26:9: 26:48 (#0) }, [Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).33), kind: Closure(Closure { def_id: DefId(0:23 ~ main[cc0f]::{impl#0}::after_analysis::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).79), kind: Infer, span: src/main.rs:26:56: 26:59 (#0) }], output: DefaultReturn(src/main.rs:26:61: 26:61 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).36) }, fn_decl_span: src/main.rs:26:55: 26:60 (#0), fn_arg_span: Some(src/main.rs:26:55: 26:60 (#0)), movability: None }), span: src/main.rs:26:55: 40:10 (#0) }], src/main.rs:26:49: 40:11 (#0)))
  Method call: enter with 1 arguments
  Receiver type: Adt(std::cell::Ref, [ReErased, &ReErased Adt(rustc_middle::ty::GlobalCtxt, [ReErased])])
  Method: rustc_middle::ty::GlobalCtxt::<'tcx>::enter
  Method type: FnDef(DefId(155:6527 ~ rustc_middle[ca3f]::ty::context::{impl#9}::enter), [ReEarlyBound(DefId(155:6526 ~ rustc_middle[ca3f]::ty::context::{impl#9}::'tcx), 0, 'tcx), ReEarlyBound(DefId(155:6528 ~ rustc_middle[ca3f]::ty::context::{impl#9}::enter::'a), 1, 'a), F/#2, R/#3])
  Expression type: ()
Expression (kind: MethodCall(PathSegment { ident: borrow#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).27), kind: MethodCall(PathSegment { ident: unwrap#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).28), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).29), kind: MethodCall(PathSegment { ident: global_ctxt#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).30), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).31), kind: Path(Resolved(None, Path { span: src/main.rs:26:9: 26:16 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).6)), segments: [PathSegment { ident: queries#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).32), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).6)), args: None, infer_args: true }] })), span: src/main.rs:26:9: 26:16 (#0) }, [], src/main.rs:26:17: 26:30 (#0)), span: src/main.rs:26:9: 26:30 (#0) }, [], src/main.rs:26:31: 26:39 (#0)), span: src/main.rs:26:9: 26:39 (#0) }, [], src/main.rs:26:40: 26:48 (#0)))
  Method call: borrow with 0 arguments
  Receiver type: Adt(rustc_interface::queries::QueryResult, [ReErased, &ReErased Adt(rustc_middle::ty::GlobalCtxt, [ReErased])])
  Method: rustc_data_structures::steal::Steal::<T>::borrow
  Method type: FnDef(DefId(34:2386 ~ rustc_data_structures[0e5b]::steal::{impl#0}::borrow), [T/#0])
  Expression type: Adt(std::cell::Ref, [ReErased, &ReErased Adt(rustc_middle::ty::GlobalCtxt, [ReErased])])
Expression (kind: MethodCall(PathSegment { ident: unwrap#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).28), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).29), kind: MethodCall(PathSegment { ident: global_ctxt#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).30), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).31), kind: Path(Resolved(None, Path { span: src/main.rs:26:9: 26:16 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).6)), segments: [PathSegment { ident: queries#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).32), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).6)), args: None, infer_args: true }] })), span: src/main.rs:26:9: 26:16 (#0) }, [], src/main.rs:26:17: 26:30 (#0)), span: src/main.rs:26:9: 26:30 (#0) }, [], src/main.rs:26:31: 26:39 (#0)))
  Method call: unwrap with 0 arguments
  Receiver type: Adt(std::result::Result, [Adt(rustc_interface::queries::QueryResult, [ReErased, &ReErased Adt(rustc_middle::ty::GlobalCtxt, [ReErased])]), Adt(rustc_span::ErrorGuaranteed, [])])
  Method: std::result::Result::<T, E>::unwrap
  Method type: FnDef(DefId(2:8801 ~ core[ae61]::result::{impl#0}::unwrap), [T/#0, E/#1])
  Expression type: Adt(rustc_interface::queries::QueryResult, [ReErased, &ReErased Adt(rustc_middle::ty::GlobalCtxt, [ReErased])])
Expression (kind: MethodCall(PathSegment { ident: global_ctxt#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).30), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).31), kind: Path(Resolved(None, Path { span: src/main.rs:26:9: 26:16 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).6)), segments: [PathSegment { ident: queries#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).32), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).6)), args: None, infer_args: true }] })), span: src/main.rs:26:9: 26:16 (#0) }, [], src/main.rs:26:17: 26:30 (#0)))
  Method call: global_ctxt with 0 arguments
  Receiver type: &ReErased Adt(rustc_interface::Queries, [ReErased])
  Method: rustc_interface::Queries::<'tcx>::global_ctxt
  Method type: FnDef(DefId(198:407 ~ rustc_interface[b99b]::queries::{impl#5}::global_ctxt), [ReEarlyBound(DefId(198:390 ~ rustc_interface[b99b]::queries::{impl#5}::'tcx), 0, 'tcx)])
  Expression type: Adt(std::result::Result, [Adt(rustc_interface::queries::QueryResult, [ReErased, &ReErased Adt(rustc_middle::ty::GlobalCtxt, [ReErased])]), Adt(rustc_span::ErrorGuaranteed, [])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:26:9: 26:16 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).6)), segments: [PathSegment { ident: queries#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).32), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).6)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_interface::Queries, [ReErased])
Expression (kind: Closure(Closure { def_id: DefId(0:23 ~ main[cc0f]::{impl#0}::after_analysis::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).79), kind: Infer, span: src/main.rs:26:56: 26:59 (#0) }], output: DefaultReturn(src/main.rs:26:61: 26:61 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).36) }, fn_decl_span: src/main.rs:26:55: 26:60 (#0), fn_arg_span: Some(src/main.rs:26:55: 26:60 (#0)), movability: None }))
  Expression type: Closure(DefId(0:23 ~ main[cc0f]::{impl#0}::after_analysis::{closure#0}), [i32, Binder(extern "RustCall" fn((Adt(rustc_middle::ty::TyCtxt, [ReErased]),)), []), ()])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).37), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).43), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).43), hir#0, None), span: src/main.rs:28:17: 28:20 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).38), kind: MethodCall(PathSegment { ident: hir#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).39), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).40), kind: Path(Resolved(None, Path { span: src/main.rs:28:23: 28:26 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).35)), segments: [PathSegment { ident: tcx#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).41), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).35)), args: None, infer_args: true }] })), span: src/main.rs:28:23: 28:26 (#0) }, [], src/main.rs:28:27: 28:32 (#0)), span: src/main.rs:28:23: 28:32 (#0) }), els: None, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).42), span: src/main.rs:28:13: 28:33 (#0), source: Normal }), span: src/main.rs:28:13: 28:33 (#0) }, Stmt { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).44), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).50), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).50), krate#0, None), span: src/main.rs:29:17: 29:22 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).45), kind: MethodCall(PathSegment { ident: root_module#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).46), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).47), kind: Path(Resolved(None, Path { span: src/main.rs:29:25: 29:28 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).43)), segments: [PathSegment { ident: hir#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).48), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).43)), args: None, infer_args: true }] })), span: src/main.rs:29:25: 29:28 (#0) }, [], src/main.rs:29:29: 29:42 (#0)), span: src/main.rs:29:25: 29:42 (#0) }), els: None, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).49), span: src/main.rs:29:13: 29:43 (#0), source: Normal }), span: src/main.rs:29:13: 29:43 (#0) }, Stmt { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).51), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).59), kind: Binding(BindingAnnotation(No, Mut), HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).59), visitor#0, None), span: src/main.rs:32:17: 32:28 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).52), kind: Struct(Resolved(None, Path { span: src/main.rs:32:31: 32:43 (#0), res: Def(Struct, DefId(0:24 ~ main[cc0f]::PrintVisitor)), segments: [PathSegment { ident: PrintVisitor#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).54), res: Def(Struct, DefId(0:24 ~ main[cc0f]::PrintVisitor)), args: Some(GenericArgs { args: [Lifetime(Lifetime { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).53), ident: #0, res: Infer })], bindings: [], parenthesized: No, span_ext: src/main.rs:32:43: 32:43 (#0) }), infer_args: true }] }), [ExprField { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).55), ident: tcx#0, expr: Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).56), kind: Path(Resolved(None, Path { span: src/main.rs:32:46: 32:49 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).35)), segments: [PathSegment { ident: tcx#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).57), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).35)), args: None, infer_args: true }] })), span: src/main.rs:32:46: 32:49 (#0) }, span: src/main.rs:32:46: 32:49 (#0), is_shorthand: true }], None), span: src/main.rs:32:31: 32:51 (#0) }), els: None, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).58), span: src/main.rs:32:13: 32:52 (#0), source: Normal }), span: src/main.rs:32:13: 32:52 (#0) }, Stmt { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).77), kind: Semi(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).60), kind: Call(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).61), kind: Path(Resolved(None, Path { span: src/main.rs:35:13: 35:33 (#0), res: Def(Fn, DefId(120:855 ~ rustc_hir[6705]::intravisit::walk_mod)), segments: [PathSegment { ident: intravisit#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).62), res: Def(Mod, DefId(120:726 ~ rustc_hir[6705]::intravisit)), args: None, infer_args: true }, PathSegment { ident: walk_mod#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).63), res: Def(Fn, DefId(120:855 ~ rustc_hir[6705]::intravisit::walk_mod)), args: None, infer_args: true }] })), span: src/main.rs:35:13: 35:33 (#0) }, [Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).64), kind: AddrOf(Ref, Mut, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).65), kind: Path(Resolved(None, Path { span: src/main.rs:36:22: 36:29 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).59)), segments: [PathSegment { ident: visitor#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).66), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).59)), args: None, infer_args: true }] })), span: src/main.rs:36:22: 36:29 (#0) }), span: src/main.rs:36:17: 36:29 (#0) }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).67), kind: Path(Resolved(None, Path { span: src/main.rs:37:17: 37:22 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).50)), segments: [PathSegment { ident: krate#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).68), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).50)), args: None, infer_args: true }] })), span: src/main.rs:37:17: 37:22 (#0) }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).69), kind: MethodCall(PathSegment { ident: local_def_id_to_hir_id#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).70), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).71), kind: Path(Resolved(None, Path { span: src/main.rs:38:17: 38:20 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).43)), segments: [PathSegment { ident: hir#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).72), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).43)), args: None, infer_args: true }] })), span: src/main.rs:38:17: 38:20 (#0) }, [Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).73), kind: Path(Resolved(None, Path { span: src/main.rs:38:44: 38:75 (#0), res: Def(Const, DefId(33:573 ~ rustc_span[03d2]::def_id::CRATE_DEF_ID)), segments: [PathSegment { ident: rustc_hir#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).74), res: Def(Mod, DefId(120:0 ~ rustc_hir[6705])), args: None, infer_args: true }, PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).75), res: Def(Mod, DefId(33:492 ~ rustc_span[03d2]::def_id)), args: None, infer_args: true }, PathSegment { ident: CRATE_DEF_ID#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).76), res: Def(Const, DefId(33:573 ~ rustc_span[03d2]::def_id::CRATE_DEF_ID)), args: None, infer_args: true }] })), span: src/main.rs:38:44: 38:75 (#0) }], src/main.rs:38:21: 38:76 (#0)), span: src/main.rs:38:17: 38:76 (#0) }]), span: src/main.rs:35:13: 39:14 (#0) }), span: src/main.rs:35:13: 39:15 (#0) }], expr: None, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).78), rules: DefaultBlock, span: src/main.rs:26:61: 40:10 (#0), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: MethodCall(PathSegment { ident: hir#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).39), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).40), kind: Path(Resolved(None, Path { span: src/main.rs:28:23: 28:26 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).35)), segments: [PathSegment { ident: tcx#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).41), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).35)), args: None, infer_args: true }] })), span: src/main.rs:28:23: 28:26 (#0) }, [], src/main.rs:28:27: 28:32 (#0)))
  Method call: hir with 0 arguments
  Receiver type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
  Method: rustc_middle::hir::<impl rustc_middle::ty::TyCtxt<'tcx>>::hir
  Method type: FnDef(DefId(155:352 ~ rustc_middle[ca3f]::hir::{impl#2}::hir), [ReEarlyBound(DefId(155:351 ~ rustc_middle[ca3f]::hir::{impl#2}::'tcx), 0, 'tcx)])
  Expression type: Adt(rustc_middle::hir::map::Map, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:28:23: 28:26 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).35)), segments: [PathSegment { ident: tcx#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).41), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).35)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
Expression (kind: MethodCall(PathSegment { ident: root_module#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).46), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).47), kind: Path(Resolved(None, Path { span: src/main.rs:29:25: 29:28 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).43)), segments: [PathSegment { ident: hir#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).48), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).43)), args: None, infer_args: true }] })), span: src/main.rs:29:25: 29:28 (#0) }, [], src/main.rs:29:29: 29:42 (#0)))
  Method call: root_module with 0 arguments
  Receiver type: Adt(rustc_middle::hir::map::Map, [ReErased])
  Method: rustc_middle::hir::map::Map::<'hir>::root_module
  Method type: FnDef(DefId(155:112 ~ rustc_middle[ca3f]::hir::map::{impl#2}::root_module), [ReEarlyBound(DefId(155:110 ~ rustc_middle[ca3f]::hir::map::{impl#2}::'hir), 0, 'hir)])
  Expression type: &ReErased Adt(rustc_hir::Mod, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:29:25: 29:28 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).43)), segments: [PathSegment { ident: hir#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).48), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).43)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_middle::hir::map::Map, [ReErased])
Expression (kind: Struct(Resolved(None, Path { span: src/main.rs:32:31: 32:43 (#0), res: Def(Struct, DefId(0:24 ~ main[cc0f]::PrintVisitor)), segments: [PathSegment { ident: PrintVisitor#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).54), res: Def(Struct, DefId(0:24 ~ main[cc0f]::PrintVisitor)), args: Some(GenericArgs { args: [Lifetime(Lifetime { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).53), ident: #0, res: Infer })], bindings: [], parenthesized: No, span_ext: src/main.rs:32:43: 32:43 (#0) }), infer_args: true }] }), [ExprField { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).55), ident: tcx#0, expr: Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).56), kind: Path(Resolved(None, Path { span: src/main.rs:32:46: 32:49 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).35)), segments: [PathSegment { ident: tcx#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).57), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).35)), args: None, infer_args: true }] })), span: src/main.rs:32:46: 32:49 (#0) }, span: src/main.rs:32:46: 32:49 (#0), is_shorthand: true }], None))
  Expression type: Adt(PrintVisitor, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:32:46: 32:49 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).35)), segments: [PathSegment { ident: tcx#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).57), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).35)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).61), kind: Path(Resolved(None, Path { span: src/main.rs:35:13: 35:33 (#0), res: Def(Fn, DefId(120:855 ~ rustc_hir[6705]::intravisit::walk_mod)), segments: [PathSegment { ident: intravisit#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).62), res: Def(Mod, DefId(120:726 ~ rustc_hir[6705]::intravisit)), args: None, infer_args: true }, PathSegment { ident: walk_mod#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).63), res: Def(Fn, DefId(120:855 ~ rustc_hir[6705]::intravisit::walk_mod)), args: None, infer_args: true }] })), span: src/main.rs:35:13: 35:33 (#0) }, [Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).64), kind: AddrOf(Ref, Mut, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).65), kind: Path(Resolved(None, Path { span: src/main.rs:36:22: 36:29 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).59)), segments: [PathSegment { ident: visitor#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).66), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).59)), args: None, infer_args: true }] })), span: src/main.rs:36:22: 36:29 (#0) }), span: src/main.rs:36:17: 36:29 (#0) }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).67), kind: Path(Resolved(None, Path { span: src/main.rs:37:17: 37:22 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).50)), segments: [PathSegment { ident: krate#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).68), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).50)), args: None, infer_args: true }] })), span: src/main.rs:37:17: 37:22 (#0) }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).69), kind: MethodCall(PathSegment { ident: local_def_id_to_hir_id#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).70), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).71), kind: Path(Resolved(None, Path { span: src/main.rs:38:17: 38:20 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).43)), segments: [PathSegment { ident: hir#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).72), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).43)), args: None, infer_args: true }] })), span: src/main.rs:38:17: 38:20 (#0) }, [Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).73), kind: Path(Resolved(None, Path { span: src/main.rs:38:44: 38:75 (#0), res: Def(Const, DefId(33:573 ~ rustc_span[03d2]::def_id::CRATE_DEF_ID)), segments: [PathSegment { ident: rustc_hir#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).74), res: Def(Mod, DefId(120:0 ~ rustc_hir[6705])), args: None, infer_args: true }, PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).75), res: Def(Mod, DefId(33:492 ~ rustc_span[03d2]::def_id)), args: None, infer_args: true }, PathSegment { ident: CRATE_DEF_ID#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).76), res: Def(Const, DefId(33:573 ~ rustc_span[03d2]::def_id::CRATE_DEF_ID)), args: None, infer_args: true }] })), span: src/main.rs:38:44: 38:75 (#0) }], src/main.rs:38:21: 38:76 (#0)), span: src/main.rs:38:17: 38:76 (#0) }]))
  Function call with 3 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:35:13: 35:33 (#0), res: Def(Fn, DefId(120:855 ~ rustc_hir[6705]::intravisit::walk_mod)), segments: [PathSegment { ident: intravisit#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).62), res: Def(Mod, DefId(120:726 ~ rustc_hir[6705]::intravisit)), args: None, infer_args: true }, PathSegment { ident: walk_mod#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).63), res: Def(Fn, DefId(120:855 ~ rustc_hir[6705]::intravisit::walk_mod)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(120:855 ~ rustc_hir[6705]::intravisit::walk_mod), [ReErased, Adt(PrintVisitor, [ReErased])])
Expression (kind: AddrOf(Ref, Mut, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).65), kind: Path(Resolved(None, Path { span: src/main.rs:36:22: 36:29 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).59)), segments: [PathSegment { ident: visitor#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).66), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).59)), args: None, infer_args: true }] })), span: src/main.rs:36:22: 36:29 (#0) }))
  Expression type: &ReErased mut Adt(PrintVisitor, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:36:22: 36:29 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).59)), segments: [PathSegment { ident: visitor#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).66), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).59)), args: None, infer_args: true }] })))
  Expression type: Adt(PrintVisitor, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:37:17: 37:22 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).50)), segments: [PathSegment { ident: krate#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).68), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).50)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_hir::Mod, [ReErased])
Expression (kind: MethodCall(PathSegment { ident: local_def_id_to_hir_id#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).70), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).71), kind: Path(Resolved(None, Path { span: src/main.rs:38:17: 38:20 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).43)), segments: [PathSegment { ident: hir#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).72), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).43)), args: None, infer_args: true }] })), span: src/main.rs:38:17: 38:20 (#0) }, [Expr { hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).73), kind: Path(Resolved(None, Path { span: src/main.rs:38:44: 38:75 (#0), res: Def(Const, DefId(33:573 ~ rustc_span[03d2]::def_id::CRATE_DEF_ID)), segments: [PathSegment { ident: rustc_hir#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).74), res: Def(Mod, DefId(120:0 ~ rustc_hir[6705])), args: None, infer_args: true }, PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).75), res: Def(Mod, DefId(33:492 ~ rustc_span[03d2]::def_id)), args: None, infer_args: true }, PathSegment { ident: CRATE_DEF_ID#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).76), res: Def(Const, DefId(33:573 ~ rustc_span[03d2]::def_id::CRATE_DEF_ID)), args: None, infer_args: true }] })), span: src/main.rs:38:44: 38:75 (#0) }], src/main.rs:38:21: 38:76 (#0)))
  Method call: local_def_id_to_hir_id with 1 arguments
  Receiver type: Adt(rustc_middle::hir::map::Map, [ReErased])
  Method: rustc_middle::hir::map::Map::<'hir>::local_def_id_to_hir_id
  Method type: FnDef(DefId(155:119 ~ rustc_middle[ca3f]::hir::map::{impl#2}::local_def_id_to_hir_id), [ReEarlyBound(DefId(155:110 ~ rustc_middle[ca3f]::hir::map::{impl#2}::'hir), 0, 'hir), impl Into<LocalDefId>/#1])
  Expression type: Adt(rustc_hir::HirId, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:38:17: 38:20 (#0), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).43)), segments: [PathSegment { ident: hir#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).72), res: Local(HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).43)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_middle::hir::map::Map, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:38:44: 38:75 (#0), res: Def(Const, DefId(33:573 ~ rustc_span[03d2]::def_id::CRATE_DEF_ID)), segments: [PathSegment { ident: rustc_hir#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).74), res: Def(Mod, DefId(120:0 ~ rustc_hir[6705])), args: None, infer_args: true }, PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).75), res: Def(Mod, DefId(33:492 ~ rustc_span[03d2]::def_id)), args: None, infer_args: true }, PathSegment { ident: CRATE_DEF_ID#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).76), res: Def(Const, DefId(33:573 ~ rustc_span[03d2]::def_id::CRATE_DEF_ID)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::def_id::LocalDefId, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:42:9: 42:30 (#0), res: Def(Ctor(Variant, Const), DefId(21:658 ~ rustc_driver_impl[66c9]::Compilation::Continue::{constructor#0})), segments: [PathSegment { ident: Compilation#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).82), res: Def(Enum, DefId(21:654 ~ rustc_driver_impl[66c9]::Compilation)), args: None, infer_args: true }, PathSegment { ident: Continue#0, hir_id: HirId(DefId(0:21 ~ main[cc0f]::{impl#0}::after_analysis).83), res: Def(Ctor(Variant, Const), DefId(21:658 ~ rustc_driver_impl[66c9]::Compilation::Continue::{constructor#0})), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_driver::Compilation, [])
Item: PrintVisitor (kind: "struct")
  DefId: DefId(0:24 ~ main[cc0f]::PrintVisitor)
  Path: PrintVisitor
  Location: Real(LocalPath("src/main.rs")):46:0-48:1

Item:  (kind: "implementation")
  DefId: DefId(0:27 ~ main[cc0f]::{impl#1})
  Path: <PrintVisitor<'tcx> as rustc_hir::intravisit::Visitor<'tcx>>
  Location: Real(LocalPath("src/main.rs")):50:0-178:1

Expression (kind: Block(Block { stmts: [], expr: Some(Expr { hir_id: HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).3), kind: MethodCall(PathSegment { ident: hir#0, hir_id: HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).4), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).5), kind: Field(Expr { hir_id: HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).6), kind: Path(Resolved(None, Path { span: src/main.rs:54:9: 54:13 (#0), res: Local(HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).7), res: Local(HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).2)), args: None, infer_args: true }] })), span: src/main.rs:54:9: 54:13 (#0) }, tcx#0), span: src/main.rs:54:9: 54:17 (#0) }, [], src/main.rs:54:18: 54:23 (#0)), span: src/main.rs:54:9: 54:23 (#0) }), hir_id: HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).8), rules: DefaultBlock, span: src/main.rs:53:73: 55:6 (#0), targeted_by_break: false }, None))
  Expression type: Adt(rustc_middle::hir::map::Map, [ReErased])
Expression (kind: MethodCall(PathSegment { ident: hir#0, hir_id: HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).4), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).5), kind: Field(Expr { hir_id: HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).6), kind: Path(Resolved(None, Path { span: src/main.rs:54:9: 54:13 (#0), res: Local(HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).7), res: Local(HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).2)), args: None, infer_args: true }] })), span: src/main.rs:54:9: 54:13 (#0) }, tcx#0), span: src/main.rs:54:9: 54:17 (#0) }, [], src/main.rs:54:18: 54:23 (#0)))
  Method call: hir with 0 arguments
  Receiver type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
  Method: rustc_middle::hir::<impl rustc_middle::ty::TyCtxt<'tcx>>::hir
  Method type: FnDef(DefId(155:352 ~ rustc_middle[ca3f]::hir::{impl#2}::hir), [ReEarlyBound(DefId(155:351 ~ rustc_middle[ca3f]::hir::{impl#2}::'tcx), 0, 'tcx)])
  Expression type: Adt(rustc_middle::hir::map::Map, [ReErased])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).6), kind: Path(Resolved(None, Path { span: src/main.rs:54:9: 54:13 (#0), res: Local(HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).7), res: Local(HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).2)), args: None, infer_args: true }] })), span: src/main.rs:54:9: 54:13 (#0) }, tcx#0))
  Expression type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:54:9: 54:13 (#0), res: Local(HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).7), res: Local(HirId(DefId(0:30 ~ main[cc0f]::{impl#1}::nested_visit_map).2)), args: None, infer_args: true }] })))
  Expression type: &ReErased mut Adt(PrintVisitor, [ReErased])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).42), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).5), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).40), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).6), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).7), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#38), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#38, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).8), res: Err, args: None, infer_args: true }, PathSegment { ident: io#38, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).9), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#38, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).10), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#38) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).11), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).39), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).37), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }, PathSegment { ident: new_v1#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).38), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).16), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).15), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).12), kind: Lit(Spanned { node: Str("Item: ", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).13), kind: Lit(Spanned { node: Str(" (kind: ", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).14), kind: Lit(Spanned { node: Str(")\n", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }]), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).36), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).35), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).24), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).23), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).21), kind: Path(LangItem(FormatArgument, src/main.rs:59:25: 59:27 (#39), None)), span: src/main.rs:59:25: 59:27 (#39) }, PathSegment { ident: new_display#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).22), res: Err, args: None, infer_args: true })), span: src/main.rs:59:25: 59:27 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).20), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).17), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).18), kind: Path(Resolved(None, Path { span: src/main.rs:59:43: 59:47 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).19), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:43: 59:47 (#0) }, ident#0), span: src/main.rs:59:43: 59:53 (#0) }), span: src/main.rs:59:43: 59:53 (#39) }]), span: src/main.rs:59:25: 59:27 (#39) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).34), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).33), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).31), kind: Path(LangItem(FormatArgument, src/main.rs:59:35: 59:39 (#39), None)), span: src/main.rs:59:35: 59:39 (#39) }, PathSegment { ident: new_debug#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).32), res: Err, args: None, infer_args: true })), span: src/main.rs:59:35: 59:39 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).30), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).25), kind: MethodCall(PathSegment { ident: descr#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).27), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).28), kind: Path(Resolved(None, Path { span: src/main.rs:59:55: 59:59 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).29), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:55: 59:59 (#0) }, kind#0), span: src/main.rs:59:55: 59:64 (#0) }, [], src/main.rs:59:65: 59:72 (#0)), span: src/main.rs:59:55: 59:72 (#0) }), span: src/main.rs:59:55: 59:72 (#39) }]), span: src/main.rs:59:35: 59:39 (#39) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#38) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#38) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).41), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#38), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#38) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#38) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).43), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51), def_id#0, None), span: src/main.rs:61:13: 61:19 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).44), kind: MethodCall(PathSegment { ident: to_def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).45), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).46), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).47), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).48), kind: Path(Resolved(None, Path { span: src/main.rs:61:22: 61:26 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).49), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:61:22: 61:26 (#0) }, owner_id#0), span: src/main.rs:61:22: 61:35 (#0) }, def_id#0), span: src/main.rs:61:22: 61:42 (#0) }, [], src/main.rs:61:43: 61:54 (#0)), span: src/main.rs:61:22: 61:54 (#0) }), els: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).50), span: src/main.rs:61:9: 61:55 (#0), source: Normal }), span: src/main.rs:61:9: 61:55 (#0) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).77), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).52), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).75), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).53), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).54), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#40), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#40, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).55), res: Err, args: None, infer_args: true }, PathSegment { ident: io#40, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).56), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#40, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).57), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#40) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).58), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).74), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).72), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }, PathSegment { ident: new_v1#41, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).73), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).62), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).61), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).59), kind: Lit(Spanned { node: Str("  DefId: ", Cooked), span: src/main.rs:62:18: 62:33 (#0) }), span: src/main.rs:62:18: 62:33 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).60), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:62:18: 62:33 (#0) }), span: src/main.rs:62:18: 62:33 (#0) }]), span: src/main.rs:62:18: 62:33 (#0) }), span: src/main.rs:62:18: 62:33 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).71), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).70), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).69), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).68), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).66), kind: Path(LangItem(FormatArgument, src/main.rs:62:28: 62:32 (#41), None)), span: src/main.rs:62:28: 62:32 (#41) }, PathSegment { ident: new_debug#41, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).67), res: Err, args: None, infer_args: true })), span: src/main.rs:62:28: 62:32 (#41) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).65), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).63), kind: Path(Resolved(None, Path { span: src/main.rs:62:35: 62:41 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).64), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:62:35: 62:41 (#0) }), span: src/main.rs:62:35: 62:41 (#41) }]), span: src/main.rs:62:28: 62:32 (#41) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#40) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#40) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).76), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#40), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#40) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#40) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).108), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).78), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).106), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).79), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).80), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#42), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#42, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).81), res: Err, args: None, infer_args: true }, PathSegment { ident: io#42, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).82), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#42, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).83), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#42) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).84), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).105), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).103), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }, PathSegment { ident: new_v1#43, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).104), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).88), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).87), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).85), kind: Lit(Spanned { node: Str("  Path: ", Cooked), span: src/main.rs:63:18: 63:30 (#0) }), span: src/main.rs:63:18: 63:30 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).86), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:63:18: 63:30 (#0) }), span: src/main.rs:63:18: 63:30 (#0) }]), span: src/main.rs:63:18: 63:30 (#0) }), span: src/main.rs:63:18: 63:30 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).102), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).101), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).100), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).99), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).97), kind: Path(LangItem(FormatArgument, src/main.rs:63:27: 63:29 (#43), None)), span: src/main.rs:63:27: 63:29 (#43) }, PathSegment { ident: new_display#43, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).98), res: Err, args: None, infer_args: true })), span: src/main.rs:63:27: 63:29 (#43) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).96), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).89), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).90), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).91), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).92), kind: Path(Resolved(None, Path { span: src/main.rs:63:32: 63:36 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).93), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:63:32: 63:36 (#0) }, tcx#0), span: src/main.rs:63:32: 63:40 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).94), kind: Path(Resolved(None, Path { span: src/main.rs:63:54: 63:60 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).95), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:63:54: 63:60 (#0) }], src/main.rs:63:41: 63:61 (#0)), span: src/main.rs:63:32: 63:61 (#0) }), span: src/main.rs:63:32: 63:61 (#43) }]), span: src/main.rs:63:27: 63:29 (#43) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#42) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#42) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).107), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#42), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#42) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#42) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).256), kind: Expr(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).109), kind: If(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).110), kind: Let(Let { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).111), span: src/main.rs:66:12: 66:44 (#0), pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).114), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:66:16: 66:28 (#0), res: Def(Ctor(Variant, Fn), DefId(120:4143 ~ rustc_hir[6705]::hir::ItemKind::Fn::{constructor#0})), segments: [PathSegment { ident: ItemKind#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).112), res: Def(Enum, DefId(120:4123 ~ rustc_hir[6705]::hir::ItemKind)), args: None, infer_args: true }, PathSegment { ident: Fn#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).113), res: Def(Ctor(Variant, Fn), DefId(120:4143 ~ rustc_hir[6705]::hir::ItemKind::Fn::{constructor#0})), args: None, infer_args: true }] }), [], Some(0)), span: src/main.rs:66:16: 66:32 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).115), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).116), kind: Path(Resolved(None, Path { span: src/main.rs:66:35: 66:39 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).117), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:66:35: 66:39 (#0) }, kind#0), span: src/main.rs:66:35: 66:44 (#0) } }), span: src/main.rs:66:12: 66:44 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).255), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).118), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129), fn_type#0, None), span: src/main.rs:67:17: 67:24 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).119), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).120), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).121), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).122), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).123), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).124), kind: Path(Resolved(None, Path { span: src/main.rs:67:27: 67:31 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).125), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:67:27: 67:31 (#0) }, tcx#0), span: src/main.rs:67:27: 67:35 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).126), kind: Path(Resolved(None, Path { span: src/main.rs:67:44: 67:50 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).127), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:67:44: 67:50 (#0) }], src/main.rs:67:36: 67:51 (#0)), span: src/main.rs:67:27: 67:51 (#0) }, [], src/main.rs:67:52: 67:74 (#0)), span: src/main.rs:67:27: 67:74 (#0) }), els: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).128), span: src/main.rs:67:13: 67:75 (#0), source: Normal }), span: src/main.rs:67:13: 67:75 (#0) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).155), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).130), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).153), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).131), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).132), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#44), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).133), res: Err, args: None, infer_args: true }, PathSegment { ident: io#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).134), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).135), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#44) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).136), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).152), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).150), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }, PathSegment { ident: new_v1#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).151), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).140), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).139), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).137), kind: Lit(Spanned { node: Str("  Type: ", Cooked), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).138), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }]), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).149), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).148), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).147), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).144), kind: Path(LangItem(FormatArgument, src/main.rs:68:31: 68:35 (#45), None)), span: src/main.rs:68:31: 68:35 (#45) }, PathSegment { ident: new_debug#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).145), res: Err, args: None, infer_args: true })), span: src/main.rs:68:31: 68:35 (#45) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).141), kind: Path(Resolved(None, Path { span: src/main.rs:68:38: 68:45 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), segments: [PathSegment { ident: fn_type#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).142), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), args: None, infer_args: true }] })), span: src/main.rs:68:38: 68:45 (#0) }), span: src/main.rs:68:38: 68:45 (#45) }]), span: src/main.rs:68:31: 68:35 (#45) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#44) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#44) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).154), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#44), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#44) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#44) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).171), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).156), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).169), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).157), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).158), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#46), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).159), res: Err, args: None, infer_args: true }, PathSegment { ident: io#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).160), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).161), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#46) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).162), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).168), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).166), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }, PathSegment { ident: new_const#47, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).167), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).165), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).164), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).163), kind: Lit(Spanned { node: Str("  Type-checked information:\n", Cooked), span: src/main.rs:71:22: 71:51 (#0) }), span: src/main.rs:71:22: 71:51 (#0) }]), span: src/main.rs:71:22: 71:51 (#0) }), span: src/main.rs:71:22: 71:51 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#46) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#46) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).170), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#46), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#46) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#46) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).172), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).183), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).183), typeck#0, None), span: src/main.rs:72:17: 72:23 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).173), kind: MethodCall(PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).174), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).175), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).176), kind: Path(Resolved(None, Path { span: src/main.rs:72:26: 72:30 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).177), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:72:26: 72:30 (#0) }, tcx#0), span: src/main.rs:72:26: 72:34 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).178), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).179), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).180), kind: Path(Resolved(None, Path { span: src/main.rs:72:42: 72:46 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).181), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:72:42: 72:46 (#0) }, owner_id#0), span: src/main.rs:72:42: 72:55 (#0) }, def_id#0), span: src/main.rs:72:42: 72:62 (#0) }], src/main.rs:72:35: 72:63 (#0)), span: src/main.rs:72:26: 72:63 (#0) }), els: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).182), span: src/main.rs:72:13: 72:64 (#0), source: Normal }), span: src/main.rs:72:13: 72:64 (#0) }], expr: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).184), kind: Match(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).185), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).186), kind: Path(Resolved(None, Path { span: src/main.rs:75:19: 75:43 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).187), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).188), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).189), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })), span: src/main.rs:75:19: 75:43 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).190), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).191), kind: Path(Resolved(None, Path { span: src/main.rs:75:44: 75:72 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).192), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).193), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).194), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:75:44: 75:72 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).195), kind: Closure(Closure { def_id: DefId(0:32 ~ main[cc0f]::{impl#1}::visit_item::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:75:76: 75:76 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).196) }, fn_decl_span: src/main.rs:75:73: 75:75 (#0), fn_arg_span: Some(src/main.rs:75:73: 75:75 (#0)), movability: None }), span: src/main.rs:75:73: 77:14 (#0) }]), span: src/main.rs:75:44: 77:15 (#0) }]), span: src/main.rs:75:19: 77:16 (#0) }, [Arm { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).209), span: src/main.rs:78:17: 78:64 (#0), pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).208), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:78:17: 78:19 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), segments: [PathSegment { ident: Ok#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).206), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207), ty#0, None), span: src/main.rs:78:20: 78:22 (#0), default_binding_modes: true }], None), span: src/main.rs:78:17: 78:23 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).210), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).233), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).211), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).212), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#48), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).213), res: Err, args: None, infer_args: true }, PathSegment { ident: io#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).214), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).215), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#48) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).216), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).232), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).230), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }, PathSegment { ident: new_v1#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).231), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).219), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).217), kind: Lit(Spanned { node: Str("    Return type: ", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).218), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }]), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).229), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).228), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).227), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).226), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).224), kind: Path(LangItem(FormatArgument, src/main.rs:78:54: 78:58 (#49), None)), span: src/main.rs:78:54: 78:58 (#49) }, PathSegment { ident: new_debug#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).225), res: Err, args: None, infer_args: true })), span: src/main.rs:78:54: 78:58 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).223), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).221), kind: Path(Resolved(None, Path { span: src/main.rs:78:61: 78:63 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), segments: [PathSegment { ident: ty#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).222), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), args: None, infer_args: true }] })), span: src/main.rs:78:61: 78:63 (#0) }), span: src/main.rs:78:61: 78:63 (#49) }]), span: src/main.rs:78:54: 78:58 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#48) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#48) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).234), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#48), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#48) } }, Arm { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).238), span: src/main.rs:79:17: 79:83 (#0), pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).237), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:79:17: 79:20 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), segments: [PathSegment { ident: Err#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).235), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).236), kind: Wild, span: src/main.rs:79:21: 79:22 (#0), default_binding_modes: true }], None), span: src/main.rs:79:17: 79:23 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).239), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).252), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).240), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).241), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#50), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).242), res: Err, args: None, infer_args: true }, PathSegment { ident: io#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).243), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).244), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#50) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).245), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).251), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).249), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }, PathSegment { ident: new_const#51, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).250), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).248), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).247), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).246), kind: Lit(Spanned { node: Str("    Return type: <unavailable for this item>\n", Cooked), span: src/main.rs:79:36: 79:82 (#0) }), span: src/main.rs:79:36: 79:82 (#0) }]), span: src/main.rs:79:36: 79:82 (#0) }), span: src/main.rs:79:36: 79:82 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#50) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#50) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).253), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#50), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#50) } }], Normal), span: src/main.rs:75:13: 80:14 (#0) }), hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).254), rules: DefaultBlock, span: src/main.rs:66:45: 81:10 (#0), targeted_by_break: false }, None), span: src/main.rs:66:45: 81:10 (#0) }, None), span: src/main.rs:66:9: 81:10 (#0) }), span: src/main.rs:66:9: 81:10 (#0) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).257), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265), source_map#0, None), span: src/main.rs:84:13: 84:23 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).258), kind: MethodCall(PathSegment { ident: source_map#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).259), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).260), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).261), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).262), kind: Path(Resolved(None, Path { span: src/main.rs:84:26: 84:30 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).263), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:84:26: 84:30 (#0) }, tcx#0), span: src/main.rs:84:26: 84:34 (#0) }, sess#0), span: src/main.rs:84:26: 84:39 (#0) }, [], src/main.rs:84:40: 84:52 (#0)), span: src/main.rs:84:26: 84:52 (#0) }), els: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).264), span: src/main.rs:84:9: 84:53 (#0), source: Normal }), span: src/main.rs:84:9: 84:53 (#0) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).266), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271), span#0, None), span: src/main.rs:85:13: 85:17 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).267), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).268), kind: Path(Resolved(None, Path { span: src/main.rs:85:20: 85:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).269), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:85:20: 85:24 (#0) }, span#0), span: src/main.rs:85:20: 85:29 (#0) }), els: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).270), span: src/main.rs:85:9: 85:30 (#0), source: Normal }), span: src/main.rs:85:9: 85:30 (#0) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).371), kind: Expr(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).272), kind: If(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).278), kind: DropTemps(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).273), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).274), kind: MethodCall(PathSegment { ident: is_dummy#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).275), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).276), kind: Path(Resolved(None, Path { span: src/main.rs:86:13: 86:17 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).277), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })), span: src/main.rs:86:13: 86:17 (#0) }, [], src/main.rs:86:18: 86:28 (#0)), span: src/main.rs:86:13: 86:28 (#0) }), span: src/main.rs:86:12: 86:28 (#0) }), span: src/main.rs:86:12: 86:28 (#238) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).370), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).279), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289), loc#0, None), span: src/main.rs:87:17: 87:20 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).280), kind: MethodCall(PathSegment { ident: lookup_char_pos#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).281), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).282), kind: Path(Resolved(None, Path { span: src/main.rs:87:23: 87:33 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), segments: [PathSegment { ident: source_map#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).283), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), args: None, infer_args: true }] })), span: src/main.rs:87:23: 87:33 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).284), kind: MethodCall(PathSegment { ident: lo#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).285), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).286), kind: Path(Resolved(None, Path { span: src/main.rs:87:50: 87:54 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).287), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })), span: src/main.rs:87:50: 87:54 (#0) }, [], src/main.rs:87:55: 87:59 (#0)), span: src/main.rs:87:50: 87:59 (#0) }], src/main.rs:87:34: 87:60 (#0)), span: src/main.rs:87:23: 87:60 (#0) }), els: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).288), span: src/main.rs:87:13: 87:61 (#0), source: Normal }), span: src/main.rs:87:13: 87:61 (#0) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).290), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300), end_loc#0, None), span: src/main.rs:88:17: 88:24 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).291), kind: MethodCall(PathSegment { ident: lookup_char_pos#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).292), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).293), kind: Path(Resolved(None, Path { span: src/main.rs:88:27: 88:37 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), segments: [PathSegment { ident: source_map#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).294), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), args: None, infer_args: true }] })), span: src/main.rs:88:27: 88:37 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).295), kind: MethodCall(PathSegment { ident: hi#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).296), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).297), kind: Path(Resolved(None, Path { span: src/main.rs:88:54: 88:58 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).298), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })), span: src/main.rs:88:54: 88:58 (#0) }, [], src/main.rs:88:59: 88:63 (#0)), span: src/main.rs:88:54: 88:63 (#0) }], src/main.rs:88:38: 88:64 (#0)), span: src/main.rs:88:27: 88:64 (#0) }), els: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).299), span: src/main.rs:88:13: 88:65 (#0), source: Normal }), span: src/main.rs:88:13: 88:65 (#0) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).368), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).301), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).366), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).302), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).303), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#52), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).304), res: Err, args: None, infer_args: true }, PathSegment { ident: io#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).305), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).306), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#52) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).307), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).365), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).363), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }, PathSegment { ident: new_v1#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).364), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).315), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).314), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).308), kind: Lit(Spanned { node: Str("  Location: ", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).309), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).310), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).311), kind: Lit(Spanned { node: Str("-", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).312), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).313), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }]), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).362), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).361), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).324), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).321), kind: Path(LangItem(FormatArgument, src/main.rs:90:30: 90:34 (#53), None)), span: src/main.rs:90:30: 90:34 (#53) }, PathSegment { ident: new_debug#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).322), res: Err, args: None, infer_args: true })), span: src/main.rs:90:30: 90:34 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).316), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).317), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).318), kind: Path(Resolved(None, Path { span: src/main.rs:91:17: 91:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).319), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:91:17: 91:20 (#0) }, file#0), span: src/main.rs:91:17: 91:25 (#0) }, name#0), span: src/main.rs:91:17: 91:30 (#0) }), span: src/main.rs:91:17: 91:30 (#53) }]), span: src/main.rs:90:30: 90:34 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).332), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).331), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).329), kind: Path(LangItem(FormatArgument, src/main.rs:90:35: 90:37 (#53), None)), span: src/main.rs:90:35: 90:37 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).330), res: Err, args: None, infer_args: true })), span: src/main.rs:90:35: 90:37 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).328), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).325), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).326), kind: Path(Resolved(None, Path { span: src/main.rs:92:17: 92:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).327), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:92:17: 92:20 (#0) }, line#0), span: src/main.rs:92:17: 92:25 (#0) }), span: src/main.rs:92:17: 92:25 (#53) }]), span: src/main.rs:90:35: 90:37 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).342), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).341), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).339), kind: Path(LangItem(FormatArgument, src/main.rs:90:38: 90:40 (#53), None)), span: src/main.rs:90:38: 90:40 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).340), res: Err, args: None, infer_args: true })), span: src/main.rs:90:38: 90:40 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).338), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).333), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).334), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).335), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).336), kind: Path(Resolved(None, Path { span: src/main.rs:93:17: 93:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).337), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:93:17: 93:20 (#0) }, col#0), span: src/main.rs:93:17: 93:24 (#0) }, [], src/main.rs:93:25: 93:35 (#0)), span: src/main.rs:93:17: 93:35 (#0) }), span: src/main.rs:93:17: 93:35 (#53) }]), span: src/main.rs:90:38: 90:40 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).350), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).349), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).347), kind: Path(LangItem(FormatArgument, src/main.rs:90:41: 90:43 (#53), None)), span: src/main.rs:90:41: 90:43 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).348), res: Err, args: None, infer_args: true })), span: src/main.rs:90:41: 90:43 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).346), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).343), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).344), kind: Path(Resolved(None, Path { span: src/main.rs:94:17: 94:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).345), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:94:17: 94:24 (#0) }, line#0), span: src/main.rs:94:17: 94:29 (#0) }), span: src/main.rs:94:17: 94:29 (#53) }]), span: src/main.rs:90:41: 90:43 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).360), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).359), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).357), kind: Path(LangItem(FormatArgument, src/main.rs:90:44: 90:46 (#53), None)), span: src/main.rs:90:44: 90:46 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).358), res: Err, args: None, infer_args: true })), span: src/main.rs:90:44: 90:46 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).356), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).351), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).352), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).353), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).354), kind: Path(Resolved(None, Path { span: src/main.rs:95:17: 95:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).355), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:95:17: 95:24 (#0) }, col#0), span: src/main.rs:95:17: 95:28 (#0) }, [], src/main.rs:95:29: 95:39 (#0)), span: src/main.rs:95:17: 95:39 (#0) }), span: src/main.rs:95:17: 95:39 (#53) }]), span: src/main.rs:90:44: 90:46 (#53) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#52) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#52) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).367), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#52), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#52) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#52) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).369), rules: DefaultBlock, span: src/main.rs:86:29: 97:10 (#0), targeted_by_break: false }, None), span: src/main.rs:86:29: 97:10 (#0) }, None), span: src/main.rs:86:9: 97:10 (#0) }), span: src/main.rs:86:9: 97:10 (#0) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).387), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).372), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).385), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).373), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).374), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:9: 84:27 (#55), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#55, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).375), res: Err, args: None, infer_args: true }, PathSegment { ident: io#55, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).376), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#55, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).377), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:9: 84:27 (#55) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).378), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).384), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).382), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56) }, PathSegment { ident: new_const#56, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).383), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).381), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).380), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).379), kind: Lit(Spanned { node: Str("\n", Cooked), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:9: 84:59 (#55) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:9: 84:60 (#55) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).386), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:83:23: 85:6 (#55), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:83:23: 85:6 (#55) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:83:23: 85:6 (#55) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).396), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).388), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).389), kind: Path(Resolved(None, Path { span: src/main.rs:102:9: 102:30 (#0), res: Def(Fn, DefId(120:846 ~ rustc_hir[6705]::intravisit::walk_item)), segments: [PathSegment { ident: intravisit#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).390), res: Def(Mod, DefId(120:726 ~ rustc_hir[6705]::intravisit)), args: None, infer_args: true }, PathSegment { ident: walk_item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).391), res: Def(Fn, DefId(120:846 ~ rustc_hir[6705]::intravisit::walk_item)), args: None, infer_args: true }] })), span: src/main.rs:102:9: 102:30 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).392), kind: Path(Resolved(None, Path { span: src/main.rs:102:31: 102:35 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).393), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:102:31: 102:35 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).394), kind: Path(Resolved(None, Path { span: src/main.rs:102:37: 102:41 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).395), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:102:37: 102:41 (#0) }]), span: src/main.rs:102:9: 102:42 (#0) }), span: src/main.rs:102:9: 102:43 (#0) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).397), rules: DefaultBlock, span: src/main.rs:57:65: 103:6 (#0), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).40), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).6), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).7), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#38), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#38, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).8), res: Err, args: None, infer_args: true }, PathSegment { ident: io#38, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).9), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#38, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).10), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#38) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).11), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).39), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).37), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }, PathSegment { ident: new_v1#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).38), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).16), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).15), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).12), kind: Lit(Spanned { node: Str("Item: ", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).13), kind: Lit(Spanned { node: Str(" (kind: ", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).14), kind: Lit(Spanned { node: Str(")\n", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }]), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).36), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).35), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).24), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).23), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).21), kind: Path(LangItem(FormatArgument, src/main.rs:59:25: 59:27 (#39), None)), span: src/main.rs:59:25: 59:27 (#39) }, PathSegment { ident: new_display#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).22), res: Err, args: None, infer_args: true })), span: src/main.rs:59:25: 59:27 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).20), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).17), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).18), kind: Path(Resolved(None, Path { span: src/main.rs:59:43: 59:47 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).19), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:43: 59:47 (#0) }, ident#0), span: src/main.rs:59:43: 59:53 (#0) }), span: src/main.rs:59:43: 59:53 (#39) }]), span: src/main.rs:59:25: 59:27 (#39) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).34), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).33), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).31), kind: Path(LangItem(FormatArgument, src/main.rs:59:35: 59:39 (#39), None)), span: src/main.rs:59:35: 59:39 (#39) }, PathSegment { ident: new_debug#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).32), res: Err, args: None, infer_args: true })), span: src/main.rs:59:35: 59:39 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).30), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).25), kind: MethodCall(PathSegment { ident: descr#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).27), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).28), kind: Path(Resolved(None, Path { span: src/main.rs:59:55: 59:59 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).29), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:55: 59:59 (#0) }, kind#0), span: src/main.rs:59:55: 59:64 (#0) }, [], src/main.rs:59:65: 59:72 (#0)), span: src/main.rs:59:55: 59:72 (#0) }), span: src/main.rs:59:55: 59:72 (#39) }]), span: src/main.rs:59:35: 59:39 (#39) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#38) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#38) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).41), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#38), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).7), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#38), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#38, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).8), res: Err, args: None, infer_args: true }, PathSegment { ident: io#38, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).9), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#38, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).10), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#38) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).11), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).39), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).37), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }, PathSegment { ident: new_v1#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).38), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).16), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).15), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).12), kind: Lit(Spanned { node: Str("Item: ", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).13), kind: Lit(Spanned { node: Str(" (kind: ", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).14), kind: Lit(Spanned { node: Str(")\n", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }]), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).36), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).35), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).24), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).23), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).21), kind: Path(LangItem(FormatArgument, src/main.rs:59:25: 59:27 (#39), None)), span: src/main.rs:59:25: 59:27 (#39) }, PathSegment { ident: new_display#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).22), res: Err, args: None, infer_args: true })), span: src/main.rs:59:25: 59:27 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).20), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).17), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).18), kind: Path(Resolved(None, Path { span: src/main.rs:59:43: 59:47 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).19), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:43: 59:47 (#0) }, ident#0), span: src/main.rs:59:43: 59:53 (#0) }), span: src/main.rs:59:43: 59:53 (#39) }]), span: src/main.rs:59:25: 59:27 (#39) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).34), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).33), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).31), kind: Path(LangItem(FormatArgument, src/main.rs:59:35: 59:39 (#39), None)), span: src/main.rs:59:35: 59:39 (#39) }, PathSegment { ident: new_debug#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).32), res: Err, args: None, infer_args: true })), span: src/main.rs:59:35: 59:39 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).30), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).25), kind: MethodCall(PathSegment { ident: descr#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).27), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).28), kind: Path(Resolved(None, Path { span: src/main.rs:59:55: 59:59 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).29), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:55: 59:59 (#0) }, kind#0), span: src/main.rs:59:55: 59:64 (#0) }, [], src/main.rs:59:65: 59:72 (#0)), span: src/main.rs:59:55: 59:72 (#0) }), span: src/main.rs:59:55: 59:72 (#39) }]), span: src/main.rs:59:35: 59:39 (#39) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#38), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#38, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).8), res: Err, args: None, infer_args: true }, PathSegment { ident: io#38, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).9), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#38, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).10), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).39), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).37), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }, PathSegment { ident: new_v1#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).38), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).16), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).15), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).12), kind: Lit(Spanned { node: Str("Item: ", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).13), kind: Lit(Spanned { node: Str(" (kind: ", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).14), kind: Lit(Spanned { node: Str(")\n", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }]), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).36), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).35), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).24), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).23), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).21), kind: Path(LangItem(FormatArgument, src/main.rs:59:25: 59:27 (#39), None)), span: src/main.rs:59:25: 59:27 (#39) }, PathSegment { ident: new_display#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).22), res: Err, args: None, infer_args: true })), span: src/main.rs:59:25: 59:27 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).20), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).17), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).18), kind: Path(Resolved(None, Path { span: src/main.rs:59:43: 59:47 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).19), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:43: 59:47 (#0) }, ident#0), span: src/main.rs:59:43: 59:53 (#0) }), span: src/main.rs:59:43: 59:53 (#39) }]), span: src/main.rs:59:25: 59:27 (#39) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).34), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).33), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).31), kind: Path(LangItem(FormatArgument, src/main.rs:59:35: 59:39 (#39), None)), span: src/main.rs:59:35: 59:39 (#39) }, PathSegment { ident: new_debug#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).32), res: Err, args: None, infer_args: true })), span: src/main.rs:59:35: 59:39 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).30), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).25), kind: MethodCall(PathSegment { ident: descr#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).27), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).28), kind: Path(Resolved(None, Path { span: src/main.rs:59:55: 59:59 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).29), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:55: 59:59 (#0) }, kind#0), span: src/main.rs:59:55: 59:64 (#0) }, [], src/main.rs:59:65: 59:72 (#0)), span: src/main.rs:59:55: 59:72 (#0) }), span: src/main.rs:59:55: 59:72 (#39) }]), span: src/main.rs:59:35: 59:39 (#39) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).37), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }, PathSegment { ident: new_v1#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).38), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).15), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).12), kind: Lit(Spanned { node: Str("Item: ", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).13), kind: Lit(Spanned { node: Str(" (kind: ", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).14), kind: Lit(Spanned { node: Str(")\n", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }]), span: src/main.rs:59:18: 59:41 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000003) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).12), kind: Lit(Spanned { node: Str("Item: ", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).13), kind: Lit(Spanned { node: Str(" (kind: ", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).14), kind: Lit(Spanned { node: Str(")\n", Cooked), span: src/main.rs:59:18: 59:41 (#0) }), span: src/main.rs:59:18: 59:41 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000003) }]
Expression (kind: Lit(Spanned { node: Str("Item: ", Cooked), span: src/main.rs:59:18: 59:41 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str(" (kind: ", Cooked), span: src/main.rs:59:18: 59:41 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str(")\n", Cooked), span: src/main.rs:59:18: 59:41 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).35), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).24), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).23), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).21), kind: Path(LangItem(FormatArgument, src/main.rs:59:25: 59:27 (#39), None)), span: src/main.rs:59:25: 59:27 (#39) }, PathSegment { ident: new_display#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).22), res: Err, args: None, infer_args: true })), span: src/main.rs:59:25: 59:27 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).20), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).17), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).18), kind: Path(Resolved(None, Path { span: src/main.rs:59:43: 59:47 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).19), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:43: 59:47 (#0) }, ident#0), span: src/main.rs:59:43: 59:53 (#0) }), span: src/main.rs:59:43: 59:53 (#39) }]), span: src/main.rs:59:25: 59:27 (#39) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).34), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).33), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).31), kind: Path(LangItem(FormatArgument, src/main.rs:59:35: 59:39 (#39), None)), span: src/main.rs:59:35: 59:39 (#39) }, PathSegment { ident: new_debug#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).32), res: Err, args: None, infer_args: true })), span: src/main.rs:59:35: 59:39 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).30), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).25), kind: MethodCall(PathSegment { ident: descr#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).27), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).28), kind: Path(Resolved(None, Path { span: src/main.rs:59:55: 59:59 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).29), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:55: 59:59 (#0) }, kind#0), span: src/main.rs:59:55: 59:64 (#0) }, [], src/main.rs:59:65: 59:72 (#0)), span: src/main.rs:59:55: 59:72 (#0) }), span: src/main.rs:59:55: 59:72 (#39) }]), span: src/main.rs:59:35: 59:39 (#39) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#39) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).24), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).23), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).21), kind: Path(LangItem(FormatArgument, src/main.rs:59:25: 59:27 (#39), None)), span: src/main.rs:59:25: 59:27 (#39) }, PathSegment { ident: new_display#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).22), res: Err, args: None, infer_args: true })), span: src/main.rs:59:25: 59:27 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).20), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).17), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).18), kind: Path(Resolved(None, Path { span: src/main.rs:59:43: 59:47 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).19), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:43: 59:47 (#0) }, ident#0), span: src/main.rs:59:43: 59:53 (#0) }), span: src/main.rs:59:43: 59:53 (#39) }]), span: src/main.rs:59:25: 59:27 (#39) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).34), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).33), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).31), kind: Path(LangItem(FormatArgument, src/main.rs:59:35: 59:39 (#39), None)), span: src/main.rs:59:35: 59:39 (#39) }, PathSegment { ident: new_debug#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).32), res: Err, args: None, infer_args: true })), span: src/main.rs:59:35: 59:39 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).30), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).25), kind: MethodCall(PathSegment { ident: descr#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).27), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).28), kind: Path(Resolved(None, Path { span: src/main.rs:59:55: 59:59 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).29), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:55: 59:59 (#0) }, kind#0), span: src/main.rs:59:55: 59:64 (#0) }, [], src/main.rs:59:65: 59:72 (#0)), span: src/main.rs:59:55: 59:72 (#0) }), span: src/main.rs:59:55: 59:72 (#39) }]), span: src/main.rs:59:35: 59:39 (#39) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).23), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).21), kind: Path(LangItem(FormatArgument, src/main.rs:59:25: 59:27 (#39), None)), span: src/main.rs:59:25: 59:27 (#39) }, PathSegment { ident: new_display#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).22), res: Err, args: None, infer_args: true })), span: src/main.rs:59:25: 59:27 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).20), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).17), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).18), kind: Path(Resolved(None, Path { span: src/main.rs:59:43: 59:47 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).19), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:43: 59:47 (#0) }, ident#0), span: src/main.rs:59:43: 59:53 (#0) }), span: src/main.rs:59:43: 59:53 (#39) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_display
  Function type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).21), kind: Path(LangItem(FormatArgument, src/main.rs:59:25: 59:27 (#39), None)), span: src/main.rs:59:25: 59:27 (#39) }, PathSegment { ident: new_display#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).22), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReErased, Adt(rustc_span::symbol::Ident, [])])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).17), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).18), kind: Path(Resolved(None, Path { span: src/main.rs:59:43: 59:47 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).19), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:43: 59:47 (#0) }, ident#0), span: src/main.rs:59:43: 59:53 (#0) }))
  Expression type: &ReErased Adt(rustc_span::symbol::Ident, [])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).18), kind: Path(Resolved(None, Path { span: src/main.rs:59:43: 59:47 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).19), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:43: 59:47 (#0) }, ident#0))
  Expression type: Adt(rustc_span::symbol::Ident, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:59:43: 59:47 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).19), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_hir::Item, [ReErased])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).33), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).31), kind: Path(LangItem(FormatArgument, src/main.rs:59:35: 59:39 (#39), None)), span: src/main.rs:59:35: 59:39 (#39) }, PathSegment { ident: new_debug#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).32), res: Err, args: None, infer_args: true })), span: src/main.rs:59:35: 59:39 (#39) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).30), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).25), kind: MethodCall(PathSegment { ident: descr#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).27), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).28), kind: Path(Resolved(None, Path { span: src/main.rs:59:55: 59:59 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).29), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:55: 59:59 (#0) }, kind#0), span: src/main.rs:59:55: 59:64 (#0) }, [], src/main.rs:59:65: 59:72 (#0)), span: src/main.rs:59:55: 59:72 (#0) }), span: src/main.rs:59:55: 59:72 (#39) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_debug
  Function type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).31), kind: Path(LangItem(FormatArgument, src/main.rs:59:35: 59:39 (#39), None)), span: src/main.rs:59:35: 59:39 (#39) }, PathSegment { ident: new_debug#39, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).32), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReErased, &ReErased str])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).25), kind: MethodCall(PathSegment { ident: descr#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).27), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).28), kind: Path(Resolved(None, Path { span: src/main.rs:59:55: 59:59 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).29), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:55: 59:59 (#0) }, kind#0), span: src/main.rs:59:55: 59:64 (#0) }, [], src/main.rs:59:65: 59:72 (#0)), span: src/main.rs:59:55: 59:72 (#0) }))
  Expression type: &ReErased &ReErased str
Expression (kind: MethodCall(PathSegment { ident: descr#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).27), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).28), kind: Path(Resolved(None, Path { span: src/main.rs:59:55: 59:59 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).29), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:55: 59:59 (#0) }, kind#0), span: src/main.rs:59:55: 59:64 (#0) }, [], src/main.rs:59:65: 59:72 (#0)))
  Method call: descr with 0 arguments
  Receiver type: Adt(rustc_hir::ItemKind, [ReErased])
  Method: rustc_hir::ItemKind::<'_>::descr
  Method type: FnDef(DefId(120:590 ~ rustc_hir[6705]::hir::{impl#69}::descr), [ReEarlyBound(DefId(120:5542 ~ rustc_hir[6705]::hir::{impl#69}::'_), 0, '_)])
  Expression type: &ReErased str
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).28), kind: Path(Resolved(None, Path { span: src/main.rs:59:55: 59:59 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).29), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:59:55: 59:59 (#0) }, kind#0))
  Expression type: Adt(rustc_hir::ItemKind, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:59:55: 59:59 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).29), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_hir::Item, [ReErased])
Expression (kind: MethodCall(PathSegment { ident: to_def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).45), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).46), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).47), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).48), kind: Path(Resolved(None, Path { span: src/main.rs:61:22: 61:26 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).49), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:61:22: 61:26 (#0) }, owner_id#0), span: src/main.rs:61:22: 61:35 (#0) }, def_id#0), span: src/main.rs:61:22: 61:42 (#0) }, [], src/main.rs:61:43: 61:54 (#0)))
  Method call: to_def_id with 0 arguments
  Receiver type: Adt(rustc_span::def_id::LocalDefId, [])
  Method: rustc_span::def_id::LocalDefId::to_def_id
  Method type: FnDef(DefId(33:578 ~ rustc_span[03d2]::def_id::{impl#19}::to_def_id), [])
  Expression type: Adt(rustc_span::def_id::DefId, [])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).47), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).48), kind: Path(Resolved(None, Path { span: src/main.rs:61:22: 61:26 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).49), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:61:22: 61:26 (#0) }, owner_id#0), span: src/main.rs:61:22: 61:35 (#0) }, def_id#0))
  Expression type: Adt(rustc_span::def_id::LocalDefId, [])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).48), kind: Path(Resolved(None, Path { span: src/main.rs:61:22: 61:26 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).49), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:61:22: 61:26 (#0) }, owner_id#0))
  Expression type: Adt(rustc_hir::OwnerId, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:61:22: 61:26 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).49), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_hir::Item, [ReErased])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).75), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).53), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).54), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#40), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#40, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).55), res: Err, args: None, infer_args: true }, PathSegment { ident: io#40, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).56), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#40, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).57), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#40) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).58), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).74), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).72), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }, PathSegment { ident: new_v1#41, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).73), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).62), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).61), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).59), kind: Lit(Spanned { node: Str("  DefId: ", Cooked), span: src/main.rs:62:18: 62:33 (#0) }), span: src/main.rs:62:18: 62:33 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).60), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:62:18: 62:33 (#0) }), span: src/main.rs:62:18: 62:33 (#0) }]), span: src/main.rs:62:18: 62:33 (#0) }), span: src/main.rs:62:18: 62:33 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).71), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).70), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).69), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).68), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).66), kind: Path(LangItem(FormatArgument, src/main.rs:62:28: 62:32 (#41), None)), span: src/main.rs:62:28: 62:32 (#41) }, PathSegment { ident: new_debug#41, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).67), res: Err, args: None, infer_args: true })), span: src/main.rs:62:28: 62:32 (#41) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).65), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).63), kind: Path(Resolved(None, Path { span: src/main.rs:62:35: 62:41 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).64), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:62:35: 62:41 (#0) }), span: src/main.rs:62:35: 62:41 (#41) }]), span: src/main.rs:62:28: 62:32 (#41) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#40) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#40) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).76), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#40), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).54), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#40), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#40, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).55), res: Err, args: None, infer_args: true }, PathSegment { ident: io#40, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).56), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#40, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).57), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#40) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).58), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).74), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).72), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }, PathSegment { ident: new_v1#41, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).73), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).62), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).61), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).59), kind: Lit(Spanned { node: Str("  DefId: ", Cooked), span: src/main.rs:62:18: 62:33 (#0) }), span: src/main.rs:62:18: 62:33 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).60), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:62:18: 62:33 (#0) }), span: src/main.rs:62:18: 62:33 (#0) }]), span: src/main.rs:62:18: 62:33 (#0) }), span: src/main.rs:62:18: 62:33 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).71), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).70), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).69), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).68), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).66), kind: Path(LangItem(FormatArgument, src/main.rs:62:28: 62:32 (#41), None)), span: src/main.rs:62:28: 62:32 (#41) }, PathSegment { ident: new_debug#41, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).67), res: Err, args: None, infer_args: true })), span: src/main.rs:62:28: 62:32 (#41) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).65), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).63), kind: Path(Resolved(None, Path { span: src/main.rs:62:35: 62:41 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).64), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:62:35: 62:41 (#0) }), span: src/main.rs:62:35: 62:41 (#41) }]), span: src/main.rs:62:28: 62:32 (#41) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#40), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#40, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).55), res: Err, args: None, infer_args: true }, PathSegment { ident: io#40, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).56), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#40, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).57), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).74), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).72), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }, PathSegment { ident: new_v1#41, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).73), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).62), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).61), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).59), kind: Lit(Spanned { node: Str("  DefId: ", Cooked), span: src/main.rs:62:18: 62:33 (#0) }), span: src/main.rs:62:18: 62:33 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).60), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:62:18: 62:33 (#0) }), span: src/main.rs:62:18: 62:33 (#0) }]), span: src/main.rs:62:18: 62:33 (#0) }), span: src/main.rs:62:18: 62:33 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).71), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).70), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).69), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).68), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).66), kind: Path(LangItem(FormatArgument, src/main.rs:62:28: 62:32 (#41), None)), span: src/main.rs:62:28: 62:32 (#41) }, PathSegment { ident: new_debug#41, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).67), res: Err, args: None, infer_args: true })), span: src/main.rs:62:28: 62:32 (#41) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).65), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).63), kind: Path(Resolved(None, Path { span: src/main.rs:62:35: 62:41 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).64), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:62:35: 62:41 (#0) }), span: src/main.rs:62:35: 62:41 (#41) }]), span: src/main.rs:62:28: 62:32 (#41) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).72), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }, PathSegment { ident: new_v1#41, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).73), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).61), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).59), kind: Lit(Spanned { node: Str("  DefId: ", Cooked), span: src/main.rs:62:18: 62:33 (#0) }), span: src/main.rs:62:18: 62:33 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).60), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:62:18: 62:33 (#0) }), span: src/main.rs:62:18: 62:33 (#0) }]), span: src/main.rs:62:18: 62:33 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).59), kind: Lit(Spanned { node: Str("  DefId: ", Cooked), span: src/main.rs:62:18: 62:33 (#0) }), span: src/main.rs:62:18: 62:33 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).60), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:62:18: 62:33 (#0) }), span: src/main.rs:62:18: 62:33 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Lit(Spanned { node: Str("  DefId: ", Cooked), span: src/main.rs:62:18: 62:33 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:62:18: 62:33 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).70), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).69), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).68), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).66), kind: Path(LangItem(FormatArgument, src/main.rs:62:28: 62:32 (#41), None)), span: src/main.rs:62:28: 62:32 (#41) }, PathSegment { ident: new_debug#41, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).67), res: Err, args: None, infer_args: true })), span: src/main.rs:62:28: 62:32 (#41) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).65), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).63), kind: Path(Resolved(None, Path { span: src/main.rs:62:35: 62:41 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).64), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:62:35: 62:41 (#0) }), span: src/main.rs:62:35: 62:41 (#41) }]), span: src/main.rs:62:28: 62:32 (#41) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#41) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).69), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).68), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).66), kind: Path(LangItem(FormatArgument, src/main.rs:62:28: 62:32 (#41), None)), span: src/main.rs:62:28: 62:32 (#41) }, PathSegment { ident: new_debug#41, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).67), res: Err, args: None, infer_args: true })), span: src/main.rs:62:28: 62:32 (#41) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).65), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).63), kind: Path(Resolved(None, Path { span: src/main.rs:62:35: 62:41 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).64), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:62:35: 62:41 (#0) }), span: src/main.rs:62:35: 62:41 (#41) }]), span: src/main.rs:62:28: 62:32 (#41) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).68), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).66), kind: Path(LangItem(FormatArgument, src/main.rs:62:28: 62:32 (#41), None)), span: src/main.rs:62:28: 62:32 (#41) }, PathSegment { ident: new_debug#41, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).67), res: Err, args: None, infer_args: true })), span: src/main.rs:62:28: 62:32 (#41) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).65), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).63), kind: Path(Resolved(None, Path { span: src/main.rs:62:35: 62:41 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).64), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:62:35: 62:41 (#0) }), span: src/main.rs:62:35: 62:41 (#41) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_debug
  Function type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).66), kind: Path(LangItem(FormatArgument, src/main.rs:62:28: 62:32 (#41), None)), span: src/main.rs:62:28: 62:32 (#41) }, PathSegment { ident: new_debug#41, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).67), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReErased, Adt(rustc_span::def_id::DefId, [])])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).63), kind: Path(Resolved(None, Path { span: src/main.rs:62:35: 62:41 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).64), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:62:35: 62:41 (#0) }))
  Expression type: &ReErased Adt(rustc_span::def_id::DefId, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:62:35: 62:41 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).64), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::def_id::DefId, [])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).106), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).79), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).80), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#42), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#42, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).81), res: Err, args: None, infer_args: true }, PathSegment { ident: io#42, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).82), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#42, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).83), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#42) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).84), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).105), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).103), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }, PathSegment { ident: new_v1#43, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).104), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).88), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).87), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).85), kind: Lit(Spanned { node: Str("  Path: ", Cooked), span: src/main.rs:63:18: 63:30 (#0) }), span: src/main.rs:63:18: 63:30 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).86), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:63:18: 63:30 (#0) }), span: src/main.rs:63:18: 63:30 (#0) }]), span: src/main.rs:63:18: 63:30 (#0) }), span: src/main.rs:63:18: 63:30 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).102), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).101), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).100), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).99), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).97), kind: Path(LangItem(FormatArgument, src/main.rs:63:27: 63:29 (#43), None)), span: src/main.rs:63:27: 63:29 (#43) }, PathSegment { ident: new_display#43, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).98), res: Err, args: None, infer_args: true })), span: src/main.rs:63:27: 63:29 (#43) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).96), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).89), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).90), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).91), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).92), kind: Path(Resolved(None, Path { span: src/main.rs:63:32: 63:36 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).93), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:63:32: 63:36 (#0) }, tcx#0), span: src/main.rs:63:32: 63:40 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).94), kind: Path(Resolved(None, Path { span: src/main.rs:63:54: 63:60 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).95), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:63:54: 63:60 (#0) }], src/main.rs:63:41: 63:61 (#0)), span: src/main.rs:63:32: 63:61 (#0) }), span: src/main.rs:63:32: 63:61 (#43) }]), span: src/main.rs:63:27: 63:29 (#43) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#42) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#42) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).107), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#42), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).80), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#42), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#42, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).81), res: Err, args: None, infer_args: true }, PathSegment { ident: io#42, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).82), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#42, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).83), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#42) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).84), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).105), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).103), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }, PathSegment { ident: new_v1#43, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).104), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).88), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).87), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).85), kind: Lit(Spanned { node: Str("  Path: ", Cooked), span: src/main.rs:63:18: 63:30 (#0) }), span: src/main.rs:63:18: 63:30 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).86), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:63:18: 63:30 (#0) }), span: src/main.rs:63:18: 63:30 (#0) }]), span: src/main.rs:63:18: 63:30 (#0) }), span: src/main.rs:63:18: 63:30 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).102), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).101), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).100), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).99), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).97), kind: Path(LangItem(FormatArgument, src/main.rs:63:27: 63:29 (#43), None)), span: src/main.rs:63:27: 63:29 (#43) }, PathSegment { ident: new_display#43, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).98), res: Err, args: None, infer_args: true })), span: src/main.rs:63:27: 63:29 (#43) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).96), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).89), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).90), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).91), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).92), kind: Path(Resolved(None, Path { span: src/main.rs:63:32: 63:36 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).93), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:63:32: 63:36 (#0) }, tcx#0), span: src/main.rs:63:32: 63:40 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).94), kind: Path(Resolved(None, Path { span: src/main.rs:63:54: 63:60 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).95), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:63:54: 63:60 (#0) }], src/main.rs:63:41: 63:61 (#0)), span: src/main.rs:63:32: 63:61 (#0) }), span: src/main.rs:63:32: 63:61 (#43) }]), span: src/main.rs:63:27: 63:29 (#43) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#42), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#42, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).81), res: Err, args: None, infer_args: true }, PathSegment { ident: io#42, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).82), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#42, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).83), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).105), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).103), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }, PathSegment { ident: new_v1#43, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).104), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).88), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).87), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).85), kind: Lit(Spanned { node: Str("  Path: ", Cooked), span: src/main.rs:63:18: 63:30 (#0) }), span: src/main.rs:63:18: 63:30 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).86), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:63:18: 63:30 (#0) }), span: src/main.rs:63:18: 63:30 (#0) }]), span: src/main.rs:63:18: 63:30 (#0) }), span: src/main.rs:63:18: 63:30 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).102), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).101), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).100), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).99), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).97), kind: Path(LangItem(FormatArgument, src/main.rs:63:27: 63:29 (#43), None)), span: src/main.rs:63:27: 63:29 (#43) }, PathSegment { ident: new_display#43, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).98), res: Err, args: None, infer_args: true })), span: src/main.rs:63:27: 63:29 (#43) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).96), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).89), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).90), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).91), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).92), kind: Path(Resolved(None, Path { span: src/main.rs:63:32: 63:36 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).93), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:63:32: 63:36 (#0) }, tcx#0), span: src/main.rs:63:32: 63:40 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).94), kind: Path(Resolved(None, Path { span: src/main.rs:63:54: 63:60 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).95), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:63:54: 63:60 (#0) }], src/main.rs:63:41: 63:61 (#0)), span: src/main.rs:63:32: 63:61 (#0) }), span: src/main.rs:63:32: 63:61 (#43) }]), span: src/main.rs:63:27: 63:29 (#43) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).103), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }, PathSegment { ident: new_v1#43, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).104), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).87), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).85), kind: Lit(Spanned { node: Str("  Path: ", Cooked), span: src/main.rs:63:18: 63:30 (#0) }), span: src/main.rs:63:18: 63:30 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).86), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:63:18: 63:30 (#0) }), span: src/main.rs:63:18: 63:30 (#0) }]), span: src/main.rs:63:18: 63:30 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).85), kind: Lit(Spanned { node: Str("  Path: ", Cooked), span: src/main.rs:63:18: 63:30 (#0) }), span: src/main.rs:63:18: 63:30 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).86), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:63:18: 63:30 (#0) }), span: src/main.rs:63:18: 63:30 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Lit(Spanned { node: Str("  Path: ", Cooked), span: src/main.rs:63:18: 63:30 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:63:18: 63:30 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).101), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).100), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).99), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).97), kind: Path(LangItem(FormatArgument, src/main.rs:63:27: 63:29 (#43), None)), span: src/main.rs:63:27: 63:29 (#43) }, PathSegment { ident: new_display#43, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).98), res: Err, args: None, infer_args: true })), span: src/main.rs:63:27: 63:29 (#43) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).96), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).89), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).90), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).91), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).92), kind: Path(Resolved(None, Path { span: src/main.rs:63:32: 63:36 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).93), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:63:32: 63:36 (#0) }, tcx#0), span: src/main.rs:63:32: 63:40 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).94), kind: Path(Resolved(None, Path { span: src/main.rs:63:54: 63:60 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).95), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:63:54: 63:60 (#0) }], src/main.rs:63:41: 63:61 (#0)), span: src/main.rs:63:32: 63:61 (#0) }), span: src/main.rs:63:32: 63:61 (#43) }]), span: src/main.rs:63:27: 63:29 (#43) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#43) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).100), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).99), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).97), kind: Path(LangItem(FormatArgument, src/main.rs:63:27: 63:29 (#43), None)), span: src/main.rs:63:27: 63:29 (#43) }, PathSegment { ident: new_display#43, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).98), res: Err, args: None, infer_args: true })), span: src/main.rs:63:27: 63:29 (#43) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).96), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).89), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).90), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).91), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).92), kind: Path(Resolved(None, Path { span: src/main.rs:63:32: 63:36 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).93), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:63:32: 63:36 (#0) }, tcx#0), span: src/main.rs:63:32: 63:40 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).94), kind: Path(Resolved(None, Path { span: src/main.rs:63:54: 63:60 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).95), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:63:54: 63:60 (#0) }], src/main.rs:63:41: 63:61 (#0)), span: src/main.rs:63:32: 63:61 (#0) }), span: src/main.rs:63:32: 63:61 (#43) }]), span: src/main.rs:63:27: 63:29 (#43) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).99), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).97), kind: Path(LangItem(FormatArgument, src/main.rs:63:27: 63:29 (#43), None)), span: src/main.rs:63:27: 63:29 (#43) }, PathSegment { ident: new_display#43, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).98), res: Err, args: None, infer_args: true })), span: src/main.rs:63:27: 63:29 (#43) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).96), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).89), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).90), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).91), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).92), kind: Path(Resolved(None, Path { span: src/main.rs:63:32: 63:36 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).93), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:63:32: 63:36 (#0) }, tcx#0), span: src/main.rs:63:32: 63:40 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).94), kind: Path(Resolved(None, Path { span: src/main.rs:63:54: 63:60 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).95), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:63:54: 63:60 (#0) }], src/main.rs:63:41: 63:61 (#0)), span: src/main.rs:63:32: 63:61 (#0) }), span: src/main.rs:63:32: 63:61 (#43) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_display
  Function type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).97), kind: Path(LangItem(FormatArgument, src/main.rs:63:27: 63:29 (#43), None)), span: src/main.rs:63:27: 63:29 (#43) }, PathSegment { ident: new_display#43, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).98), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReErased, Adt(std::string::String, [])])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).89), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).90), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).91), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).92), kind: Path(Resolved(None, Path { span: src/main.rs:63:32: 63:36 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).93), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:63:32: 63:36 (#0) }, tcx#0), span: src/main.rs:63:32: 63:40 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).94), kind: Path(Resolved(None, Path { span: src/main.rs:63:54: 63:60 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).95), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:63:54: 63:60 (#0) }], src/main.rs:63:41: 63:61 (#0)), span: src/main.rs:63:32: 63:61 (#0) }))
  Expression type: &ReErased Adt(std::string::String, [])
Expression (kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).90), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).91), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).92), kind: Path(Resolved(None, Path { span: src/main.rs:63:32: 63:36 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).93), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:63:32: 63:36 (#0) }, tcx#0), span: src/main.rs:63:32: 63:40 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).94), kind: Path(Resolved(None, Path { span: src/main.rs:63:54: 63:60 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).95), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:63:54: 63:60 (#0) }], src/main.rs:63:41: 63:61 (#0)))
  Method call: def_path_str with 1 arguments
  Receiver type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
  Method: rustc_middle::ty::print::pretty::<impl rustc_middle::ty::TyCtxt<'t>>::def_path_str
  Method type: FnDef(DefId(155:4851 ~ rustc_middle[ca3f]::ty::print::pretty::{impl#4}::def_path_str), [ReEarlyBound(DefId(155:4850 ~ rustc_middle[ca3f]::ty::print::pretty::{impl#4}::'t), 0, 't), impl IntoQueryParam<DefId>/#1])
  Expression type: Adt(std::string::String, [])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).92), kind: Path(Resolved(None, Path { span: src/main.rs:63:32: 63:36 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).93), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:63:32: 63:36 (#0) }, tcx#0))
  Expression type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:63:32: 63:36 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).93), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })))
  Expression type: &ReErased mut Adt(PrintVisitor, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:63:54: 63:60 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).95), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::def_id::DefId, [])
Expression (kind: If(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).110), kind: Let(Let { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).111), span: src/main.rs:66:12: 66:44 (#0), pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).114), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:66:16: 66:28 (#0), res: Def(Ctor(Variant, Fn), DefId(120:4143 ~ rustc_hir[6705]::hir::ItemKind::Fn::{constructor#0})), segments: [PathSegment { ident: ItemKind#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).112), res: Def(Enum, DefId(120:4123 ~ rustc_hir[6705]::hir::ItemKind)), args: None, infer_args: true }, PathSegment { ident: Fn#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).113), res: Def(Ctor(Variant, Fn), DefId(120:4143 ~ rustc_hir[6705]::hir::ItemKind::Fn::{constructor#0})), args: None, infer_args: true }] }), [], Some(0)), span: src/main.rs:66:16: 66:32 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).115), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).116), kind: Path(Resolved(None, Path { span: src/main.rs:66:35: 66:39 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).117), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:66:35: 66:39 (#0) }, kind#0), span: src/main.rs:66:35: 66:44 (#0) } }), span: src/main.rs:66:12: 66:44 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).255), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).118), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129), fn_type#0, None), span: src/main.rs:67:17: 67:24 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).119), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).120), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).121), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).122), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).123), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).124), kind: Path(Resolved(None, Path { span: src/main.rs:67:27: 67:31 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).125), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:67:27: 67:31 (#0) }, tcx#0), span: src/main.rs:67:27: 67:35 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).126), kind: Path(Resolved(None, Path { span: src/main.rs:67:44: 67:50 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).127), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:67:44: 67:50 (#0) }], src/main.rs:67:36: 67:51 (#0)), span: src/main.rs:67:27: 67:51 (#0) }, [], src/main.rs:67:52: 67:74 (#0)), span: src/main.rs:67:27: 67:74 (#0) }), els: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).128), span: src/main.rs:67:13: 67:75 (#0), source: Normal }), span: src/main.rs:67:13: 67:75 (#0) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).155), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).130), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).153), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).131), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).132), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#44), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).133), res: Err, args: None, infer_args: true }, PathSegment { ident: io#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).134), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).135), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#44) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).136), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).152), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).150), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }, PathSegment { ident: new_v1#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).151), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).140), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).139), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).137), kind: Lit(Spanned { node: Str("  Type: ", Cooked), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).138), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }]), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).149), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).148), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).147), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).144), kind: Path(LangItem(FormatArgument, src/main.rs:68:31: 68:35 (#45), None)), span: src/main.rs:68:31: 68:35 (#45) }, PathSegment { ident: new_debug#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).145), res: Err, args: None, infer_args: true })), span: src/main.rs:68:31: 68:35 (#45) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).141), kind: Path(Resolved(None, Path { span: src/main.rs:68:38: 68:45 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), segments: [PathSegment { ident: fn_type#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).142), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), args: None, infer_args: true }] })), span: src/main.rs:68:38: 68:45 (#0) }), span: src/main.rs:68:38: 68:45 (#45) }]), span: src/main.rs:68:31: 68:35 (#45) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#44) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#44) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).154), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#44), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#44) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#44) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).171), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).156), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).169), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).157), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).158), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#46), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).159), res: Err, args: None, infer_args: true }, PathSegment { ident: io#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).160), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).161), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#46) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).162), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).168), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).166), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }, PathSegment { ident: new_const#47, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).167), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).165), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).164), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).163), kind: Lit(Spanned { node: Str("  Type-checked information:\n", Cooked), span: src/main.rs:71:22: 71:51 (#0) }), span: src/main.rs:71:22: 71:51 (#0) }]), span: src/main.rs:71:22: 71:51 (#0) }), span: src/main.rs:71:22: 71:51 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#46) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#46) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).170), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#46), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#46) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#46) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).172), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).183), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).183), typeck#0, None), span: src/main.rs:72:17: 72:23 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).173), kind: MethodCall(PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).174), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).175), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).176), kind: Path(Resolved(None, Path { span: src/main.rs:72:26: 72:30 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).177), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:72:26: 72:30 (#0) }, tcx#0), span: src/main.rs:72:26: 72:34 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).178), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).179), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).180), kind: Path(Resolved(None, Path { span: src/main.rs:72:42: 72:46 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).181), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:72:42: 72:46 (#0) }, owner_id#0), span: src/main.rs:72:42: 72:55 (#0) }, def_id#0), span: src/main.rs:72:42: 72:62 (#0) }], src/main.rs:72:35: 72:63 (#0)), span: src/main.rs:72:26: 72:63 (#0) }), els: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).182), span: src/main.rs:72:13: 72:64 (#0), source: Normal }), span: src/main.rs:72:13: 72:64 (#0) }], expr: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).184), kind: Match(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).185), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).186), kind: Path(Resolved(None, Path { span: src/main.rs:75:19: 75:43 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).187), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).188), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).189), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })), span: src/main.rs:75:19: 75:43 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).190), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).191), kind: Path(Resolved(None, Path { span: src/main.rs:75:44: 75:72 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).192), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).193), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).194), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:75:44: 75:72 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).195), kind: Closure(Closure { def_id: DefId(0:32 ~ main[cc0f]::{impl#1}::visit_item::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:75:76: 75:76 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).196) }, fn_decl_span: src/main.rs:75:73: 75:75 (#0), fn_arg_span: Some(src/main.rs:75:73: 75:75 (#0)), movability: None }), span: src/main.rs:75:73: 77:14 (#0) }]), span: src/main.rs:75:44: 77:15 (#0) }]), span: src/main.rs:75:19: 77:16 (#0) }, [Arm { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).209), span: src/main.rs:78:17: 78:64 (#0), pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).208), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:78:17: 78:19 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), segments: [PathSegment { ident: Ok#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).206), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207), ty#0, None), span: src/main.rs:78:20: 78:22 (#0), default_binding_modes: true }], None), span: src/main.rs:78:17: 78:23 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).210), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).233), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).211), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).212), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#48), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).213), res: Err, args: None, infer_args: true }, PathSegment { ident: io#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).214), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).215), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#48) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).216), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).232), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).230), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }, PathSegment { ident: new_v1#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).231), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).219), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).217), kind: Lit(Spanned { node: Str("    Return type: ", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).218), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }]), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).229), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).228), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).227), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).226), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).224), kind: Path(LangItem(FormatArgument, src/main.rs:78:54: 78:58 (#49), None)), span: src/main.rs:78:54: 78:58 (#49) }, PathSegment { ident: new_debug#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).225), res: Err, args: None, infer_args: true })), span: src/main.rs:78:54: 78:58 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).223), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).221), kind: Path(Resolved(None, Path { span: src/main.rs:78:61: 78:63 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), segments: [PathSegment { ident: ty#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).222), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), args: None, infer_args: true }] })), span: src/main.rs:78:61: 78:63 (#0) }), span: src/main.rs:78:61: 78:63 (#49) }]), span: src/main.rs:78:54: 78:58 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#48) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#48) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).234), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#48), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#48) } }, Arm { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).238), span: src/main.rs:79:17: 79:83 (#0), pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).237), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:79:17: 79:20 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), segments: [PathSegment { ident: Err#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).235), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).236), kind: Wild, span: src/main.rs:79:21: 79:22 (#0), default_binding_modes: true }], None), span: src/main.rs:79:17: 79:23 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).239), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).252), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).240), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).241), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#50), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).242), res: Err, args: None, infer_args: true }, PathSegment { ident: io#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).243), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).244), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#50) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).245), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).251), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).249), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }, PathSegment { ident: new_const#51, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).250), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).248), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).247), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).246), kind: Lit(Spanned { node: Str("    Return type: <unavailable for this item>\n", Cooked), span: src/main.rs:79:36: 79:82 (#0) }), span: src/main.rs:79:36: 79:82 (#0) }]), span: src/main.rs:79:36: 79:82 (#0) }), span: src/main.rs:79:36: 79:82 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#50) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#50) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).253), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#50), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#50) } }], Normal), span: src/main.rs:75:13: 80:14 (#0) }), hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).254), rules: DefaultBlock, span: src/main.rs:66:45: 81:10 (#0), targeted_by_break: false }, None), span: src/main.rs:66:45: 81:10 (#0) }, None))
  Expression type: ()
Expression (kind: Let(Let { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).111), span: src/main.rs:66:12: 66:44 (#0), pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).114), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:66:16: 66:28 (#0), res: Def(Ctor(Variant, Fn), DefId(120:4143 ~ rustc_hir[6705]::hir::ItemKind::Fn::{constructor#0})), segments: [PathSegment { ident: ItemKind#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).112), res: Def(Enum, DefId(120:4123 ~ rustc_hir[6705]::hir::ItemKind)), args: None, infer_args: true }, PathSegment { ident: Fn#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).113), res: Def(Ctor(Variant, Fn), DefId(120:4143 ~ rustc_hir[6705]::hir::ItemKind::Fn::{constructor#0})), args: None, infer_args: true }] }), [], Some(0)), span: src/main.rs:66:16: 66:32 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).115), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).116), kind: Path(Resolved(None, Path { span: src/main.rs:66:35: 66:39 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).117), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:66:35: 66:39 (#0) }, kind#0), span: src/main.rs:66:35: 66:44 (#0) } }))
  Expression type: bool
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).116), kind: Path(Resolved(None, Path { span: src/main.rs:66:35: 66:39 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).117), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:66:35: 66:39 (#0) }, kind#0))
  Expression type: Adt(rustc_hir::ItemKind, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:66:35: 66:39 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).117), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_hir::Item, [ReErased])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).118), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129), fn_type#0, None), span: src/main.rs:67:17: 67:24 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).119), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).120), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).121), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).122), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).123), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).124), kind: Path(Resolved(None, Path { span: src/main.rs:67:27: 67:31 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).125), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:67:27: 67:31 (#0) }, tcx#0), span: src/main.rs:67:27: 67:35 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).126), kind: Path(Resolved(None, Path { span: src/main.rs:67:44: 67:50 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).127), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:67:44: 67:50 (#0) }], src/main.rs:67:36: 67:51 (#0)), span: src/main.rs:67:27: 67:51 (#0) }, [], src/main.rs:67:52: 67:74 (#0)), span: src/main.rs:67:27: 67:74 (#0) }), els: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).128), span: src/main.rs:67:13: 67:75 (#0), source: Normal }), span: src/main.rs:67:13: 67:75 (#0) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).155), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).130), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).153), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).131), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).132), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#44), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).133), res: Err, args: None, infer_args: true }, PathSegment { ident: io#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).134), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).135), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#44) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).136), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).152), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).150), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }, PathSegment { ident: new_v1#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).151), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).140), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).139), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).137), kind: Lit(Spanned { node: Str("  Type: ", Cooked), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).138), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }]), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).149), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).148), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).147), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).144), kind: Path(LangItem(FormatArgument, src/main.rs:68:31: 68:35 (#45), None)), span: src/main.rs:68:31: 68:35 (#45) }, PathSegment { ident: new_debug#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).145), res: Err, args: None, infer_args: true })), span: src/main.rs:68:31: 68:35 (#45) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).141), kind: Path(Resolved(None, Path { span: src/main.rs:68:38: 68:45 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), segments: [PathSegment { ident: fn_type#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).142), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), args: None, infer_args: true }] })), span: src/main.rs:68:38: 68:45 (#0) }), span: src/main.rs:68:38: 68:45 (#45) }]), span: src/main.rs:68:31: 68:35 (#45) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#44) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#44) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).154), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#44), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#44) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#44) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).171), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).156), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).169), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).157), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).158), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#46), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).159), res: Err, args: None, infer_args: true }, PathSegment { ident: io#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).160), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).161), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#46) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).162), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).168), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).166), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }, PathSegment { ident: new_const#47, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).167), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).165), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).164), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).163), kind: Lit(Spanned { node: Str("  Type-checked information:\n", Cooked), span: src/main.rs:71:22: 71:51 (#0) }), span: src/main.rs:71:22: 71:51 (#0) }]), span: src/main.rs:71:22: 71:51 (#0) }), span: src/main.rs:71:22: 71:51 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#46) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#46) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).170), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#46), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#46) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#46) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).172), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).183), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).183), typeck#0, None), span: src/main.rs:72:17: 72:23 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).173), kind: MethodCall(PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).174), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).175), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).176), kind: Path(Resolved(None, Path { span: src/main.rs:72:26: 72:30 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).177), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:72:26: 72:30 (#0) }, tcx#0), span: src/main.rs:72:26: 72:34 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).178), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).179), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).180), kind: Path(Resolved(None, Path { span: src/main.rs:72:42: 72:46 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).181), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:72:42: 72:46 (#0) }, owner_id#0), span: src/main.rs:72:42: 72:55 (#0) }, def_id#0), span: src/main.rs:72:42: 72:62 (#0) }], src/main.rs:72:35: 72:63 (#0)), span: src/main.rs:72:26: 72:63 (#0) }), els: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).182), span: src/main.rs:72:13: 72:64 (#0), source: Normal }), span: src/main.rs:72:13: 72:64 (#0) }], expr: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).184), kind: Match(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).185), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).186), kind: Path(Resolved(None, Path { span: src/main.rs:75:19: 75:43 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).187), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).188), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).189), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })), span: src/main.rs:75:19: 75:43 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).190), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).191), kind: Path(Resolved(None, Path { span: src/main.rs:75:44: 75:72 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).192), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).193), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).194), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:75:44: 75:72 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).195), kind: Closure(Closure { def_id: DefId(0:32 ~ main[cc0f]::{impl#1}::visit_item::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:75:76: 75:76 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).196) }, fn_decl_span: src/main.rs:75:73: 75:75 (#0), fn_arg_span: Some(src/main.rs:75:73: 75:75 (#0)), movability: None }), span: src/main.rs:75:73: 77:14 (#0) }]), span: src/main.rs:75:44: 77:15 (#0) }]), span: src/main.rs:75:19: 77:16 (#0) }, [Arm { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).209), span: src/main.rs:78:17: 78:64 (#0), pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).208), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:78:17: 78:19 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), segments: [PathSegment { ident: Ok#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).206), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207), ty#0, None), span: src/main.rs:78:20: 78:22 (#0), default_binding_modes: true }], None), span: src/main.rs:78:17: 78:23 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).210), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).233), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).211), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).212), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#48), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).213), res: Err, args: None, infer_args: true }, PathSegment { ident: io#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).214), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).215), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#48) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).216), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).232), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).230), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }, PathSegment { ident: new_v1#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).231), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).219), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).217), kind: Lit(Spanned { node: Str("    Return type: ", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).218), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }]), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).229), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).228), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).227), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).226), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).224), kind: Path(LangItem(FormatArgument, src/main.rs:78:54: 78:58 (#49), None)), span: src/main.rs:78:54: 78:58 (#49) }, PathSegment { ident: new_debug#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).225), res: Err, args: None, infer_args: true })), span: src/main.rs:78:54: 78:58 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).223), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).221), kind: Path(Resolved(None, Path { span: src/main.rs:78:61: 78:63 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), segments: [PathSegment { ident: ty#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).222), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), args: None, infer_args: true }] })), span: src/main.rs:78:61: 78:63 (#0) }), span: src/main.rs:78:61: 78:63 (#49) }]), span: src/main.rs:78:54: 78:58 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#48) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#48) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).234), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#48), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#48) } }, Arm { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).238), span: src/main.rs:79:17: 79:83 (#0), pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).237), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:79:17: 79:20 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), segments: [PathSegment { ident: Err#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).235), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).236), kind: Wild, span: src/main.rs:79:21: 79:22 (#0), default_binding_modes: true }], None), span: src/main.rs:79:17: 79:23 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).239), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).252), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).240), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).241), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#50), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).242), res: Err, args: None, infer_args: true }, PathSegment { ident: io#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).243), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).244), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#50) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).245), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).251), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).249), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }, PathSegment { ident: new_const#51, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).250), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).248), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).247), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).246), kind: Lit(Spanned { node: Str("    Return type: <unavailable for this item>\n", Cooked), span: src/main.rs:79:36: 79:82 (#0) }), span: src/main.rs:79:36: 79:82 (#0) }]), span: src/main.rs:79:36: 79:82 (#0) }), span: src/main.rs:79:36: 79:82 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#50) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#50) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).253), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#50), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#50) } }], Normal), span: src/main.rs:75:13: 80:14 (#0) }), hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).254), rules: DefaultBlock, span: src/main.rs:66:45: 81:10 (#0), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).120), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).121), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).122), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).123), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).124), kind: Path(Resolved(None, Path { span: src/main.rs:67:27: 67:31 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).125), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:67:27: 67:31 (#0) }, tcx#0), span: src/main.rs:67:27: 67:35 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).126), kind: Path(Resolved(None, Path { span: src/main.rs:67:44: 67:50 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).127), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:67:44: 67:50 (#0) }], src/main.rs:67:36: 67:51 (#0)), span: src/main.rs:67:27: 67:51 (#0) }, [], src/main.rs:67:52: 67:74 (#0)))
  Method call: instantiate_identity with 0 arguments
  Receiver type: Adt(rustc_middle::ty::EarlyBinder, [Adt(rustc_middle::ty::Ty, [ReErased])])
  Method: rustc_middle::ty::EarlyBinder::<T>::instantiate_identity
  Method type: FnDef(DefId(155:7186 ~ rustc_middle[ca3f]::ty::generic_args::{impl#33}::instantiate_identity), [ReEarlyBound(DefId(155:7183 ~ rustc_middle[ca3f]::ty::generic_args::{impl#33}::'tcx), 0, 'tcx), T/#1])
  Expression type: Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).122), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).123), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).124), kind: Path(Resolved(None, Path { span: src/main.rs:67:27: 67:31 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).125), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:67:27: 67:31 (#0) }, tcx#0), span: src/main.rs:67:27: 67:35 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).126), kind: Path(Resolved(None, Path { span: src/main.rs:67:44: 67:50 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).127), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })), span: src/main.rs:67:44: 67:50 (#0) }], src/main.rs:67:36: 67:51 (#0)))
  Method call: type_of with 1 arguments
  Receiver type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
  Method: rustc_middle::query::<impl rustc_middle::ty::TyCtxt<'tcx>>::type_of
  Method type: FnDef(DefId(155:37468 ~ rustc_middle[ca3f]::query::{impl#3}::type_of), [ReEarlyBound(DefId(155:37452 ~ rustc_middle[ca3f]::query::{impl#3}::'tcx), 0, 'tcx), impl IntoQueryParam<DefId>/#1])
  Expression type: Adt(rustc_middle::ty::EarlyBinder, [Adt(rustc_middle::ty::Ty, [ReErased])])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).124), kind: Path(Resolved(None, Path { span: src/main.rs:67:27: 67:31 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).125), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:67:27: 67:31 (#0) }, tcx#0))
  Expression type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:67:27: 67:31 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).125), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })))
  Expression type: &ReErased mut Adt(PrintVisitor, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:67:44: 67:50 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).127), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).51)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::def_id::DefId, [])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).153), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).131), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).132), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#44), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).133), res: Err, args: None, infer_args: true }, PathSegment { ident: io#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).134), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).135), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#44) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).136), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).152), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).150), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }, PathSegment { ident: new_v1#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).151), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).140), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).139), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).137), kind: Lit(Spanned { node: Str("  Type: ", Cooked), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).138), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }]), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).149), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).148), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).147), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).144), kind: Path(LangItem(FormatArgument, src/main.rs:68:31: 68:35 (#45), None)), span: src/main.rs:68:31: 68:35 (#45) }, PathSegment { ident: new_debug#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).145), res: Err, args: None, infer_args: true })), span: src/main.rs:68:31: 68:35 (#45) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).141), kind: Path(Resolved(None, Path { span: src/main.rs:68:38: 68:45 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), segments: [PathSegment { ident: fn_type#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).142), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), args: None, infer_args: true }] })), span: src/main.rs:68:38: 68:45 (#0) }), span: src/main.rs:68:38: 68:45 (#45) }]), span: src/main.rs:68:31: 68:35 (#45) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#44) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#44) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).154), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#44), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).132), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#44), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).133), res: Err, args: None, infer_args: true }, PathSegment { ident: io#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).134), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).135), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#44) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).136), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).152), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).150), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }, PathSegment { ident: new_v1#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).151), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).140), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).139), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).137), kind: Lit(Spanned { node: Str("  Type: ", Cooked), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).138), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }]), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).149), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).148), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).147), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).144), kind: Path(LangItem(FormatArgument, src/main.rs:68:31: 68:35 (#45), None)), span: src/main.rs:68:31: 68:35 (#45) }, PathSegment { ident: new_debug#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).145), res: Err, args: None, infer_args: true })), span: src/main.rs:68:31: 68:35 (#45) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).141), kind: Path(Resolved(None, Path { span: src/main.rs:68:38: 68:45 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), segments: [PathSegment { ident: fn_type#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).142), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), args: None, infer_args: true }] })), span: src/main.rs:68:38: 68:45 (#0) }), span: src/main.rs:68:38: 68:45 (#45) }]), span: src/main.rs:68:31: 68:35 (#45) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#44), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).133), res: Err, args: None, infer_args: true }, PathSegment { ident: io#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).134), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#44, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).135), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).152), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).150), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }, PathSegment { ident: new_v1#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).151), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).140), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).139), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).137), kind: Lit(Spanned { node: Str("  Type: ", Cooked), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).138), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }]), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).149), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).148), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).147), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).144), kind: Path(LangItem(FormatArgument, src/main.rs:68:31: 68:35 (#45), None)), span: src/main.rs:68:31: 68:35 (#45) }, PathSegment { ident: new_debug#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).145), res: Err, args: None, infer_args: true })), span: src/main.rs:68:31: 68:35 (#45) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).141), kind: Path(Resolved(None, Path { span: src/main.rs:68:38: 68:45 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), segments: [PathSegment { ident: fn_type#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).142), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), args: None, infer_args: true }] })), span: src/main.rs:68:38: 68:45 (#0) }), span: src/main.rs:68:38: 68:45 (#45) }]), span: src/main.rs:68:31: 68:35 (#45) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).150), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }, PathSegment { ident: new_v1#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).151), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).139), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).137), kind: Lit(Spanned { node: Str("  Type: ", Cooked), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).138), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }]), span: src/main.rs:68:22: 68:36 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).137), kind: Lit(Spanned { node: Str("  Type: ", Cooked), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).138), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:68:22: 68:36 (#0) }), span: src/main.rs:68:22: 68:36 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Lit(Spanned { node: Str("  Type: ", Cooked), span: src/main.rs:68:22: 68:36 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:68:22: 68:36 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).148), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).147), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).144), kind: Path(LangItem(FormatArgument, src/main.rs:68:31: 68:35 (#45), None)), span: src/main.rs:68:31: 68:35 (#45) }, PathSegment { ident: new_debug#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).145), res: Err, args: None, infer_args: true })), span: src/main.rs:68:31: 68:35 (#45) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).141), kind: Path(Resolved(None, Path { span: src/main.rs:68:38: 68:45 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), segments: [PathSegment { ident: fn_type#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).142), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), args: None, infer_args: true }] })), span: src/main.rs:68:38: 68:45 (#0) }), span: src/main.rs:68:38: 68:45 (#45) }]), span: src/main.rs:68:31: 68:35 (#45) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#45) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).147), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).144), kind: Path(LangItem(FormatArgument, src/main.rs:68:31: 68:35 (#45), None)), span: src/main.rs:68:31: 68:35 (#45) }, PathSegment { ident: new_debug#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).145), res: Err, args: None, infer_args: true })), span: src/main.rs:68:31: 68:35 (#45) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).141), kind: Path(Resolved(None, Path { span: src/main.rs:68:38: 68:45 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), segments: [PathSegment { ident: fn_type#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).142), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), args: None, infer_args: true }] })), span: src/main.rs:68:38: 68:45 (#0) }), span: src/main.rs:68:38: 68:45 (#45) }]), span: src/main.rs:68:31: 68:35 (#45) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).144), kind: Path(LangItem(FormatArgument, src/main.rs:68:31: 68:35 (#45), None)), span: src/main.rs:68:31: 68:35 (#45) }, PathSegment { ident: new_debug#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).145), res: Err, args: None, infer_args: true })), span: src/main.rs:68:31: 68:35 (#45) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).141), kind: Path(Resolved(None, Path { span: src/main.rs:68:38: 68:45 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), segments: [PathSegment { ident: fn_type#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).142), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), args: None, infer_args: true }] })), span: src/main.rs:68:38: 68:45 (#0) }), span: src/main.rs:68:38: 68:45 (#45) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_debug
  Function type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).144), kind: Path(LangItem(FormatArgument, src/main.rs:68:31: 68:35 (#45), None)), span: src/main.rs:68:31: 68:35 (#45) }, PathSegment { ident: new_debug#45, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).145), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReErased, Adt(rustc_middle::ty::Ty, [ReErased])])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).141), kind: Path(Resolved(None, Path { span: src/main.rs:68:38: 68:45 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), segments: [PathSegment { ident: fn_type#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).142), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), args: None, infer_args: true }] })), span: src/main.rs:68:38: 68:45 (#0) }))
  Expression type: &ReErased Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:68:38: 68:45 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), segments: [PathSegment { ident: fn_type#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).142), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).129)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).169), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).157), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).158), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#46), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).159), res: Err, args: None, infer_args: true }, PathSegment { ident: io#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).160), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).161), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#46) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).162), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).168), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).166), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }, PathSegment { ident: new_const#47, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).167), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).165), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).164), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).163), kind: Lit(Spanned { node: Str("  Type-checked information:\n", Cooked), span: src/main.rs:71:22: 71:51 (#0) }), span: src/main.rs:71:22: 71:51 (#0) }]), span: src/main.rs:71:22: 71:51 (#0) }), span: src/main.rs:71:22: 71:51 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#46) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#46) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).170), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#46), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).158), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#46), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).159), res: Err, args: None, infer_args: true }, PathSegment { ident: io#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).160), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).161), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#46) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).162), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).168), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).166), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }, PathSegment { ident: new_const#47, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).167), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).165), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).164), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).163), kind: Lit(Spanned { node: Str("  Type-checked information:\n", Cooked), span: src/main.rs:71:22: 71:51 (#0) }), span: src/main.rs:71:22: 71:51 (#0) }]), span: src/main.rs:71:22: 71:51 (#0) }), span: src/main.rs:71:22: 71:51 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#46), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).159), res: Err, args: None, infer_args: true }, PathSegment { ident: io#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).160), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#46, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).161), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).168), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).166), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }, PathSegment { ident: new_const#47, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).167), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).165), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).164), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).163), kind: Lit(Spanned { node: Str("  Type-checked information:\n", Cooked), span: src/main.rs:71:22: 71:51 (#0) }), span: src/main.rs:71:22: 71:51 (#0) }]), span: src/main.rs:71:22: 71:51 (#0) }), span: src/main.rs:71:22: 71:51 (#0) }]))
  Function call with 1 arguments
  Called function: std::fmt::Arguments::<'a>::new_const
  Function type: FnDef(DefId(2:9415 ~ core[ae61]::fmt::{impl#2}::new_const), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).166), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#47) }, PathSegment { ident: new_const#47, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).167), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9415 ~ core[ae61]::fmt::{impl#2}::new_const), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).164), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).163), kind: Lit(Spanned { node: Str("  Type-checked information:\n", Cooked), span: src/main.rs:71:22: 71:51 (#0) }), span: src/main.rs:71:22: 71:51 (#0) }]), span: src/main.rs:71:22: 71:51 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).163), kind: Lit(Spanned { node: Str("  Type-checked information:\n", Cooked), span: src/main.rs:71:22: 71:51 (#0) }), span: src/main.rs:71:22: 71:51 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Lit(Spanned { node: Str("  Type-checked information:\n", Cooked), span: src/main.rs:71:22: 71:51 (#0) }))
  Expression type: &ReErased str
Expression (kind: MethodCall(PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).174), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).175), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).176), kind: Path(Resolved(None, Path { span: src/main.rs:72:26: 72:30 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).177), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:72:26: 72:30 (#0) }, tcx#0), span: src/main.rs:72:26: 72:34 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).178), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).179), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).180), kind: Path(Resolved(None, Path { span: src/main.rs:72:42: 72:46 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).181), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:72:42: 72:46 (#0) }, owner_id#0), span: src/main.rs:72:42: 72:55 (#0) }, def_id#0), span: src/main.rs:72:42: 72:62 (#0) }], src/main.rs:72:35: 72:63 (#0)))
  Method call: typeck with 1 arguments
  Receiver type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
  Method: rustc_middle::query::<impl rustc_middle::ty::TyCtxt<'tcx>>::typeck
  Method type: FnDef(DefId(155:37561 ~ rustc_middle[ca3f]::query::{impl#3}::typeck), [ReEarlyBound(DefId(155:37452 ~ rustc_middle[ca3f]::query::{impl#3}::'tcx), 0, 'tcx), impl IntoQueryParam<LocalDefId>/#1])
  Expression type: &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).176), kind: Path(Resolved(None, Path { span: src/main.rs:72:26: 72:30 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).177), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:72:26: 72:30 (#0) }, tcx#0))
  Expression type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:72:26: 72:30 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).177), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })))
  Expression type: &ReErased mut Adt(PrintVisitor, [ReErased])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).179), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).180), kind: Path(Resolved(None, Path { span: src/main.rs:72:42: 72:46 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).181), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:72:42: 72:46 (#0) }, owner_id#0), span: src/main.rs:72:42: 72:55 (#0) }, def_id#0))
  Expression type: Adt(rustc_span::def_id::LocalDefId, [])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).180), kind: Path(Resolved(None, Path { span: src/main.rs:72:42: 72:46 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).181), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:72:42: 72:46 (#0) }, owner_id#0))
  Expression type: Adt(rustc_hir::OwnerId, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:72:42: 72:46 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).181), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_hir::Item, [ReErased])
Expression (kind: Match(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).185), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).186), kind: Path(Resolved(None, Path { span: src/main.rs:75:19: 75:43 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).187), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).188), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).189), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })), span: src/main.rs:75:19: 75:43 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).190), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).191), kind: Path(Resolved(None, Path { span: src/main.rs:75:44: 75:72 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).192), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).193), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).194), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:75:44: 75:72 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).195), kind: Closure(Closure { def_id: DefId(0:32 ~ main[cc0f]::{impl#1}::visit_item::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:75:76: 75:76 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).196) }, fn_decl_span: src/main.rs:75:73: 75:75 (#0), fn_arg_span: Some(src/main.rs:75:73: 75:75 (#0)), movability: None }), span: src/main.rs:75:73: 77:14 (#0) }]), span: src/main.rs:75:44: 77:15 (#0) }]), span: src/main.rs:75:19: 77:16 (#0) }, [Arm { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).209), span: src/main.rs:78:17: 78:64 (#0), pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).208), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:78:17: 78:19 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), segments: [PathSegment { ident: Ok#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).206), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207), ty#0, None), span: src/main.rs:78:20: 78:22 (#0), default_binding_modes: true }], None), span: src/main.rs:78:17: 78:23 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).210), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).233), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).211), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).212), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#48), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).213), res: Err, args: None, infer_args: true }, PathSegment { ident: io#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).214), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).215), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#48) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).216), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).232), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).230), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }, PathSegment { ident: new_v1#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).231), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).219), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).217), kind: Lit(Spanned { node: Str("    Return type: ", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).218), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }]), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).229), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).228), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).227), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).226), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).224), kind: Path(LangItem(FormatArgument, src/main.rs:78:54: 78:58 (#49), None)), span: src/main.rs:78:54: 78:58 (#49) }, PathSegment { ident: new_debug#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).225), res: Err, args: None, infer_args: true })), span: src/main.rs:78:54: 78:58 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).223), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).221), kind: Path(Resolved(None, Path { span: src/main.rs:78:61: 78:63 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), segments: [PathSegment { ident: ty#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).222), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), args: None, infer_args: true }] })), span: src/main.rs:78:61: 78:63 (#0) }), span: src/main.rs:78:61: 78:63 (#49) }]), span: src/main.rs:78:54: 78:58 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#48) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#48) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).234), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#48), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#48) } }, Arm { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).238), span: src/main.rs:79:17: 79:83 (#0), pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).237), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:79:17: 79:20 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), segments: [PathSegment { ident: Err#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).235), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).236), kind: Wild, span: src/main.rs:79:21: 79:22 (#0), default_binding_modes: true }], None), span: src/main.rs:79:17: 79:23 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).239), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).252), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).240), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).241), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#50), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).242), res: Err, args: None, infer_args: true }, PathSegment { ident: io#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).243), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).244), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#50) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).245), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).251), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).249), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }, PathSegment { ident: new_const#51, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).250), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).248), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).247), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).246), kind: Lit(Spanned { node: Str("    Return type: <unavailable for this item>\n", Cooked), span: src/main.rs:79:36: 79:82 (#0) }), span: src/main.rs:79:36: 79:82 (#0) }]), span: src/main.rs:79:36: 79:82 (#0) }), span: src/main.rs:79:36: 79:82 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#50) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#50) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).253), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#50), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#50) } }], Normal))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).186), kind: Path(Resolved(None, Path { span: src/main.rs:75:19: 75:43 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).187), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).188), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).189), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })), span: src/main.rs:75:19: 75:43 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).190), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).191), kind: Path(Resolved(None, Path { span: src/main.rs:75:44: 75:72 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).192), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).193), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).194), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:75:44: 75:72 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).195), kind: Closure(Closure { def_id: DefId(0:32 ~ main[cc0f]::{impl#1}::visit_item::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:75:76: 75:76 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).196) }, fn_decl_span: src/main.rs:75:73: 75:75 (#0), fn_arg_span: Some(src/main.rs:75:73: 75:75 (#0)), movability: None }), span: src/main.rs:75:73: 77:14 (#0) }]), span: src/main.rs:75:44: 77:15 (#0) }]))
  Function call with 1 arguments
  Expression type: Adt(std::result::Result, [Adt(rustc_middle::ty::Ty, [ReErased]), Adt(std::boxed::Box, [dyn [Binder(Trait(std::any::Any), []), Binder(AutoTrait(DefId(2:2765 ~ core[ae61]::marker::Send)), [])] + ReErased, Adt(std::alloc::Global, [])])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:75:19: 75:43 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).187), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).188), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).189), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:4782 ~ std[3ef1]::panic::catch_unwind), [Adt(std::panic::AssertUnwindSafe, [Closure(DefId(0:32 ~ main[cc0f]::{impl#1}::visit_item::{closure#0}), [ReErased, i8, Binder(extern "RustCall" fn(()) -> Adt(rustc_middle::ty::Ty, [ReErased]), []), (&ReErased &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])&ReErased &ReErased Adt(rustc_hir::Item, [ReErased])))])]), Adt(rustc_middle::ty::Ty, [ReErased])])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).191), kind: Path(Resolved(None, Path { span: src/main.rs:75:44: 75:72 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).192), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).193), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).194), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:75:44: 75:72 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).195), kind: Closure(Closure { def_id: DefId(0:32 ~ main[cc0f]::{impl#1}::visit_item::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:75:76: 75:76 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).196) }, fn_decl_span: src/main.rs:75:73: 75:75 (#0), fn_arg_span: Some(src/main.rs:75:73: 75:75 (#0)), movability: None }), span: src/main.rs:75:73: 77:14 (#0) }]))
  Function call with 1 arguments
  Expression type: Adt(std::panic::AssertUnwindSafe, [Closure(DefId(0:32 ~ main[cc0f]::{impl#1}::visit_item::{closure#0}), [ReErased, i8, Binder(extern "RustCall" fn(()) -> Adt(rustc_middle::ty::Ty, [ReErased]), []), (&ReErased &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])&ReErased &ReErased Adt(rustc_hir::Item, [ReErased])))])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:75:44: 75:72 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).192), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).193), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).194), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0}), [Closure(DefId(0:32 ~ main[cc0f]::{impl#1}::visit_item::{closure#0}), [ReErased, i8, Binder(extern "RustCall" fn(()) -> Adt(rustc_middle::ty::Ty, [ReErased]), []), (&ReErased &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])&ReErased &ReErased Adt(rustc_hir::Item, [ReErased])))])])
Expression (kind: Closure(Closure { def_id: DefId(0:32 ~ main[cc0f]::{impl#1}::visit_item::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:75:76: 75:76 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).196) }, fn_decl_span: src/main.rs:75:73: 75:75 (#0), fn_arg_span: Some(src/main.rs:75:73: 75:75 (#0)), movability: None }))
  Expression type: Closure(DefId(0:32 ~ main[cc0f]::{impl#1}::visit_item::{closure#0}), [ReErased, i8, Binder(extern "RustCall" fn(()) -> Adt(rustc_middle::ty::Ty, [ReErased]), []), (&ReErased &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])&ReErased &ReErased Adt(rustc_hir::Item, [ReErased])))])
Expression (kind: Block(Block { stmts: [], expr: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).197), kind: MethodCall(PathSegment { ident: node_type#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).198), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).199), kind: Path(Resolved(None, Path { span: src/main.rs:76:17: 76:23 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).183)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).200), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).183)), args: None, infer_args: true }] })), span: src/main.rs:76:17: 76:23 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).201), kind: MethodCall(PathSegment { ident: hir_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).202), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).203), kind: Path(Resolved(None, Path { span: src/main.rs:76:34: 76:38 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).204), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:76:34: 76:38 (#0) }, [], src/main.rs:76:39: 76:47 (#0)), span: src/main.rs:76:34: 76:47 (#0) }], src/main.rs:76:24: 76:48 (#0)), span: src/main.rs:76:17: 76:48 (#0) }), hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).205), rules: DefaultBlock, span: src/main.rs:75:76: 77:14 (#0), targeted_by_break: false }, None))
  Expression type: Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: MethodCall(PathSegment { ident: node_type#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).198), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).199), kind: Path(Resolved(None, Path { span: src/main.rs:76:17: 76:23 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).183)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).200), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).183)), args: None, infer_args: true }] })), span: src/main.rs:76:17: 76:23 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).201), kind: MethodCall(PathSegment { ident: hir_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).202), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).203), kind: Path(Resolved(None, Path { span: src/main.rs:76:34: 76:38 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).204), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:76:34: 76:38 (#0) }, [], src/main.rs:76:39: 76:47 (#0)), span: src/main.rs:76:34: 76:47 (#0) }], src/main.rs:76:24: 76:48 (#0)))
  Method call: node_type with 1 arguments
  Receiver type: &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])
  Method: rustc_middle::ty::TypeckResults::<'tcx>::node_type
  Method type: FnDef(DefId(155:8575 ~ rustc_middle[ca3f]::ty::typeck_results::{impl#0}::node_type), [ReEarlyBound(DefId(155:8554 ~ rustc_middle[ca3f]::ty::typeck_results::{impl#0}::'tcx), 0, 'tcx)])
  Expression type: Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:76:17: 76:23 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).183)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).200), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).183)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])
Expression (kind: MethodCall(PathSegment { ident: hir_id#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).202), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).203), kind: Path(Resolved(None, Path { span: src/main.rs:76:34: 76:38 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).204), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:76:34: 76:38 (#0) }, [], src/main.rs:76:39: 76:47 (#0)))
  Method call: hir_id with 0 arguments
  Receiver type: &ReErased Adt(rustc_hir::Item, [ReErased])
  Method: rustc_hir::Item::<'hir>::hir_id
  Method type: FnDef(DefId(120:558 ~ rustc_hir[6705]::hir::{impl#64}::hir_id), [ReEarlyBound(DefId(120:557 ~ rustc_hir[6705]::hir::{impl#64}::'hir), 0, 'hir)])
  Expression type: Adt(rustc_hir::HirId, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:76:34: 76:38 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).204), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_hir::Item, [ReErased])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).233), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).211), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).212), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#48), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).213), res: Err, args: None, infer_args: true }, PathSegment { ident: io#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).214), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).215), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#48) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).216), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).232), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).230), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }, PathSegment { ident: new_v1#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).231), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).219), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).217), kind: Lit(Spanned { node: Str("    Return type: ", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).218), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }]), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).229), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).228), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).227), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).226), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).224), kind: Path(LangItem(FormatArgument, src/main.rs:78:54: 78:58 (#49), None)), span: src/main.rs:78:54: 78:58 (#49) }, PathSegment { ident: new_debug#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).225), res: Err, args: None, infer_args: true })), span: src/main.rs:78:54: 78:58 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).223), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).221), kind: Path(Resolved(None, Path { span: src/main.rs:78:61: 78:63 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), segments: [PathSegment { ident: ty#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).222), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), args: None, infer_args: true }] })), span: src/main.rs:78:61: 78:63 (#0) }), span: src/main.rs:78:61: 78:63 (#49) }]), span: src/main.rs:78:54: 78:58 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#48) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#48) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).234), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#48), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).212), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#48), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).213), res: Err, args: None, infer_args: true }, PathSegment { ident: io#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).214), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).215), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#48) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).216), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).232), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).230), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }, PathSegment { ident: new_v1#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).231), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).219), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).217), kind: Lit(Spanned { node: Str("    Return type: ", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).218), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }]), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).229), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).228), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).227), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).226), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).224), kind: Path(LangItem(FormatArgument, src/main.rs:78:54: 78:58 (#49), None)), span: src/main.rs:78:54: 78:58 (#49) }, PathSegment { ident: new_debug#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).225), res: Err, args: None, infer_args: true })), span: src/main.rs:78:54: 78:58 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).223), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).221), kind: Path(Resolved(None, Path { span: src/main.rs:78:61: 78:63 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), segments: [PathSegment { ident: ty#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).222), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), args: None, infer_args: true }] })), span: src/main.rs:78:61: 78:63 (#0) }), span: src/main.rs:78:61: 78:63 (#49) }]), span: src/main.rs:78:54: 78:58 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#48), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).213), res: Err, args: None, infer_args: true }, PathSegment { ident: io#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).214), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#48, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).215), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).232), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).230), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }, PathSegment { ident: new_v1#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).231), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).219), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).217), kind: Lit(Spanned { node: Str("    Return type: ", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).218), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }]), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).229), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).228), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).227), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).226), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).224), kind: Path(LangItem(FormatArgument, src/main.rs:78:54: 78:58 (#49), None)), span: src/main.rs:78:54: 78:58 (#49) }, PathSegment { ident: new_debug#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).225), res: Err, args: None, infer_args: true })), span: src/main.rs:78:54: 78:58 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).223), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).221), kind: Path(Resolved(None, Path { span: src/main.rs:78:61: 78:63 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), segments: [PathSegment { ident: ty#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).222), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), args: None, infer_args: true }] })), span: src/main.rs:78:61: 78:63 (#0) }), span: src/main.rs:78:61: 78:63 (#49) }]), span: src/main.rs:78:54: 78:58 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).230), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }, PathSegment { ident: new_v1#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).231), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).219), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).217), kind: Lit(Spanned { node: Str("    Return type: ", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).218), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }]), span: src/main.rs:78:36: 78:59 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).217), kind: Lit(Spanned { node: Str("    Return type: ", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).218), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:78:36: 78:59 (#0) }), span: src/main.rs:78:36: 78:59 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Lit(Spanned { node: Str("    Return type: ", Cooked), span: src/main.rs:78:36: 78:59 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:78:36: 78:59 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).228), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).227), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).226), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).224), kind: Path(LangItem(FormatArgument, src/main.rs:78:54: 78:58 (#49), None)), span: src/main.rs:78:54: 78:58 (#49) }, PathSegment { ident: new_debug#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).225), res: Err, args: None, infer_args: true })), span: src/main.rs:78:54: 78:58 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).223), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).221), kind: Path(Resolved(None, Path { span: src/main.rs:78:61: 78:63 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), segments: [PathSegment { ident: ty#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).222), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), args: None, infer_args: true }] })), span: src/main.rs:78:61: 78:63 (#0) }), span: src/main.rs:78:61: 78:63 (#49) }]), span: src/main.rs:78:54: 78:58 (#49) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#49) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).227), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).226), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).224), kind: Path(LangItem(FormatArgument, src/main.rs:78:54: 78:58 (#49), None)), span: src/main.rs:78:54: 78:58 (#49) }, PathSegment { ident: new_debug#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).225), res: Err, args: None, infer_args: true })), span: src/main.rs:78:54: 78:58 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).223), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).221), kind: Path(Resolved(None, Path { span: src/main.rs:78:61: 78:63 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), segments: [PathSegment { ident: ty#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).222), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), args: None, infer_args: true }] })), span: src/main.rs:78:61: 78:63 (#0) }), span: src/main.rs:78:61: 78:63 (#49) }]), span: src/main.rs:78:54: 78:58 (#49) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).226), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).224), kind: Path(LangItem(FormatArgument, src/main.rs:78:54: 78:58 (#49), None)), span: src/main.rs:78:54: 78:58 (#49) }, PathSegment { ident: new_debug#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).225), res: Err, args: None, infer_args: true })), span: src/main.rs:78:54: 78:58 (#49) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).223), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).221), kind: Path(Resolved(None, Path { span: src/main.rs:78:61: 78:63 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), segments: [PathSegment { ident: ty#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).222), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), args: None, infer_args: true }] })), span: src/main.rs:78:61: 78:63 (#0) }), span: src/main.rs:78:61: 78:63 (#49) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_debug
  Function type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).224), kind: Path(LangItem(FormatArgument, src/main.rs:78:54: 78:58 (#49), None)), span: src/main.rs:78:54: 78:58 (#49) }, PathSegment { ident: new_debug#49, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).225), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReErased, Adt(rustc_middle::ty::Ty, [ReErased])])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).221), kind: Path(Resolved(None, Path { span: src/main.rs:78:61: 78:63 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), segments: [PathSegment { ident: ty#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).222), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), args: None, infer_args: true }] })), span: src/main.rs:78:61: 78:63 (#0) }))
  Expression type: &ReErased Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:78:61: 78:63 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), segments: [PathSegment { ident: ty#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).222), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).207)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).252), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).240), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).241), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#50), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).242), res: Err, args: None, infer_args: true }, PathSegment { ident: io#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).243), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).244), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#50) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).245), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).251), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).249), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }, PathSegment { ident: new_const#51, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).250), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).248), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).247), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).246), kind: Lit(Spanned { node: Str("    Return type: <unavailable for this item>\n", Cooked), span: src/main.rs:79:36: 79:82 (#0) }), span: src/main.rs:79:36: 79:82 (#0) }]), span: src/main.rs:79:36: 79:82 (#0) }), span: src/main.rs:79:36: 79:82 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#50) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#50) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).253), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#50), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).241), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#50), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).242), res: Err, args: None, infer_args: true }, PathSegment { ident: io#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).243), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).244), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#50) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).245), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).251), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).249), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }, PathSegment { ident: new_const#51, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).250), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).248), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).247), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).246), kind: Lit(Spanned { node: Str("    Return type: <unavailable for this item>\n", Cooked), span: src/main.rs:79:36: 79:82 (#0) }), span: src/main.rs:79:36: 79:82 (#0) }]), span: src/main.rs:79:36: 79:82 (#0) }), span: src/main.rs:79:36: 79:82 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#50), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).242), res: Err, args: None, infer_args: true }, PathSegment { ident: io#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).243), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#50, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).244), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).251), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).249), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }, PathSegment { ident: new_const#51, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).250), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).248), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).247), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).246), kind: Lit(Spanned { node: Str("    Return type: <unavailable for this item>\n", Cooked), span: src/main.rs:79:36: 79:82 (#0) }), span: src/main.rs:79:36: 79:82 (#0) }]), span: src/main.rs:79:36: 79:82 (#0) }), span: src/main.rs:79:36: 79:82 (#0) }]))
  Function call with 1 arguments
  Called function: std::fmt::Arguments::<'a>::new_const
  Function type: FnDef(DefId(2:9415 ~ core[ae61]::fmt::{impl#2}::new_const), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).249), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#51) }, PathSegment { ident: new_const#51, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).250), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9415 ~ core[ae61]::fmt::{impl#2}::new_const), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).247), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).246), kind: Lit(Spanned { node: Str("    Return type: <unavailable for this item>\n", Cooked), span: src/main.rs:79:36: 79:82 (#0) }), span: src/main.rs:79:36: 79:82 (#0) }]), span: src/main.rs:79:36: 79:82 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).246), kind: Lit(Spanned { node: Str("    Return type: <unavailable for this item>\n", Cooked), span: src/main.rs:79:36: 79:82 (#0) }), span: src/main.rs:79:36: 79:82 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Lit(Spanned { node: Str("    Return type: <unavailable for this item>\n", Cooked), span: src/main.rs:79:36: 79:82 (#0) }))
  Expression type: &ReErased str
Expression (kind: MethodCall(PathSegment { ident: source_map#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).259), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).260), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).261), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).262), kind: Path(Resolved(None, Path { span: src/main.rs:84:26: 84:30 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).263), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:84:26: 84:30 (#0) }, tcx#0), span: src/main.rs:84:26: 84:34 (#0) }, sess#0), span: src/main.rs:84:26: 84:39 (#0) }, [], src/main.rs:84:40: 84:52 (#0)))
  Method call: source_map with 0 arguments
  Receiver type: &ReErased Adt(rustc_session::session::Session, [])
  Method: rustc_session::session::Session::source_map
  Method type: FnDef(DefId(157:1272 ~ rustc_session[3dda]::session::{impl#7}::source_map), [])
  Expression type: &ReErased Adt(rustc_span::source_map::SourceMap, [])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).261), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).262), kind: Path(Resolved(None, Path { span: src/main.rs:84:26: 84:30 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).263), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:84:26: 84:30 (#0) }, tcx#0), span: src/main.rs:84:26: 84:34 (#0) }, sess#0))
  Expression type: &ReErased Adt(rustc_session::session::Session, [])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).262), kind: Path(Resolved(None, Path { span: src/main.rs:84:26: 84:30 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).263), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:84:26: 84:30 (#0) }, tcx#0))
  Expression type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:84:26: 84:30 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).263), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })))
  Expression type: &ReErased mut Adt(PrintVisitor, [ReErased])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).268), kind: Path(Resolved(None, Path { span: src/main.rs:85:20: 85:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).269), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:85:20: 85:24 (#0) }, span#0))
  Expression type: Adt(rustc_span::Span, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:85:20: 85:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).269), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_hir::Item, [ReErased])
Expression (kind: If(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).278), kind: DropTemps(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).273), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).274), kind: MethodCall(PathSegment { ident: is_dummy#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).275), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).276), kind: Path(Resolved(None, Path { span: src/main.rs:86:13: 86:17 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).277), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })), span: src/main.rs:86:13: 86:17 (#0) }, [], src/main.rs:86:18: 86:28 (#0)), span: src/main.rs:86:13: 86:28 (#0) }), span: src/main.rs:86:12: 86:28 (#0) }), span: src/main.rs:86:12: 86:28 (#238) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).370), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).279), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289), loc#0, None), span: src/main.rs:87:17: 87:20 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).280), kind: MethodCall(PathSegment { ident: lookup_char_pos#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).281), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).282), kind: Path(Resolved(None, Path { span: src/main.rs:87:23: 87:33 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), segments: [PathSegment { ident: source_map#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).283), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), args: None, infer_args: true }] })), span: src/main.rs:87:23: 87:33 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).284), kind: MethodCall(PathSegment { ident: lo#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).285), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).286), kind: Path(Resolved(None, Path { span: src/main.rs:87:50: 87:54 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).287), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })), span: src/main.rs:87:50: 87:54 (#0) }, [], src/main.rs:87:55: 87:59 (#0)), span: src/main.rs:87:50: 87:59 (#0) }], src/main.rs:87:34: 87:60 (#0)), span: src/main.rs:87:23: 87:60 (#0) }), els: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).288), span: src/main.rs:87:13: 87:61 (#0), source: Normal }), span: src/main.rs:87:13: 87:61 (#0) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).290), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300), end_loc#0, None), span: src/main.rs:88:17: 88:24 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).291), kind: MethodCall(PathSegment { ident: lookup_char_pos#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).292), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).293), kind: Path(Resolved(None, Path { span: src/main.rs:88:27: 88:37 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), segments: [PathSegment { ident: source_map#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).294), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), args: None, infer_args: true }] })), span: src/main.rs:88:27: 88:37 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).295), kind: MethodCall(PathSegment { ident: hi#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).296), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).297), kind: Path(Resolved(None, Path { span: src/main.rs:88:54: 88:58 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).298), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })), span: src/main.rs:88:54: 88:58 (#0) }, [], src/main.rs:88:59: 88:63 (#0)), span: src/main.rs:88:54: 88:63 (#0) }], src/main.rs:88:38: 88:64 (#0)), span: src/main.rs:88:27: 88:64 (#0) }), els: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).299), span: src/main.rs:88:13: 88:65 (#0), source: Normal }), span: src/main.rs:88:13: 88:65 (#0) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).368), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).301), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).366), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).302), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).303), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#52), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).304), res: Err, args: None, infer_args: true }, PathSegment { ident: io#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).305), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).306), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#52) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).307), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).365), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).363), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }, PathSegment { ident: new_v1#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).364), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).315), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).314), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).308), kind: Lit(Spanned { node: Str("  Location: ", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).309), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).310), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).311), kind: Lit(Spanned { node: Str("-", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).312), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).313), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }]), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).362), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).361), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).324), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).321), kind: Path(LangItem(FormatArgument, src/main.rs:90:30: 90:34 (#53), None)), span: src/main.rs:90:30: 90:34 (#53) }, PathSegment { ident: new_debug#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).322), res: Err, args: None, infer_args: true })), span: src/main.rs:90:30: 90:34 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).316), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).317), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).318), kind: Path(Resolved(None, Path { span: src/main.rs:91:17: 91:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).319), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:91:17: 91:20 (#0) }, file#0), span: src/main.rs:91:17: 91:25 (#0) }, name#0), span: src/main.rs:91:17: 91:30 (#0) }), span: src/main.rs:91:17: 91:30 (#53) }]), span: src/main.rs:90:30: 90:34 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).332), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).331), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).329), kind: Path(LangItem(FormatArgument, src/main.rs:90:35: 90:37 (#53), None)), span: src/main.rs:90:35: 90:37 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).330), res: Err, args: None, infer_args: true })), span: src/main.rs:90:35: 90:37 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).328), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).325), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).326), kind: Path(Resolved(None, Path { span: src/main.rs:92:17: 92:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).327), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:92:17: 92:20 (#0) }, line#0), span: src/main.rs:92:17: 92:25 (#0) }), span: src/main.rs:92:17: 92:25 (#53) }]), span: src/main.rs:90:35: 90:37 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).342), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).341), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).339), kind: Path(LangItem(FormatArgument, src/main.rs:90:38: 90:40 (#53), None)), span: src/main.rs:90:38: 90:40 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).340), res: Err, args: None, infer_args: true })), span: src/main.rs:90:38: 90:40 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).338), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).333), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).334), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).335), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).336), kind: Path(Resolved(None, Path { span: src/main.rs:93:17: 93:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).337), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:93:17: 93:20 (#0) }, col#0), span: src/main.rs:93:17: 93:24 (#0) }, [], src/main.rs:93:25: 93:35 (#0)), span: src/main.rs:93:17: 93:35 (#0) }), span: src/main.rs:93:17: 93:35 (#53) }]), span: src/main.rs:90:38: 90:40 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).350), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).349), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).347), kind: Path(LangItem(FormatArgument, src/main.rs:90:41: 90:43 (#53), None)), span: src/main.rs:90:41: 90:43 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).348), res: Err, args: None, infer_args: true })), span: src/main.rs:90:41: 90:43 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).346), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).343), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).344), kind: Path(Resolved(None, Path { span: src/main.rs:94:17: 94:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).345), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:94:17: 94:24 (#0) }, line#0), span: src/main.rs:94:17: 94:29 (#0) }), span: src/main.rs:94:17: 94:29 (#53) }]), span: src/main.rs:90:41: 90:43 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).360), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).359), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).357), kind: Path(LangItem(FormatArgument, src/main.rs:90:44: 90:46 (#53), None)), span: src/main.rs:90:44: 90:46 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).358), res: Err, args: None, infer_args: true })), span: src/main.rs:90:44: 90:46 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).356), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).351), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).352), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).353), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).354), kind: Path(Resolved(None, Path { span: src/main.rs:95:17: 95:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).355), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:95:17: 95:24 (#0) }, col#0), span: src/main.rs:95:17: 95:28 (#0) }, [], src/main.rs:95:29: 95:39 (#0)), span: src/main.rs:95:17: 95:39 (#0) }), span: src/main.rs:95:17: 95:39 (#53) }]), span: src/main.rs:90:44: 90:46 (#53) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#52) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#52) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).367), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#52), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#52) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#52) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).369), rules: DefaultBlock, span: src/main.rs:86:29: 97:10 (#0), targeted_by_break: false }, None), span: src/main.rs:86:29: 97:10 (#0) }, None))
  Expression type: ()
Expression (kind: DropTemps(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).273), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).274), kind: MethodCall(PathSegment { ident: is_dummy#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).275), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).276), kind: Path(Resolved(None, Path { span: src/main.rs:86:13: 86:17 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).277), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })), span: src/main.rs:86:13: 86:17 (#0) }, [], src/main.rs:86:18: 86:28 (#0)), span: src/main.rs:86:13: 86:28 (#0) }), span: src/main.rs:86:12: 86:28 (#0) }))
  Expression type: bool
Expression (kind: Unary(Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).274), kind: MethodCall(PathSegment { ident: is_dummy#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).275), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).276), kind: Path(Resolved(None, Path { span: src/main.rs:86:13: 86:17 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).277), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })), span: src/main.rs:86:13: 86:17 (#0) }, [], src/main.rs:86:18: 86:28 (#0)), span: src/main.rs:86:13: 86:28 (#0) }))
  Expression type: bool
Expression (kind: MethodCall(PathSegment { ident: is_dummy#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).275), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).276), kind: Path(Resolved(None, Path { span: src/main.rs:86:13: 86:17 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).277), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })), span: src/main.rs:86:13: 86:17 (#0) }, [], src/main.rs:86:18: 86:28 (#0)))
  Method call: is_dummy with 0 arguments
  Receiver type: Adt(rustc_span::Span, [])
  Method: rustc_span::Span::is_dummy
  Method type: FnDef(DefId(33:659 ~ rustc_span[03d2]::span_encoding::{impl#0}::is_dummy), [])
  Expression type: bool
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:86:13: 86:17 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).277), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::Span, [])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).279), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289), loc#0, None), span: src/main.rs:87:17: 87:20 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).280), kind: MethodCall(PathSegment { ident: lookup_char_pos#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).281), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).282), kind: Path(Resolved(None, Path { span: src/main.rs:87:23: 87:33 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), segments: [PathSegment { ident: source_map#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).283), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), args: None, infer_args: true }] })), span: src/main.rs:87:23: 87:33 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).284), kind: MethodCall(PathSegment { ident: lo#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).285), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).286), kind: Path(Resolved(None, Path { span: src/main.rs:87:50: 87:54 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).287), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })), span: src/main.rs:87:50: 87:54 (#0) }, [], src/main.rs:87:55: 87:59 (#0)), span: src/main.rs:87:50: 87:59 (#0) }], src/main.rs:87:34: 87:60 (#0)), span: src/main.rs:87:23: 87:60 (#0) }), els: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).288), span: src/main.rs:87:13: 87:61 (#0), source: Normal }), span: src/main.rs:87:13: 87:61 (#0) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).290), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300), end_loc#0, None), span: src/main.rs:88:17: 88:24 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).291), kind: MethodCall(PathSegment { ident: lookup_char_pos#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).292), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).293), kind: Path(Resolved(None, Path { span: src/main.rs:88:27: 88:37 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), segments: [PathSegment { ident: source_map#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).294), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), args: None, infer_args: true }] })), span: src/main.rs:88:27: 88:37 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).295), kind: MethodCall(PathSegment { ident: hi#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).296), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).297), kind: Path(Resolved(None, Path { span: src/main.rs:88:54: 88:58 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).298), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })), span: src/main.rs:88:54: 88:58 (#0) }, [], src/main.rs:88:59: 88:63 (#0)), span: src/main.rs:88:54: 88:63 (#0) }], src/main.rs:88:38: 88:64 (#0)), span: src/main.rs:88:27: 88:64 (#0) }), els: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).299), span: src/main.rs:88:13: 88:65 (#0), source: Normal }), span: src/main.rs:88:13: 88:65 (#0) }, Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).368), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).301), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).366), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).302), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).303), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#52), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).304), res: Err, args: None, infer_args: true }, PathSegment { ident: io#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).305), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).306), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#52) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).307), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).365), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).363), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }, PathSegment { ident: new_v1#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).364), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).315), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).314), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).308), kind: Lit(Spanned { node: Str("  Location: ", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).309), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).310), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).311), kind: Lit(Spanned { node: Str("-", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).312), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).313), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }]), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).362), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).361), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).324), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).321), kind: Path(LangItem(FormatArgument, src/main.rs:90:30: 90:34 (#53), None)), span: src/main.rs:90:30: 90:34 (#53) }, PathSegment { ident: new_debug#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).322), res: Err, args: None, infer_args: true })), span: src/main.rs:90:30: 90:34 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).316), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).317), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).318), kind: Path(Resolved(None, Path { span: src/main.rs:91:17: 91:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).319), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:91:17: 91:20 (#0) }, file#0), span: src/main.rs:91:17: 91:25 (#0) }, name#0), span: src/main.rs:91:17: 91:30 (#0) }), span: src/main.rs:91:17: 91:30 (#53) }]), span: src/main.rs:90:30: 90:34 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).332), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).331), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).329), kind: Path(LangItem(FormatArgument, src/main.rs:90:35: 90:37 (#53), None)), span: src/main.rs:90:35: 90:37 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).330), res: Err, args: None, infer_args: true })), span: src/main.rs:90:35: 90:37 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).328), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).325), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).326), kind: Path(Resolved(None, Path { span: src/main.rs:92:17: 92:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).327), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:92:17: 92:20 (#0) }, line#0), span: src/main.rs:92:17: 92:25 (#0) }), span: src/main.rs:92:17: 92:25 (#53) }]), span: src/main.rs:90:35: 90:37 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).342), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).341), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).339), kind: Path(LangItem(FormatArgument, src/main.rs:90:38: 90:40 (#53), None)), span: src/main.rs:90:38: 90:40 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).340), res: Err, args: None, infer_args: true })), span: src/main.rs:90:38: 90:40 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).338), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).333), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).334), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).335), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).336), kind: Path(Resolved(None, Path { span: src/main.rs:93:17: 93:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).337), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:93:17: 93:20 (#0) }, col#0), span: src/main.rs:93:17: 93:24 (#0) }, [], src/main.rs:93:25: 93:35 (#0)), span: src/main.rs:93:17: 93:35 (#0) }), span: src/main.rs:93:17: 93:35 (#53) }]), span: src/main.rs:90:38: 90:40 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).350), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).349), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).347), kind: Path(LangItem(FormatArgument, src/main.rs:90:41: 90:43 (#53), None)), span: src/main.rs:90:41: 90:43 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).348), res: Err, args: None, infer_args: true })), span: src/main.rs:90:41: 90:43 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).346), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).343), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).344), kind: Path(Resolved(None, Path { span: src/main.rs:94:17: 94:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).345), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:94:17: 94:24 (#0) }, line#0), span: src/main.rs:94:17: 94:29 (#0) }), span: src/main.rs:94:17: 94:29 (#53) }]), span: src/main.rs:90:41: 90:43 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).360), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).359), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).357), kind: Path(LangItem(FormatArgument, src/main.rs:90:44: 90:46 (#53), None)), span: src/main.rs:90:44: 90:46 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).358), res: Err, args: None, infer_args: true })), span: src/main.rs:90:44: 90:46 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).356), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).351), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).352), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).353), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).354), kind: Path(Resolved(None, Path { span: src/main.rs:95:17: 95:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).355), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:95:17: 95:24 (#0) }, col#0), span: src/main.rs:95:17: 95:28 (#0) }, [], src/main.rs:95:29: 95:39 (#0)), span: src/main.rs:95:17: 95:39 (#0) }), span: src/main.rs:95:17: 95:39 (#53) }]), span: src/main.rs:90:44: 90:46 (#53) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#52) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#52) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).367), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#52), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#52) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#52) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).369), rules: DefaultBlock, span: src/main.rs:86:29: 97:10 (#0), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: MethodCall(PathSegment { ident: lookup_char_pos#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).281), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).282), kind: Path(Resolved(None, Path { span: src/main.rs:87:23: 87:33 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), segments: [PathSegment { ident: source_map#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).283), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), args: None, infer_args: true }] })), span: src/main.rs:87:23: 87:33 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).284), kind: MethodCall(PathSegment { ident: lo#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).285), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).286), kind: Path(Resolved(None, Path { span: src/main.rs:87:50: 87:54 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).287), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })), span: src/main.rs:87:50: 87:54 (#0) }, [], src/main.rs:87:55: 87:59 (#0)), span: src/main.rs:87:50: 87:59 (#0) }], src/main.rs:87:34: 87:60 (#0)))
  Method call: lookup_char_pos with 1 arguments
  Receiver type: &ReErased Adt(rustc_span::source_map::SourceMap, [])
  Method: rustc_span::source_map::SourceMap::lookup_char_pos
  Method type: FnDef(DefId(33:124 ~ rustc_span[03d2]::source_map::{impl#2}::lookup_char_pos), [])
  Expression type: Adt(rustc_span::Loc, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:87:23: 87:33 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), segments: [PathSegment { ident: source_map#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).283), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_span::source_map::SourceMap, [])
Expression (kind: MethodCall(PathSegment { ident: lo#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).285), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).286), kind: Path(Resolved(None, Path { span: src/main.rs:87:50: 87:54 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).287), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })), span: src/main.rs:87:50: 87:54 (#0) }, [], src/main.rs:87:55: 87:59 (#0)))
  Method call: lo with 0 arguments
  Receiver type: Adt(rustc_span::Span, [])
  Method: rustc_span::<impl rustc_span::Span>::lo
  Method type: FnDef(DefId(33:933 ~ rustc_span[03d2]::{impl#15}::lo), [])
  Expression type: Adt(rustc_span::BytePos, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:87:50: 87:54 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).287), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::Span, [])
Expression (kind: MethodCall(PathSegment { ident: lookup_char_pos#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).292), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).293), kind: Path(Resolved(None, Path { span: src/main.rs:88:27: 88:37 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), segments: [PathSegment { ident: source_map#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).294), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), args: None, infer_args: true }] })), span: src/main.rs:88:27: 88:37 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).295), kind: MethodCall(PathSegment { ident: hi#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).296), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).297), kind: Path(Resolved(None, Path { span: src/main.rs:88:54: 88:58 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).298), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })), span: src/main.rs:88:54: 88:58 (#0) }, [], src/main.rs:88:59: 88:63 (#0)), span: src/main.rs:88:54: 88:63 (#0) }], src/main.rs:88:38: 88:64 (#0)))
  Method call: lookup_char_pos with 1 arguments
  Receiver type: &ReErased Adt(rustc_span::source_map::SourceMap, [])
  Method: rustc_span::source_map::SourceMap::lookup_char_pos
  Method type: FnDef(DefId(33:124 ~ rustc_span[03d2]::source_map::{impl#2}::lookup_char_pos), [])
  Expression type: Adt(rustc_span::Loc, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:88:27: 88:37 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), segments: [PathSegment { ident: source_map#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).294), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).265)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_span::source_map::SourceMap, [])
Expression (kind: MethodCall(PathSegment { ident: hi#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).296), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).297), kind: Path(Resolved(None, Path { span: src/main.rs:88:54: 88:58 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).298), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })), span: src/main.rs:88:54: 88:58 (#0) }, [], src/main.rs:88:59: 88:63 (#0)))
  Method call: hi with 0 arguments
  Receiver type: Adt(rustc_span::Span, [])
  Method: rustc_span::<impl rustc_span::Span>::hi
  Method type: FnDef(DefId(33:935 ~ rustc_span[03d2]::{impl#15}::hi), [])
  Expression type: Adt(rustc_span::BytePos, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:88:54: 88:58 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), segments: [PathSegment { ident: span#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).298), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).271)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::Span, [])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).366), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).302), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).303), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#52), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).304), res: Err, args: None, infer_args: true }, PathSegment { ident: io#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).305), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).306), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#52) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).307), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).365), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).363), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }, PathSegment { ident: new_v1#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).364), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).315), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).314), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).308), kind: Lit(Spanned { node: Str("  Location: ", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).309), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).310), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).311), kind: Lit(Spanned { node: Str("-", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).312), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).313), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }]), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).362), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).361), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).324), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).321), kind: Path(LangItem(FormatArgument, src/main.rs:90:30: 90:34 (#53), None)), span: src/main.rs:90:30: 90:34 (#53) }, PathSegment { ident: new_debug#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).322), res: Err, args: None, infer_args: true })), span: src/main.rs:90:30: 90:34 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).316), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).317), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).318), kind: Path(Resolved(None, Path { span: src/main.rs:91:17: 91:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).319), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:91:17: 91:20 (#0) }, file#0), span: src/main.rs:91:17: 91:25 (#0) }, name#0), span: src/main.rs:91:17: 91:30 (#0) }), span: src/main.rs:91:17: 91:30 (#53) }]), span: src/main.rs:90:30: 90:34 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).332), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).331), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).329), kind: Path(LangItem(FormatArgument, src/main.rs:90:35: 90:37 (#53), None)), span: src/main.rs:90:35: 90:37 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).330), res: Err, args: None, infer_args: true })), span: src/main.rs:90:35: 90:37 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).328), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).325), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).326), kind: Path(Resolved(None, Path { span: src/main.rs:92:17: 92:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).327), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:92:17: 92:20 (#0) }, line#0), span: src/main.rs:92:17: 92:25 (#0) }), span: src/main.rs:92:17: 92:25 (#53) }]), span: src/main.rs:90:35: 90:37 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).342), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).341), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).339), kind: Path(LangItem(FormatArgument, src/main.rs:90:38: 90:40 (#53), None)), span: src/main.rs:90:38: 90:40 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).340), res: Err, args: None, infer_args: true })), span: src/main.rs:90:38: 90:40 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).338), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).333), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).334), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).335), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).336), kind: Path(Resolved(None, Path { span: src/main.rs:93:17: 93:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).337), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:93:17: 93:20 (#0) }, col#0), span: src/main.rs:93:17: 93:24 (#0) }, [], src/main.rs:93:25: 93:35 (#0)), span: src/main.rs:93:17: 93:35 (#0) }), span: src/main.rs:93:17: 93:35 (#53) }]), span: src/main.rs:90:38: 90:40 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).350), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).349), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).347), kind: Path(LangItem(FormatArgument, src/main.rs:90:41: 90:43 (#53), None)), span: src/main.rs:90:41: 90:43 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).348), res: Err, args: None, infer_args: true })), span: src/main.rs:90:41: 90:43 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).346), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).343), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).344), kind: Path(Resolved(None, Path { span: src/main.rs:94:17: 94:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).345), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:94:17: 94:24 (#0) }, line#0), span: src/main.rs:94:17: 94:29 (#0) }), span: src/main.rs:94:17: 94:29 (#53) }]), span: src/main.rs:90:41: 90:43 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).360), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).359), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).357), kind: Path(LangItem(FormatArgument, src/main.rs:90:44: 90:46 (#53), None)), span: src/main.rs:90:44: 90:46 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).358), res: Err, args: None, infer_args: true })), span: src/main.rs:90:44: 90:46 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).356), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).351), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).352), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).353), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).354), kind: Path(Resolved(None, Path { span: src/main.rs:95:17: 95:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).355), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:95:17: 95:24 (#0) }, col#0), span: src/main.rs:95:17: 95:28 (#0) }, [], src/main.rs:95:29: 95:39 (#0)), span: src/main.rs:95:17: 95:39 (#0) }), span: src/main.rs:95:17: 95:39 (#53) }]), span: src/main.rs:90:44: 90:46 (#53) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#52) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#52) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).367), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#52), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).303), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#52), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).304), res: Err, args: None, infer_args: true }, PathSegment { ident: io#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).305), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).306), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#52) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).307), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).365), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).363), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }, PathSegment { ident: new_v1#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).364), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).315), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).314), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).308), kind: Lit(Spanned { node: Str("  Location: ", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).309), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).310), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).311), kind: Lit(Spanned { node: Str("-", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).312), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).313), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }]), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).362), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).361), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).324), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).321), kind: Path(LangItem(FormatArgument, src/main.rs:90:30: 90:34 (#53), None)), span: src/main.rs:90:30: 90:34 (#53) }, PathSegment { ident: new_debug#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).322), res: Err, args: None, infer_args: true })), span: src/main.rs:90:30: 90:34 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).316), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).317), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).318), kind: Path(Resolved(None, Path { span: src/main.rs:91:17: 91:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).319), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:91:17: 91:20 (#0) }, file#0), span: src/main.rs:91:17: 91:25 (#0) }, name#0), span: src/main.rs:91:17: 91:30 (#0) }), span: src/main.rs:91:17: 91:30 (#53) }]), span: src/main.rs:90:30: 90:34 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).332), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).331), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).329), kind: Path(LangItem(FormatArgument, src/main.rs:90:35: 90:37 (#53), None)), span: src/main.rs:90:35: 90:37 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).330), res: Err, args: None, infer_args: true })), span: src/main.rs:90:35: 90:37 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).328), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).325), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).326), kind: Path(Resolved(None, Path { span: src/main.rs:92:17: 92:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).327), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:92:17: 92:20 (#0) }, line#0), span: src/main.rs:92:17: 92:25 (#0) }), span: src/main.rs:92:17: 92:25 (#53) }]), span: src/main.rs:90:35: 90:37 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).342), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).341), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).339), kind: Path(LangItem(FormatArgument, src/main.rs:90:38: 90:40 (#53), None)), span: src/main.rs:90:38: 90:40 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).340), res: Err, args: None, infer_args: true })), span: src/main.rs:90:38: 90:40 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).338), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).333), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).334), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).335), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).336), kind: Path(Resolved(None, Path { span: src/main.rs:93:17: 93:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).337), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:93:17: 93:20 (#0) }, col#0), span: src/main.rs:93:17: 93:24 (#0) }, [], src/main.rs:93:25: 93:35 (#0)), span: src/main.rs:93:17: 93:35 (#0) }), span: src/main.rs:93:17: 93:35 (#53) }]), span: src/main.rs:90:38: 90:40 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).350), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).349), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).347), kind: Path(LangItem(FormatArgument, src/main.rs:90:41: 90:43 (#53), None)), span: src/main.rs:90:41: 90:43 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).348), res: Err, args: None, infer_args: true })), span: src/main.rs:90:41: 90:43 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).346), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).343), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).344), kind: Path(Resolved(None, Path { span: src/main.rs:94:17: 94:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).345), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:94:17: 94:24 (#0) }, line#0), span: src/main.rs:94:17: 94:29 (#0) }), span: src/main.rs:94:17: 94:29 (#53) }]), span: src/main.rs:90:41: 90:43 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).360), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).359), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).357), kind: Path(LangItem(FormatArgument, src/main.rs:90:44: 90:46 (#53), None)), span: src/main.rs:90:44: 90:46 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).358), res: Err, args: None, infer_args: true })), span: src/main.rs:90:44: 90:46 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).356), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).351), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).352), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).353), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).354), kind: Path(Resolved(None, Path { span: src/main.rs:95:17: 95:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).355), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:95:17: 95:24 (#0) }, col#0), span: src/main.rs:95:17: 95:28 (#0) }, [], src/main.rs:95:29: 95:39 (#0)), span: src/main.rs:95:17: 95:39 (#0) }), span: src/main.rs:95:17: 95:39 (#53) }]), span: src/main.rs:90:44: 90:46 (#53) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#52), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).304), res: Err, args: None, infer_args: true }, PathSegment { ident: io#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).305), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#52, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).306), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).365), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).363), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }, PathSegment { ident: new_v1#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).364), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).315), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).314), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).308), kind: Lit(Spanned { node: Str("  Location: ", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).309), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).310), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).311), kind: Lit(Spanned { node: Str("-", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).312), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).313), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }]), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).362), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).361), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).324), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).321), kind: Path(LangItem(FormatArgument, src/main.rs:90:30: 90:34 (#53), None)), span: src/main.rs:90:30: 90:34 (#53) }, PathSegment { ident: new_debug#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).322), res: Err, args: None, infer_args: true })), span: src/main.rs:90:30: 90:34 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).316), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).317), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).318), kind: Path(Resolved(None, Path { span: src/main.rs:91:17: 91:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).319), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:91:17: 91:20 (#0) }, file#0), span: src/main.rs:91:17: 91:25 (#0) }, name#0), span: src/main.rs:91:17: 91:30 (#0) }), span: src/main.rs:91:17: 91:30 (#53) }]), span: src/main.rs:90:30: 90:34 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).332), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).331), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).329), kind: Path(LangItem(FormatArgument, src/main.rs:90:35: 90:37 (#53), None)), span: src/main.rs:90:35: 90:37 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).330), res: Err, args: None, infer_args: true })), span: src/main.rs:90:35: 90:37 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).328), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).325), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).326), kind: Path(Resolved(None, Path { span: src/main.rs:92:17: 92:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).327), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:92:17: 92:20 (#0) }, line#0), span: src/main.rs:92:17: 92:25 (#0) }), span: src/main.rs:92:17: 92:25 (#53) }]), span: src/main.rs:90:35: 90:37 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).342), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).341), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).339), kind: Path(LangItem(FormatArgument, src/main.rs:90:38: 90:40 (#53), None)), span: src/main.rs:90:38: 90:40 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).340), res: Err, args: None, infer_args: true })), span: src/main.rs:90:38: 90:40 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).338), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).333), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).334), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).335), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).336), kind: Path(Resolved(None, Path { span: src/main.rs:93:17: 93:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).337), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:93:17: 93:20 (#0) }, col#0), span: src/main.rs:93:17: 93:24 (#0) }, [], src/main.rs:93:25: 93:35 (#0)), span: src/main.rs:93:17: 93:35 (#0) }), span: src/main.rs:93:17: 93:35 (#53) }]), span: src/main.rs:90:38: 90:40 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).350), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).349), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).347), kind: Path(LangItem(FormatArgument, src/main.rs:90:41: 90:43 (#53), None)), span: src/main.rs:90:41: 90:43 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).348), res: Err, args: None, infer_args: true })), span: src/main.rs:90:41: 90:43 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).346), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).343), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).344), kind: Path(Resolved(None, Path { span: src/main.rs:94:17: 94:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).345), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:94:17: 94:24 (#0) }, line#0), span: src/main.rs:94:17: 94:29 (#0) }), span: src/main.rs:94:17: 94:29 (#53) }]), span: src/main.rs:90:41: 90:43 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).360), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).359), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).357), kind: Path(LangItem(FormatArgument, src/main.rs:90:44: 90:46 (#53), None)), span: src/main.rs:90:44: 90:46 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).358), res: Err, args: None, infer_args: true })), span: src/main.rs:90:44: 90:46 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).356), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).351), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).352), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).353), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).354), kind: Path(Resolved(None, Path { span: src/main.rs:95:17: 95:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).355), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:95:17: 95:24 (#0) }, col#0), span: src/main.rs:95:17: 95:28 (#0) }, [], src/main.rs:95:29: 95:39 (#0)), span: src/main.rs:95:17: 95:39 (#0) }), span: src/main.rs:95:17: 95:39 (#53) }]), span: src/main.rs:90:44: 90:46 (#53) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).363), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }, PathSegment { ident: new_v1#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).364), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).314), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).308), kind: Lit(Spanned { node: Str("  Location: ", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).309), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).310), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).311), kind: Lit(Spanned { node: Str("-", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).312), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).313), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }]), span: src/main.rs:90:17: 90:47 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000006) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).308), kind: Lit(Spanned { node: Str("  Location: ", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).309), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).310), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).311), kind: Lit(Spanned { node: Str("-", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).312), kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).313), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:90:17: 90:47 (#0) }), span: src/main.rs:90:17: 90:47 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000006) }]
Expression (kind: Lit(Spanned { node: Str("  Location: ", Cooked), span: src/main.rs:90:17: 90:47 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("-", Cooked), span: src/main.rs:90:17: 90:47 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str(":", Cooked), span: src/main.rs:90:17: 90:47 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:90:17: 90:47 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).361), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).324), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).321), kind: Path(LangItem(FormatArgument, src/main.rs:90:30: 90:34 (#53), None)), span: src/main.rs:90:30: 90:34 (#53) }, PathSegment { ident: new_debug#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).322), res: Err, args: None, infer_args: true })), span: src/main.rs:90:30: 90:34 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).316), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).317), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).318), kind: Path(Resolved(None, Path { span: src/main.rs:91:17: 91:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).319), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:91:17: 91:20 (#0) }, file#0), span: src/main.rs:91:17: 91:25 (#0) }, name#0), span: src/main.rs:91:17: 91:30 (#0) }), span: src/main.rs:91:17: 91:30 (#53) }]), span: src/main.rs:90:30: 90:34 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).332), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).331), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).329), kind: Path(LangItem(FormatArgument, src/main.rs:90:35: 90:37 (#53), None)), span: src/main.rs:90:35: 90:37 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).330), res: Err, args: None, infer_args: true })), span: src/main.rs:90:35: 90:37 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).328), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).325), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).326), kind: Path(Resolved(None, Path { span: src/main.rs:92:17: 92:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).327), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:92:17: 92:20 (#0) }, line#0), span: src/main.rs:92:17: 92:25 (#0) }), span: src/main.rs:92:17: 92:25 (#53) }]), span: src/main.rs:90:35: 90:37 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).342), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).341), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).339), kind: Path(LangItem(FormatArgument, src/main.rs:90:38: 90:40 (#53), None)), span: src/main.rs:90:38: 90:40 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).340), res: Err, args: None, infer_args: true })), span: src/main.rs:90:38: 90:40 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).338), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).333), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).334), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).335), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).336), kind: Path(Resolved(None, Path { span: src/main.rs:93:17: 93:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).337), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:93:17: 93:20 (#0) }, col#0), span: src/main.rs:93:17: 93:24 (#0) }, [], src/main.rs:93:25: 93:35 (#0)), span: src/main.rs:93:17: 93:35 (#0) }), span: src/main.rs:93:17: 93:35 (#53) }]), span: src/main.rs:90:38: 90:40 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).350), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).349), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).347), kind: Path(LangItem(FormatArgument, src/main.rs:90:41: 90:43 (#53), None)), span: src/main.rs:90:41: 90:43 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).348), res: Err, args: None, infer_args: true })), span: src/main.rs:90:41: 90:43 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).346), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).343), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).344), kind: Path(Resolved(None, Path { span: src/main.rs:94:17: 94:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).345), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:94:17: 94:24 (#0) }, line#0), span: src/main.rs:94:17: 94:29 (#0) }), span: src/main.rs:94:17: 94:29 (#53) }]), span: src/main.rs:90:41: 90:43 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).360), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).359), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).357), kind: Path(LangItem(FormatArgument, src/main.rs:90:44: 90:46 (#53), None)), span: src/main.rs:90:44: 90:46 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).358), res: Err, args: None, infer_args: true })), span: src/main.rs:90:44: 90:46 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).356), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).351), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).352), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).353), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).354), kind: Path(Resolved(None, Path { span: src/main.rs:95:17: 95:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).355), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:95:17: 95:24 (#0) }, col#0), span: src/main.rs:95:17: 95:28 (#0) }, [], src/main.rs:95:29: 95:39 (#0)), span: src/main.rs:95:17: 95:39 (#0) }), span: src/main.rs:95:17: 95:39 (#53) }]), span: src/main.rs:90:44: 90:46 (#53) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#53) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000005) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).324), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).321), kind: Path(LangItem(FormatArgument, src/main.rs:90:30: 90:34 (#53), None)), span: src/main.rs:90:30: 90:34 (#53) }, PathSegment { ident: new_debug#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).322), res: Err, args: None, infer_args: true })), span: src/main.rs:90:30: 90:34 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).316), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).317), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).318), kind: Path(Resolved(None, Path { span: src/main.rs:91:17: 91:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).319), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:91:17: 91:20 (#0) }, file#0), span: src/main.rs:91:17: 91:25 (#0) }, name#0), span: src/main.rs:91:17: 91:30 (#0) }), span: src/main.rs:91:17: 91:30 (#53) }]), span: src/main.rs:90:30: 90:34 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).332), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).331), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).329), kind: Path(LangItem(FormatArgument, src/main.rs:90:35: 90:37 (#53), None)), span: src/main.rs:90:35: 90:37 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).330), res: Err, args: None, infer_args: true })), span: src/main.rs:90:35: 90:37 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).328), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).325), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).326), kind: Path(Resolved(None, Path { span: src/main.rs:92:17: 92:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).327), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:92:17: 92:20 (#0) }, line#0), span: src/main.rs:92:17: 92:25 (#0) }), span: src/main.rs:92:17: 92:25 (#53) }]), span: src/main.rs:90:35: 90:37 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).342), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).341), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).339), kind: Path(LangItem(FormatArgument, src/main.rs:90:38: 90:40 (#53), None)), span: src/main.rs:90:38: 90:40 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).340), res: Err, args: None, infer_args: true })), span: src/main.rs:90:38: 90:40 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).338), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).333), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).334), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).335), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).336), kind: Path(Resolved(None, Path { span: src/main.rs:93:17: 93:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).337), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:93:17: 93:20 (#0) }, col#0), span: src/main.rs:93:17: 93:24 (#0) }, [], src/main.rs:93:25: 93:35 (#0)), span: src/main.rs:93:17: 93:35 (#0) }), span: src/main.rs:93:17: 93:35 (#53) }]), span: src/main.rs:90:38: 90:40 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).350), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).349), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).347), kind: Path(LangItem(FormatArgument, src/main.rs:90:41: 90:43 (#53), None)), span: src/main.rs:90:41: 90:43 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).348), res: Err, args: None, infer_args: true })), span: src/main.rs:90:41: 90:43 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).346), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).343), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).344), kind: Path(Resolved(None, Path { span: src/main.rs:94:17: 94:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).345), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:94:17: 94:24 (#0) }, line#0), span: src/main.rs:94:17: 94:29 (#0) }), span: src/main.rs:94:17: 94:29 (#53) }]), span: src/main.rs:90:41: 90:43 (#53) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).360), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).359), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).357), kind: Path(LangItem(FormatArgument, src/main.rs:90:44: 90:46 (#53), None)), span: src/main.rs:90:44: 90:46 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).358), res: Err, args: None, infer_args: true })), span: src/main.rs:90:44: 90:46 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).356), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).351), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).352), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).353), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).354), kind: Path(Resolved(None, Path { span: src/main.rs:95:17: 95:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).355), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:95:17: 95:24 (#0) }, col#0), span: src/main.rs:95:17: 95:28 (#0) }, [], src/main.rs:95:29: 95:39 (#0)), span: src/main.rs:95:17: 95:39 (#0) }), span: src/main.rs:95:17: 95:39 (#53) }]), span: src/main.rs:90:44: 90:46 (#53) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000005) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).321), kind: Path(LangItem(FormatArgument, src/main.rs:90:30: 90:34 (#53), None)), span: src/main.rs:90:30: 90:34 (#53) }, PathSegment { ident: new_debug#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).322), res: Err, args: None, infer_args: true })), span: src/main.rs:90:30: 90:34 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).316), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).317), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).318), kind: Path(Resolved(None, Path { span: src/main.rs:91:17: 91:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).319), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:91:17: 91:20 (#0) }, file#0), span: src/main.rs:91:17: 91:25 (#0) }, name#0), span: src/main.rs:91:17: 91:30 (#0) }), span: src/main.rs:91:17: 91:30 (#53) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_debug
  Function type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).321), kind: Path(LangItem(FormatArgument, src/main.rs:90:30: 90:34 (#53), None)), span: src/main.rs:90:30: 90:34 (#53) }, PathSegment { ident: new_debug#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).322), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReErased, Adt(rustc_span::FileName, [])])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).316), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).317), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).318), kind: Path(Resolved(None, Path { span: src/main.rs:91:17: 91:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).319), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:91:17: 91:20 (#0) }, file#0), span: src/main.rs:91:17: 91:25 (#0) }, name#0), span: src/main.rs:91:17: 91:30 (#0) }))
  Expression type: &ReErased Adt(rustc_span::FileName, [])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).317), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).318), kind: Path(Resolved(None, Path { span: src/main.rs:91:17: 91:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).319), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:91:17: 91:20 (#0) }, file#0), span: src/main.rs:91:17: 91:25 (#0) }, name#0))
  Expression type: Adt(rustc_span::FileName, [])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).318), kind: Path(Resolved(None, Path { span: src/main.rs:91:17: 91:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).319), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:91:17: 91:20 (#0) }, file#0))
  Expression type: Adt(std::rc::Rc, [Adt(rustc_span::SourceFile, []), Adt(std::alloc::Global, [])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:91:17: 91:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).319), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::Loc, [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).331), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).329), kind: Path(LangItem(FormatArgument, src/main.rs:90:35: 90:37 (#53), None)), span: src/main.rs:90:35: 90:37 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).330), res: Err, args: None, infer_args: true })), span: src/main.rs:90:35: 90:37 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).328), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).325), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).326), kind: Path(Resolved(None, Path { span: src/main.rs:92:17: 92:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).327), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:92:17: 92:20 (#0) }, line#0), span: src/main.rs:92:17: 92:25 (#0) }), span: src/main.rs:92:17: 92:25 (#53) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_display
  Function type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).329), kind: Path(LangItem(FormatArgument, src/main.rs:90:35: 90:37 (#53), None)), span: src/main.rs:90:35: 90:37 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).330), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReErased, usize])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).325), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).326), kind: Path(Resolved(None, Path { span: src/main.rs:92:17: 92:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).327), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:92:17: 92:20 (#0) }, line#0), span: src/main.rs:92:17: 92:25 (#0) }))
  Expression type: &ReErased usize
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).326), kind: Path(Resolved(None, Path { span: src/main.rs:92:17: 92:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).327), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:92:17: 92:20 (#0) }, line#0))
  Expression type: usize
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:92:17: 92:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).327), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::Loc, [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).341), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).339), kind: Path(LangItem(FormatArgument, src/main.rs:90:38: 90:40 (#53), None)), span: src/main.rs:90:38: 90:40 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).340), res: Err, args: None, infer_args: true })), span: src/main.rs:90:38: 90:40 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).338), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).333), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).334), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).335), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).336), kind: Path(Resolved(None, Path { span: src/main.rs:93:17: 93:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).337), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:93:17: 93:20 (#0) }, col#0), span: src/main.rs:93:17: 93:24 (#0) }, [], src/main.rs:93:25: 93:35 (#0)), span: src/main.rs:93:17: 93:35 (#0) }), span: src/main.rs:93:17: 93:35 (#53) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_display
  Function type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).339), kind: Path(LangItem(FormatArgument, src/main.rs:90:38: 90:40 (#53), None)), span: src/main.rs:90:38: 90:40 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).340), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReErased, usize])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).333), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).334), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).335), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).336), kind: Path(Resolved(None, Path { span: src/main.rs:93:17: 93:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).337), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:93:17: 93:20 (#0) }, col#0), span: src/main.rs:93:17: 93:24 (#0) }, [], src/main.rs:93:25: 93:35 (#0)), span: src/main.rs:93:17: 93:35 (#0) }))
  Expression type: &ReErased usize
Expression (kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).334), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).335), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).336), kind: Path(Resolved(None, Path { span: src/main.rs:93:17: 93:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).337), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:93:17: 93:20 (#0) }, col#0), span: src/main.rs:93:17: 93:24 (#0) }, [], src/main.rs:93:25: 93:35 (#0)))
  Method call: to_usize with 0 arguments
  Receiver type: Adt(rustc_span::CharPos, [])
  Method: rustc_span::Pos::to_usize
  Method type: FnDef(DefId(33:1118 ~ rustc_span[03d2]::Pos::to_usize), [Self/#0])
  Expression type: usize
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).336), kind: Path(Resolved(None, Path { span: src/main.rs:93:17: 93:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).337), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })), span: src/main.rs:93:17: 93:20 (#0) }, col#0))
  Expression type: Adt(rustc_span::CharPos, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:93:17: 93:20 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), segments: [PathSegment { ident: loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).337), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).289)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::Loc, [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).349), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).347), kind: Path(LangItem(FormatArgument, src/main.rs:90:41: 90:43 (#53), None)), span: src/main.rs:90:41: 90:43 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).348), res: Err, args: None, infer_args: true })), span: src/main.rs:90:41: 90:43 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).346), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).343), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).344), kind: Path(Resolved(None, Path { span: src/main.rs:94:17: 94:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).345), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:94:17: 94:24 (#0) }, line#0), span: src/main.rs:94:17: 94:29 (#0) }), span: src/main.rs:94:17: 94:29 (#53) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_display
  Function type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).347), kind: Path(LangItem(FormatArgument, src/main.rs:90:41: 90:43 (#53), None)), span: src/main.rs:90:41: 90:43 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).348), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReErased, usize])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).343), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).344), kind: Path(Resolved(None, Path { span: src/main.rs:94:17: 94:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).345), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:94:17: 94:24 (#0) }, line#0), span: src/main.rs:94:17: 94:29 (#0) }))
  Expression type: &ReErased usize
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).344), kind: Path(Resolved(None, Path { span: src/main.rs:94:17: 94:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).345), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:94:17: 94:24 (#0) }, line#0))
  Expression type: usize
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:94:17: 94:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).345), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::Loc, [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).359), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).357), kind: Path(LangItem(FormatArgument, src/main.rs:90:44: 90:46 (#53), None)), span: src/main.rs:90:44: 90:46 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).358), res: Err, args: None, infer_args: true })), span: src/main.rs:90:44: 90:46 (#53) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).356), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).351), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).352), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).353), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).354), kind: Path(Resolved(None, Path { span: src/main.rs:95:17: 95:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).355), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:95:17: 95:24 (#0) }, col#0), span: src/main.rs:95:17: 95:28 (#0) }, [], src/main.rs:95:29: 95:39 (#0)), span: src/main.rs:95:17: 95:39 (#0) }), span: src/main.rs:95:17: 95:39 (#53) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_display
  Function type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).357), kind: Path(LangItem(FormatArgument, src/main.rs:90:44: 90:46 (#53), None)), span: src/main.rs:90:44: 90:46 (#53) }, PathSegment { ident: new_display#53, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).358), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReErased, usize])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).351), kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).352), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).353), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).354), kind: Path(Resolved(None, Path { span: src/main.rs:95:17: 95:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).355), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:95:17: 95:24 (#0) }, col#0), span: src/main.rs:95:17: 95:28 (#0) }, [], src/main.rs:95:29: 95:39 (#0)), span: src/main.rs:95:17: 95:39 (#0) }))
  Expression type: &ReErased usize
Expression (kind: MethodCall(PathSegment { ident: to_usize#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).352), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).353), kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).354), kind: Path(Resolved(None, Path { span: src/main.rs:95:17: 95:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).355), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:95:17: 95:24 (#0) }, col#0), span: src/main.rs:95:17: 95:28 (#0) }, [], src/main.rs:95:29: 95:39 (#0)))
  Method call: to_usize with 0 arguments
  Receiver type: Adt(rustc_span::CharPos, [])
  Method: rustc_span::Pos::to_usize
  Method type: FnDef(DefId(33:1118 ~ rustc_span[03d2]::Pos::to_usize), [Self/#0])
  Expression type: usize
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).354), kind: Path(Resolved(None, Path { span: src/main.rs:95:17: 95:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).355), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })), span: src/main.rs:95:17: 95:24 (#0) }, col#0))
  Expression type: Adt(rustc_span::CharPos, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:95:17: 95:24 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), segments: [PathSegment { ident: end_loc#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).355), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).300)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::Loc, [])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).385), kind: Semi(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).373), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).374), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:9: 84:27 (#55), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#55, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).375), res: Err, args: None, infer_args: true }, PathSegment { ident: io#55, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).376), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#55, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).377), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:9: 84:27 (#55) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).378), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).384), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).382), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56) }, PathSegment { ident: new_const#56, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).383), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).381), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).380), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).379), kind: Lit(Spanned { node: Str("\n", Cooked), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:9: 84:59 (#55) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:9: 84:60 (#55) }], expr: None, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).386), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:83:23: 85:6 (#55), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).374), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:9: 84:27 (#55), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#55, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).375), res: Err, args: None, infer_args: true }, PathSegment { ident: io#55, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).376), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#55, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).377), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:9: 84:27 (#55) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).378), kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).384), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).382), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56) }, PathSegment { ident: new_const#56, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).383), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).381), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).380), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).379), kind: Lit(Spanned { node: Str("\n", Cooked), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:9: 84:27 (#55), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#55, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).375), res: Err, args: None, infer_args: true }, PathSegment { ident: io#55, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).376), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#55, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).377), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).384), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).382), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56) }, PathSegment { ident: new_const#56, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).383), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).381), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).380), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).379), kind: Lit(Spanned { node: Str("\n", Cooked), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }]))
  Function call with 1 arguments
  Called function: std::fmt::Arguments::<'a>::new_const
  Function type: FnDef(DefId(2:9415 ~ core[ae61]::fmt::{impl#2}::new_const), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).382), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:84:28: 84:58 (#56) }, PathSegment { ident: new_const#56, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).383), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9415 ~ core[ae61]::fmt::{impl#2}::new_const), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).380), kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).379), kind: Lit(Spanned { node: Str("\n", Cooked), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).379), kind: Lit(Spanned { node: Str("\n", Cooked), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Lit(Spanned { node: Str("\n", Cooked), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:140:24: 140:28 (#54) }))
  Expression type: &ReErased str
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).389), kind: Path(Resolved(None, Path { span: src/main.rs:102:9: 102:30 (#0), res: Def(Fn, DefId(120:846 ~ rustc_hir[6705]::intravisit::walk_item)), segments: [PathSegment { ident: intravisit#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).390), res: Def(Mod, DefId(120:726 ~ rustc_hir[6705]::intravisit)), args: None, infer_args: true }, PathSegment { ident: walk_item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).391), res: Def(Fn, DefId(120:846 ~ rustc_hir[6705]::intravisit::walk_item)), args: None, infer_args: true }] })), span: src/main.rs:102:9: 102:30 (#0) }, [Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).392), kind: Path(Resolved(None, Path { span: src/main.rs:102:31: 102:35 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).393), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })), span: src/main.rs:102:31: 102:35 (#0) }, Expr { hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).394), kind: Path(Resolved(None, Path { span: src/main.rs:102:37: 102:41 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).395), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })), span: src/main.rs:102:37: 102:41 (#0) }]))
  Function call with 2 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:102:9: 102:30 (#0), res: Def(Fn, DefId(120:846 ~ rustc_hir[6705]::intravisit::walk_item)), segments: [PathSegment { ident: intravisit#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).390), res: Def(Mod, DefId(120:726 ~ rustc_hir[6705]::intravisit)), args: None, infer_args: true }, PathSegment { ident: walk_item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).391), res: Def(Fn, DefId(120:846 ~ rustc_hir[6705]::intravisit::walk_item)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(120:846 ~ rustc_hir[6705]::intravisit::walk_item), [ReErased, Adt(PrintVisitor, [ReErased])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:102:31: 102:35 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).393), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).2)), args: None, infer_args: true }] })))
  Expression type: &ReErased mut Adt(PrintVisitor, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:102:37: 102:41 (#0), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), segments: [PathSegment { ident: item#0, hir_id: HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).395), res: Local(HirId(DefId(0:31 ~ main[cc0f]::{impl#1}::visit_item).4)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_hir::Item, [ReErased])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).31), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).5), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).29), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).6), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).7), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#57), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#57, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).8), res: Err, args: None, infer_args: true }, PathSegment { ident: io#57, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).9), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#57, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).10), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#57) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).11), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).28), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).26), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }, PathSegment { ident: new_v1#58, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).27), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).15), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).14), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).12), kind: Lit(Spanned { node: Str("Expression (kind: ", Cooked), span: src/main.rs:107:18: 107:43 (#0) }), span: src/main.rs:107:18: 107:43 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).13), kind: Lit(Spanned { node: Str(")\n", Cooked), span: src/main.rs:107:18: 107:43 (#0) }), span: src/main.rs:107:18: 107:43 (#0) }]), span: src/main.rs:107:18: 107:43 (#0) }), span: src/main.rs:107:18: 107:43 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).25), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).24), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).23), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).22), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).20), kind: Path(LangItem(FormatArgument, src/main.rs:107:37: 107:41 (#58), None)), span: src/main.rs:107:37: 107:41 (#58) }, PathSegment { ident: new_debug#58, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).21), res: Err, args: None, infer_args: true })), span: src/main.rs:107:37: 107:41 (#58) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).19), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).16), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).17), kind: Path(Resolved(None, Path { span: src/main.rs:107:45: 107:49 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).18), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:107:45: 107:49 (#0) }, kind#0), span: src/main.rs:107:45: 107:54 (#0) }), span: src/main.rs:107:45: 107:54 (#58) }]), span: src/main.rs:107:37: 107:41 (#58) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#57) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#57) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).30), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#57), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#57) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#57) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).32), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).69), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).69), typeck_result#0, None), span: src/main.rs:110:13: 110:26 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).33), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).34), kind: Path(Resolved(None, Path { span: src/main.rs:110:29: 110:53 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).35), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).36), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).37), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })), span: src/main.rs:110:29: 110:53 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).38), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).39), kind: Path(Resolved(None, Path { span: src/main.rs:110:54: 110:82 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).40), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).41), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).42), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:110:54: 110:82 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).43), kind: Closure(Closure { def_id: DefId(0:34 ~ main[cc0f]::{impl#1}::visit_expr::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:110:86: 110:86 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).44) }, fn_decl_span: src/main.rs:110:83: 110:85 (#0), fn_arg_span: Some(src/main.rs:110:83: 110:85 (#0)), movability: None }), span: src/main.rs:110:83: 116:10 (#0) }]), span: src/main.rs:110:54: 116:11 (#0) }]), span: src/main.rs:110:29: 116:12 (#0) }), els: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).68), span: src/main.rs:110:9: 116:13 (#0), source: Normal }), span: src/main.rs:110:9: 116:13 (#0) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).70), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114), typeck#0, None), span: src/main.rs:118:13: 118:19 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).71), kind: Match(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).72), kind: Path(Resolved(None, Path { span: src/main.rs:118:28: 118:41 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).69)), segments: [PathSegment { ident: typeck_result#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).73), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).69)), args: None, infer_args: true }] })), span: src/main.rs:118:28: 118:41 (#0) }, [Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).77), span: src/main.rs:119:13: 119:33 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).76), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:119:13: 119:15 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), segments: [PathSegment { ident: Ok#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).74), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).75), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).75), typeck#0, None), span: src/main.rs:119:16: 119:22 (#0), default_binding_modes: true }], None), span: src/main.rs:119:13: 119:23 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).78), kind: Path(Resolved(None, Path { span: src/main.rs:119:27: 119:33 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).75)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).79), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).75)), args: None, infer_args: true }] })), span: src/main.rs:119:27: 119:33 (#0) } }, Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).83), span: src/main.rs:120:13: 125:14 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).82), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:120:13: 120:16 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), segments: [PathSegment { ident: Err#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).80), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).81), kind: Wild, span: src/main.rs:120:17: 120:18 (#0), default_binding_modes: true }], None), span: src/main.rs:120:13: 120:19 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).84), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).100), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).85), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).98), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).86), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).87), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#59), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).88), res: Err, args: None, infer_args: true }, PathSegment { ident: io#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).89), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).90), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#59) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).91), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).97), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).95), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }, PathSegment { ident: new_const#60, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).96), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).94), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).93), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).92), kind: Lit(Spanned { node: Str("  Could not get type information for this expression\n", Cooked), span: src/main.rs:121:26: 121:80 (#0) }), span: src/main.rs:121:26: 121:80 (#0) }]), span: src/main.rs:121:26: 121:80 (#0) }), span: src/main.rs:121:26: 121:80 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#59) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#59) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).99), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#59), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#59) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#59) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).109), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).101), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).102), kind: Path(Resolved(None, Path { span: src/main.rs:123:17: 123:38 (#0), res: Def(Fn, DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr)), segments: [PathSegment { ident: intravisit#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).103), res: Def(Mod, DefId(120:726 ~ rustc_hir[6705]::intravisit)), args: None, infer_args: true }, PathSegment { ident: walk_expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).104), res: Def(Fn, DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr)), args: None, infer_args: true }] })), span: src/main.rs:123:17: 123:38 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).105), kind: Path(Resolved(None, Path { span: src/main.rs:123:39: 123:43 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).106), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:123:39: 123:43 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).107), kind: Path(Resolved(None, Path { span: src/main.rs:123:45: 123:49 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).108), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:123:45: 123:49 (#0) }]), span: src/main.rs:123:17: 123:50 (#0) }), span: src/main.rs:123:17: 123:51 (#0) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).111), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).110), kind: Ret(None), span: src/main.rs:124:17: 124:23 (#0) }), span: src/main.rs:124:17: 124:24 (#0) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).112), rules: DefaultBlock, span: src/main.rs:120:23: 125:14 (#0), targeted_by_break: false }, None), span: src/main.rs:120:23: 125:14 (#0) } }], Normal), span: src/main.rs:118:22: 126:10 (#0) }), els: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).113), span: src/main.rs:118:9: 126:11 (#0), source: Normal }), span: src/main.rs:118:9: 126:11 (#0) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).436), kind: Expr(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).115), kind: Match(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).116), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).117), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).118), kind: Path(Resolved(None, Path { span: src/main.rs:129:16: 129:20 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).119), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:129:16: 129:20 (#0) }, kind#0), span: src/main.rs:129:16: 129:25 (#0) }), span: src/main.rs:129:15: 129:25 (#0) }, [Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).126), span: src/main.rs:130:13: 141:14 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).125), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:130:13: 130:38 (#0), res: Def(Ctor(Variant, Fn), DefId(120:2880 ~ rustc_hir[6705]::hir::ExprKind::Call::{constructor#0})), segments: [PathSegment { ident: rustc_hir#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).120), res: Def(Mod, DefId(120:0 ~ rustc_hir[6705])), args: None, infer_args: true }, PathSegment { ident: ExprKind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).121), res: Def(Enum, DefId(120:2871 ~ rustc_hir[6705]::hir::ExprKind)), args: None, infer_args: true }, PathSegment { ident: Call#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).122), res: Def(Ctor(Variant, Fn), DefId(120:2880 ~ rustc_hir[6705]::hir::ExprKind::Call::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123), func#0, None), span: src/main.rs:130:39: 130:43 (#0), default_binding_modes: true }, Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124), args#0, None), span: src/main.rs:130:45: 130:49 (#0), default_binding_modes: true }], None), span: src/main.rs:130:13: 130:50 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).127), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).155), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).128), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).153), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).129), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).130), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#61), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).131), res: Err, args: None, infer_args: true }, PathSegment { ident: io#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).132), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).133), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#61) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).134), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).152), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).150), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }, PathSegment { ident: new_v1#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).151), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).138), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).137), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).135), kind: Lit(Spanned { node: Str("  Function call with ", Cooked), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).136), kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }]), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).149), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).148), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).147), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).144), kind: Path(LangItem(FormatArgument, src/main.rs:131:48: 131:50 (#62), None)), span: src/main.rs:131:48: 131:50 (#62) }, PathSegment { ident: new_display#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).145), res: Err, args: None, infer_args: true })), span: src/main.rs:131:48: 131:50 (#62) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).139), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).140), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).141), kind: Path(Resolved(None, Path { span: src/main.rs:131:63: 131:67 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).142), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), args: None, infer_args: true }] })), span: src/main.rs:131:63: 131:67 (#0) }, [], src/main.rs:131:68: 131:73 (#0)), span: src/main.rs:131:63: 131:73 (#0) }), span: src/main.rs:131:63: 131:73 (#62) }]), span: src/main.rs:131:48: 131:50 (#62) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#61) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#61) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).154), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#61), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#61) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#61) }], expr: Some(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).156), kind: If(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).157), kind: Let(Let { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).158), span: src/main.rs:134:20: 134:80 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).161), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:134:24: 134:28 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).159), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160), def_id#0, None), span: src/main.rs:134:29: 134:35 (#0), default_binding_modes: true }], None), span: src/main.rs:134:24: 134:36 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).162), kind: MethodCall(PathSegment { ident: type_dependent_def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).163), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).164), kind: Path(Resolved(None, Path { span: src/main.rs:134:39: 134:45 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).165), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })), span: src/main.rs:134:39: 134:45 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).166), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).167), kind: Path(Resolved(None, Path { span: src/main.rs:134:68: 134:72 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123)), segments: [PathSegment { ident: func#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).168), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123)), args: None, infer_args: true }] })), span: src/main.rs:134:68: 134:72 (#0) }, hir_id#0), span: src/main.rs:134:68: 134:79 (#0) }], src/main.rs:134:46: 134:80 (#0)), span: src/main.rs:134:39: 134:80 (#0) } }), span: src/main.rs:134:20: 134:80 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).234), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).199), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).169), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).197), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).170), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).171), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#63), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).172), res: Err, args: None, infer_args: true }, PathSegment { ident: io#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).173), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).174), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#63) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).175), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).196), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).194), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, PathSegment { ident: new_v1#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).195), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).179), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).178), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).176), kind: Lit(Spanned { node: Str("  Called function: ", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).177), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }]), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).193), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).192), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).191), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).190), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).188), kind: Path(LangItem(FormatArgument, src/main.rs:135:50: 135:52 (#64), None)), span: src/main.rs:135:50: 135:52 (#64) }, PathSegment { ident: new_display#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).189), res: Err, args: None, infer_args: true })), span: src/main.rs:135:50: 135:52 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).187), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).180), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).181), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).182), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).183), kind: Path(Resolved(None, Path { span: src/main.rs:135:55: 135:59 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).184), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:135:55: 135:59 (#0) }, tcx#0), span: src/main.rs:135:55: 135:63 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).185), kind: Path(Resolved(None, Path { span: src/main.rs:135:77: 135:83 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).186), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:135:77: 135:83 (#0) }], src/main.rs:135:64: 135:84 (#0)), span: src/main.rs:135:55: 135:84 (#0) }), span: src/main.rs:135:55: 135:84 (#64) }]), span: src/main.rs:135:50: 135:52 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#63) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#63) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).198), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#63), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#63) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#63) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).232), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).200), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).230), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).201), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).202), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#65), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).203), res: Err, args: None, infer_args: true }, PathSegment { ident: io#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).204), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).205), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#65) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).206), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).229), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).227), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, PathSegment { ident: new_v1#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).228), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).210), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).209), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).207), kind: Lit(Spanned { node: Str("  Function type: ", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).208), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }]), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).226), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).225), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).224), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).223), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).221), kind: Path(LangItem(FormatArgument, src/main.rs:137:43: 137:47 (#66), None)), span: src/main.rs:137:43: 137:47 (#66) }, PathSegment { ident: new_debug#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).222), res: Err, args: None, infer_args: true })), span: src/main.rs:137:43: 137:47 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).211), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).212), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).213), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).214), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).215), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).216), kind: Path(Resolved(None, Path { span: src/main.rs:138:25: 138:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).217), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:138:25: 138:29 (#0) }, tcx#0), span: src/main.rs:138:25: 138:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).218), kind: Path(Resolved(None, Path { span: src/main.rs:138:42: 138:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).219), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:138:42: 138:48 (#0) }], src/main.rs:138:34: 138:49 (#0)), span: src/main.rs:138:25: 138:49 (#0) }, [], src/main.rs:138:50: 138:72 (#0)), span: src/main.rs:138:25: 138:72 (#0) }), span: src/main.rs:138:25: 138:72 (#66) }]), span: src/main.rs:137:43: 137:47 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#65) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#65) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).231), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#65), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#65) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#65) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).233), rules: DefaultBlock, span: src/main.rs:134:81: 140:18 (#0), targeted_by_break: false }, None), span: src/main.rs:134:81: 140:18 (#0) }, None), span: src/main.rs:134:17: 140:18 (#0) }), hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).235), rules: DefaultBlock, span: src/main.rs:130:54: 141:14 (#0), targeted_by_break: false }, None), span: src/main.rs:130:54: 141:14 (#0) } }, Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).244), span: src/main.rs:142:13: 165:14 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).243), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:142:13: 142:44 (#0), res: Def(Ctor(Variant, Fn), DefId(120:2884 ~ rustc_hir[6705]::hir::ExprKind::MethodCall::{constructor#0})), segments: [PathSegment { ident: rustc_hir#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).236), res: Def(Mod, DefId(120:0 ~ rustc_hir[6705])), args: None, infer_args: true }, PathSegment { ident: ExprKind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).237), res: Def(Enum, DefId(120:2871 ~ rustc_hir[6705]::hir::ExprKind)), args: None, infer_args: true }, PathSegment { ident: MethodCall#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).238), res: Def(Ctor(Variant, Fn), DefId(120:2884 ~ rustc_hir[6705]::hir::ExprKind::MethodCall::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239), path_segment#0, None), span: src/main.rs:142:45: 142:57 (#0), default_binding_modes: true }, Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).240), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).240), receiver#0, None), span: src/main.rs:142:59: 142:67 (#0), default_binding_modes: true }, Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241), args#0, None), span: src/main.rs:142:69: 142:73 (#0), default_binding_modes: true }, Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).242), kind: Wild, span: src/main.rs:142:75: 142:76 (#0), default_binding_modes: true }], None), span: src/main.rs:142:13: 142:77 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).245), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).282), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).246), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).280), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).247), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).248), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#67), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).249), res: Err, args: None, infer_args: true }, PathSegment { ident: io#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).250), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).251), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#67) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).252), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).279), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).277), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }, PathSegment { ident: new_v1#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).278), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).257), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).256), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).253), kind: Lit(Spanned { node: Str("  Method call: ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).254), kind: Lit(Spanned { node: Str(" with ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).255), kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }]), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).276), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).275), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).265), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).264), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).262), kind: Path(LangItem(FormatArgument, src/main.rs:144:37: 144:39 (#68), None)), span: src/main.rs:144:37: 144:39 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).263), res: Err, args: None, infer_args: true })), span: src/main.rs:144:37: 144:39 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).261), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).258), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).259), kind: Path(Resolved(None, Path { span: src/main.rs:145:21: 145:33 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), segments: [PathSegment { ident: path_segment#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).260), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), args: None, infer_args: true }] })), span: src/main.rs:145:21: 145:33 (#0) }, ident#0), span: src/main.rs:145:21: 145:39 (#0) }), span: src/main.rs:145:21: 145:39 (#68) }]), span: src/main.rs:144:37: 144:39 (#68) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).274), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).273), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).271), kind: Path(LangItem(FormatArgument, src/main.rs:144:45: 144:47 (#68), None)), span: src/main.rs:144:45: 144:47 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).272), res: Err, args: None, infer_args: true })), span: src/main.rs:144:45: 144:47 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).270), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).266), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).267), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).268), kind: Path(Resolved(None, Path { span: src/main.rs:146:21: 146:25 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).269), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), args: None, infer_args: true }] })), span: src/main.rs:146:21: 146:25 (#0) }, [], src/main.rs:146:26: 146:31 (#0)), span: src/main.rs:146:21: 146:31 (#0) }), span: src/main.rs:146:21: 146:31 (#68) }]), span: src/main.rs:144:45: 144:47 (#68) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#67) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#67) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).281), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#67), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#67) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#67) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).351), kind: Expr(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).283), kind: Match(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).284), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).285), kind: Path(Resolved(None, Path { span: src/main.rs:150:23: 150:47 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).286), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).287), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).288), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })), span: src/main.rs:150:23: 150:47 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).289), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).290), kind: Path(Resolved(None, Path { span: src/main.rs:150:48: 150:76 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).291), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).292), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).293), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:150:48: 150:76 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).294), kind: Closure(Closure { def_id: DefId(0:35 ~ main[cc0f]::{impl#1}::visit_expr::{closure#1}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:150:80: 150:80 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).295) }, fn_decl_span: src/main.rs:150:77: 150:79 (#0), fn_arg_span: Some(src/main.rs:150:77: 150:79 (#0)), movability: None }), span: src/main.rs:150:77: 152:18 (#0) }]), span: src/main.rs:150:48: 152:19 (#0) }]), span: src/main.rs:150:23: 152:20 (#0) }, [Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).306), span: src/main.rs:153:21: 153:86 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).305), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:153:21: 153:23 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), segments: [PathSegment { ident: Ok#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).303), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304), receiver_ty#0, None), span: src/main.rs:153:24: 153:35 (#0), default_binding_modes: true }], None), span: src/main.rs:153:21: 153:36 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).307), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).330), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).308), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).309), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#69), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).310), res: Err, args: None, infer_args: true }, PathSegment { ident: io#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).311), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).312), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#69) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).313), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).329), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).327), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }, PathSegment { ident: new_v1#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).328), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).317), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).316), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).314), kind: Lit(Spanned { node: Str("  Receiver type: ", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).315), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }]), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).326), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).325), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).324), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).321), kind: Path(LangItem(FormatArgument, src/main.rs:153:67: 153:71 (#70), None)), span: src/main.rs:153:67: 153:71 (#70) }, PathSegment { ident: new_debug#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).322), res: Err, args: None, infer_args: true })), span: src/main.rs:153:67: 153:71 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).318), kind: Path(Resolved(None, Path { span: src/main.rs:153:74: 153:85 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), segments: [PathSegment { ident: receiver_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).319), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), args: None, infer_args: true }] })), span: src/main.rs:153:74: 153:85 (#0) }), span: src/main.rs:153:74: 153:85 (#70) }]), span: src/main.rs:153:67: 153:71 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#69) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#69) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).331), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#69), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#69) } }, Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).335), span: src/main.rs:154:21: 154:73 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).334), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:154:21: 154:24 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), segments: [PathSegment { ident: Err#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).332), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).333), kind: Wild, span: src/main.rs:154:25: 154:26 (#0), default_binding_modes: true }], None), span: src/main.rs:154:21: 154:27 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).336), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).349), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).337), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).338), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#71), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).339), res: Err, args: None, infer_args: true }, PathSegment { ident: io#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).340), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).341), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#71) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).342), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).348), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).346), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }, PathSegment { ident: new_const#72, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).347), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).345), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).344), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).343), kind: Lit(Spanned { node: Str("  Receiver type: <unavailable>\n", Cooked), span: src/main.rs:154:40: 154:72 (#0) }), span: src/main.rs:154:40: 154:72 (#0) }]), span: src/main.rs:154:40: 154:72 (#0) }), span: src/main.rs:154:40: 154:72 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#71) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#71) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).350), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#71), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#71) } }], Normal), span: src/main.rs:150:17: 155:18 (#0) }), span: src/main.rs:150:17: 155:18 (#0) }], expr: Some(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).352), kind: If(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).353), kind: Let(Let { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).354), span: src/main.rs:158:20: 158:80 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).357), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:158:24: 158:28 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).355), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356), def_id#0, None), span: src/main.rs:158:29: 158:35 (#0), default_binding_modes: true }], None), span: src/main.rs:158:24: 158:36 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).358), kind: MethodCall(PathSegment { ident: type_dependent_def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).359), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).360), kind: Path(Resolved(None, Path { span: src/main.rs:158:39: 158:45 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).361), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })), span: src/main.rs:158:39: 158:45 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).362), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).363), kind: Path(Resolved(None, Path { span: src/main.rs:158:68: 158:72 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).364), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:158:68: 158:72 (#0) }, hir_id#0), span: src/main.rs:158:68: 158:79 (#0) }], src/main.rs:158:46: 158:80 (#0)), span: src/main.rs:158:39: 158:80 (#0) } }), span: src/main.rs:158:20: 158:80 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).430), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).395), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).365), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).393), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).366), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).367), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#73), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).368), res: Err, args: None, infer_args: true }, PathSegment { ident: io#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).369), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).370), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#73) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).371), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).392), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).390), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, PathSegment { ident: new_v1#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).391), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).375), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).374), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).372), kind: Lit(Spanned { node: Str("  Method: ", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).373), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }]), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).389), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).388), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).387), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).386), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).384), kind: Path(LangItem(FormatArgument, src/main.rs:159:41: 159:43 (#74), None)), span: src/main.rs:159:41: 159:43 (#74) }, PathSegment { ident: new_display#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).385), res: Err, args: None, infer_args: true })), span: src/main.rs:159:41: 159:43 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).383), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).376), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).377), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).378), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).379), kind: Path(Resolved(None, Path { span: src/main.rs:159:46: 159:50 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).380), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:159:46: 159:50 (#0) }, tcx#0), span: src/main.rs:159:46: 159:54 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).381), kind: Path(Resolved(None, Path { span: src/main.rs:159:68: 159:74 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).382), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:159:68: 159:74 (#0) }], src/main.rs:159:55: 159:75 (#0)), span: src/main.rs:159:46: 159:75 (#0) }), span: src/main.rs:159:46: 159:75 (#74) }]), span: src/main.rs:159:41: 159:43 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#73) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#73) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).394), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#73), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#73) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#73) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).428), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).396), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).426), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).397), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).398), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#75), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).399), res: Err, args: None, infer_args: true }, PathSegment { ident: io#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).400), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).401), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#75) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).402), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).425), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).423), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, PathSegment { ident: new_v1#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).424), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).406), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).405), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).403), kind: Lit(Spanned { node: Str("  Method type: ", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).404), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }]), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).422), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).421), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).420), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).419), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).417), kind: Path(LangItem(FormatArgument, src/main.rs:161:41: 161:45 (#76), None)), span: src/main.rs:161:41: 161:45 (#76) }, PathSegment { ident: new_debug#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).418), res: Err, args: None, infer_args: true })), span: src/main.rs:161:41: 161:45 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).416), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).407), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).408), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).409), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).410), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).411), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).412), kind: Path(Resolved(None, Path { span: src/main.rs:162:25: 162:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).413), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:162:25: 162:29 (#0) }, tcx#0), span: src/main.rs:162:25: 162:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).414), kind: Path(Resolved(None, Path { span: src/main.rs:162:42: 162:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).415), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:162:42: 162:48 (#0) }], src/main.rs:162:34: 162:49 (#0)), span: src/main.rs:162:25: 162:49 (#0) }, [], src/main.rs:162:50: 162:72 (#0)), span: src/main.rs:162:25: 162:72 (#0) }), span: src/main.rs:162:25: 162:72 (#76) }]), span: src/main.rs:161:41: 161:45 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#75) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#75) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).427), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#75), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#75) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#75) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).429), rules: DefaultBlock, span: src/main.rs:158:81: 164:18 (#0), targeted_by_break: false }, None), span: src/main.rs:158:81: 164:18 (#0) }, None), span: src/main.rs:158:17: 164:18 (#0) }), hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).431), rules: DefaultBlock, span: src/main.rs:142:81: 165:14 (#0), targeted_by_break: false }, None), span: src/main.rs:142:81: 165:14 (#0) } }, Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).433), span: src/main.rs:166:13: 166:20 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).432), kind: Wild, span: src/main.rs:166:13: 166:14 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).434), kind: Block(Block { stmts: [], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).435), rules: DefaultBlock, span: src/main.rs:166:18: 166:20 (#0), targeted_by_break: false }, None), span: src/main.rs:166:18: 166:20 (#0) } }], Normal), span: src/main.rs:129:9: 167:10 (#0) }), span: src/main.rs:129:9: 167:10 (#0) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).503), kind: Expr(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).437), kind: Match(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).438), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).439), kind: Path(Resolved(None, Path { span: src/main.rs:170:15: 170:39 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).440), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).441), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).442), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })), span: src/main.rs:170:15: 170:39 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).443), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).444), kind: Path(Resolved(None, Path { span: src/main.rs:170:40: 170:68 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).445), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).446), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).447), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:170:40: 170:68 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).448), kind: Closure(Closure { def_id: DefId(0:36 ~ main[cc0f]::{impl#1}::visit_expr::{closure#2}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:170:72: 170:72 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).449) }, fn_decl_span: src/main.rs:170:69: 170:71 (#0), fn_arg_span: Some(src/main.rs:170:69: 170:71 (#0)), movability: None }), span: src/main.rs:170:69: 170:92 (#0) }]), span: src/main.rs:170:40: 170:93 (#0) }]), span: src/main.rs:170:15: 170:94 (#0) }, [Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).458), span: src/main.rs:171:13: 171:72 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).457), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:171:13: 171:15 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), segments: [PathSegment { ident: Ok#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).455), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456), expr_ty#0, None), span: src/main.rs:171:16: 171:23 (#0), default_binding_modes: true }], None), span: src/main.rs:171:13: 171:24 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).459), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).482), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).460), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).461), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#77), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#77, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).462), res: Err, args: None, infer_args: true }, PathSegment { ident: io#77, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).463), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#77, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).464), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#77) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).465), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).481), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).479), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }, PathSegment { ident: new_v1#78, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).480), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).469), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).468), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).466), kind: Lit(Spanned { node: Str("  Expression type: ", Cooked), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).467), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }]), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).478), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).477), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).476), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).475), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).473), kind: Path(LangItem(FormatArgument, src/main.rs:171:57: 171:61 (#78), None)), span: src/main.rs:171:57: 171:61 (#78) }, PathSegment { ident: new_debug#78, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).474), res: Err, args: None, infer_args: true })), span: src/main.rs:171:57: 171:61 (#78) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).472), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).470), kind: Path(Resolved(None, Path { span: src/main.rs:171:64: 171:71 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), segments: [PathSegment { ident: expr_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).471), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), args: None, infer_args: true }] })), span: src/main.rs:171:64: 171:71 (#0) }), span: src/main.rs:171:64: 171:71 (#78) }]), span: src/main.rs:171:57: 171:61 (#78) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#77) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#77) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).483), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#77), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#77) } }, Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).487), span: src/main.rs:172:13: 172:67 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).486), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:172:13: 172:16 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), segments: [PathSegment { ident: Err#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).484), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).485), kind: Wild, span: src/main.rs:172:17: 172:18 (#0), default_binding_modes: true }], None), span: src/main.rs:172:13: 172:19 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).488), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).501), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).489), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).490), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#79), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#79, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).491), res: Err, args: None, infer_args: true }, PathSegment { ident: io#79, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).492), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#79, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).493), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#79) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).494), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).500), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).498), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80) }, PathSegment { ident: new_const#80, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).499), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).497), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).496), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).495), kind: Lit(Spanned { node: Str("  Expression type: <unavailable>\n", Cooked), span: src/main.rs:172:32: 172:66 (#0) }), span: src/main.rs:172:32: 172:66 (#0) }]), span: src/main.rs:172:32: 172:66 (#0) }), span: src/main.rs:172:32: 172:66 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#79) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#79) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).502), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#79), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#79) } }], Normal), span: src/main.rs:170:9: 173:10 (#0) }), span: src/main.rs:170:9: 173:10 (#0) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).512), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).504), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).505), kind: Path(Resolved(None, Path { span: src/main.rs:176:9: 176:30 (#0), res: Def(Fn, DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr)), segments: [PathSegment { ident: intravisit#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).506), res: Def(Mod, DefId(120:726 ~ rustc_hir[6705]::intravisit)), args: None, infer_args: true }, PathSegment { ident: walk_expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).507), res: Def(Fn, DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr)), args: None, infer_args: true }] })), span: src/main.rs:176:9: 176:30 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).508), kind: Path(Resolved(None, Path { span: src/main.rs:176:31: 176:35 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).509), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:176:31: 176:35 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).510), kind: Path(Resolved(None, Path { span: src/main.rs:176:37: 176:41 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).511), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:176:37: 176:41 (#0) }]), span: src/main.rs:176:9: 176:42 (#0) }), span: src/main.rs:176:9: 176:43 (#0) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).513), rules: DefaultBlock, span: src/main.rs:105:65: 177:6 (#0), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).29), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).6), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).7), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#57), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#57, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).8), res: Err, args: None, infer_args: true }, PathSegment { ident: io#57, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).9), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#57, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).10), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#57) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).11), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).28), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).26), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }, PathSegment { ident: new_v1#58, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).27), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).15), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).14), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).12), kind: Lit(Spanned { node: Str("Expression (kind: ", Cooked), span: src/main.rs:107:18: 107:43 (#0) }), span: src/main.rs:107:18: 107:43 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).13), kind: Lit(Spanned { node: Str(")\n", Cooked), span: src/main.rs:107:18: 107:43 (#0) }), span: src/main.rs:107:18: 107:43 (#0) }]), span: src/main.rs:107:18: 107:43 (#0) }), span: src/main.rs:107:18: 107:43 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).25), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).24), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).23), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).22), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).20), kind: Path(LangItem(FormatArgument, src/main.rs:107:37: 107:41 (#58), None)), span: src/main.rs:107:37: 107:41 (#58) }, PathSegment { ident: new_debug#58, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).21), res: Err, args: None, infer_args: true })), span: src/main.rs:107:37: 107:41 (#58) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).19), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).16), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).17), kind: Path(Resolved(None, Path { span: src/main.rs:107:45: 107:49 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).18), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:107:45: 107:49 (#0) }, kind#0), span: src/main.rs:107:45: 107:54 (#0) }), span: src/main.rs:107:45: 107:54 (#58) }]), span: src/main.rs:107:37: 107:41 (#58) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#57) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#57) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).30), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#57), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).7), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#57), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#57, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).8), res: Err, args: None, infer_args: true }, PathSegment { ident: io#57, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).9), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#57, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).10), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#57) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).11), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).28), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).26), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }, PathSegment { ident: new_v1#58, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).27), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).15), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).14), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).12), kind: Lit(Spanned { node: Str("Expression (kind: ", Cooked), span: src/main.rs:107:18: 107:43 (#0) }), span: src/main.rs:107:18: 107:43 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).13), kind: Lit(Spanned { node: Str(")\n", Cooked), span: src/main.rs:107:18: 107:43 (#0) }), span: src/main.rs:107:18: 107:43 (#0) }]), span: src/main.rs:107:18: 107:43 (#0) }), span: src/main.rs:107:18: 107:43 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).25), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).24), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).23), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).22), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).20), kind: Path(LangItem(FormatArgument, src/main.rs:107:37: 107:41 (#58), None)), span: src/main.rs:107:37: 107:41 (#58) }, PathSegment { ident: new_debug#58, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).21), res: Err, args: None, infer_args: true })), span: src/main.rs:107:37: 107:41 (#58) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).19), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).16), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).17), kind: Path(Resolved(None, Path { span: src/main.rs:107:45: 107:49 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).18), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:107:45: 107:49 (#0) }, kind#0), span: src/main.rs:107:45: 107:54 (#0) }), span: src/main.rs:107:45: 107:54 (#58) }]), span: src/main.rs:107:37: 107:41 (#58) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#57), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#57, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).8), res: Err, args: None, infer_args: true }, PathSegment { ident: io#57, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).9), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#57, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).10), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).28), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).26), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }, PathSegment { ident: new_v1#58, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).27), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).15), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).14), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).12), kind: Lit(Spanned { node: Str("Expression (kind: ", Cooked), span: src/main.rs:107:18: 107:43 (#0) }), span: src/main.rs:107:18: 107:43 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).13), kind: Lit(Spanned { node: Str(")\n", Cooked), span: src/main.rs:107:18: 107:43 (#0) }), span: src/main.rs:107:18: 107:43 (#0) }]), span: src/main.rs:107:18: 107:43 (#0) }), span: src/main.rs:107:18: 107:43 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).25), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).24), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).23), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).22), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).20), kind: Path(LangItem(FormatArgument, src/main.rs:107:37: 107:41 (#58), None)), span: src/main.rs:107:37: 107:41 (#58) }, PathSegment { ident: new_debug#58, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).21), res: Err, args: None, infer_args: true })), span: src/main.rs:107:37: 107:41 (#58) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).19), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).16), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).17), kind: Path(Resolved(None, Path { span: src/main.rs:107:45: 107:49 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).18), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:107:45: 107:49 (#0) }, kind#0), span: src/main.rs:107:45: 107:54 (#0) }), span: src/main.rs:107:45: 107:54 (#58) }]), span: src/main.rs:107:37: 107:41 (#58) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).26), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }, PathSegment { ident: new_v1#58, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).27), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).14), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).12), kind: Lit(Spanned { node: Str("Expression (kind: ", Cooked), span: src/main.rs:107:18: 107:43 (#0) }), span: src/main.rs:107:18: 107:43 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).13), kind: Lit(Spanned { node: Str(")\n", Cooked), span: src/main.rs:107:18: 107:43 (#0) }), span: src/main.rs:107:18: 107:43 (#0) }]), span: src/main.rs:107:18: 107:43 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).12), kind: Lit(Spanned { node: Str("Expression (kind: ", Cooked), span: src/main.rs:107:18: 107:43 (#0) }), span: src/main.rs:107:18: 107:43 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).13), kind: Lit(Spanned { node: Str(")\n", Cooked), span: src/main.rs:107:18: 107:43 (#0) }), span: src/main.rs:107:18: 107:43 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Lit(Spanned { node: Str("Expression (kind: ", Cooked), span: src/main.rs:107:18: 107:43 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str(")\n", Cooked), span: src/main.rs:107:18: 107:43 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).24), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).23), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).22), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).20), kind: Path(LangItem(FormatArgument, src/main.rs:107:37: 107:41 (#58), None)), span: src/main.rs:107:37: 107:41 (#58) }, PathSegment { ident: new_debug#58, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).21), res: Err, args: None, infer_args: true })), span: src/main.rs:107:37: 107:41 (#58) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).19), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).16), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).17), kind: Path(Resolved(None, Path { span: src/main.rs:107:45: 107:49 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).18), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:107:45: 107:49 (#0) }, kind#0), span: src/main.rs:107:45: 107:54 (#0) }), span: src/main.rs:107:45: 107:54 (#58) }]), span: src/main.rs:107:37: 107:41 (#58) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#58) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).23), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).22), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).20), kind: Path(LangItem(FormatArgument, src/main.rs:107:37: 107:41 (#58), None)), span: src/main.rs:107:37: 107:41 (#58) }, PathSegment { ident: new_debug#58, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).21), res: Err, args: None, infer_args: true })), span: src/main.rs:107:37: 107:41 (#58) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).19), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).16), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).17), kind: Path(Resolved(None, Path { span: src/main.rs:107:45: 107:49 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).18), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:107:45: 107:49 (#0) }, kind#0), span: src/main.rs:107:45: 107:54 (#0) }), span: src/main.rs:107:45: 107:54 (#58) }]), span: src/main.rs:107:37: 107:41 (#58) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).22), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).20), kind: Path(LangItem(FormatArgument, src/main.rs:107:37: 107:41 (#58), None)), span: src/main.rs:107:37: 107:41 (#58) }, PathSegment { ident: new_debug#58, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).21), res: Err, args: None, infer_args: true })), span: src/main.rs:107:37: 107:41 (#58) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).19), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).16), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).17), kind: Path(Resolved(None, Path { span: src/main.rs:107:45: 107:49 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).18), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:107:45: 107:49 (#0) }, kind#0), span: src/main.rs:107:45: 107:54 (#0) }), span: src/main.rs:107:45: 107:54 (#58) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_debug
  Function type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).20), kind: Path(LangItem(FormatArgument, src/main.rs:107:37: 107:41 (#58), None)), span: src/main.rs:107:37: 107:41 (#58) }, PathSegment { ident: new_debug#58, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).21), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReErased, Adt(rustc_hir::ExprKind, [ReErased])])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).16), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).17), kind: Path(Resolved(None, Path { span: src/main.rs:107:45: 107:49 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).18), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:107:45: 107:49 (#0) }, kind#0), span: src/main.rs:107:45: 107:54 (#0) }))
  Expression type: &ReErased Adt(rustc_hir::ExprKind, [ReErased])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).17), kind: Path(Resolved(None, Path { span: src/main.rs:107:45: 107:49 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).18), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:107:45: 107:49 (#0) }, kind#0))
  Expression type: Adt(rustc_hir::ExprKind, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:107:45: 107:49 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).18), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_hir::Expr, [ReErased])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).34), kind: Path(Resolved(None, Path { span: src/main.rs:110:29: 110:53 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).35), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).36), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).37), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })), span: src/main.rs:110:29: 110:53 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).38), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).39), kind: Path(Resolved(None, Path { span: src/main.rs:110:54: 110:82 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).40), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).41), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).42), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:110:54: 110:82 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).43), kind: Closure(Closure { def_id: DefId(0:34 ~ main[cc0f]::{impl#1}::visit_expr::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:110:86: 110:86 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).44) }, fn_decl_span: src/main.rs:110:83: 110:85 (#0), fn_arg_span: Some(src/main.rs:110:83: 110:85 (#0)), movability: None }), span: src/main.rs:110:83: 116:10 (#0) }]), span: src/main.rs:110:54: 116:11 (#0) }]))
  Function call with 1 arguments
  Expression type: Adt(std::result::Result, [&ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased]), Adt(std::boxed::Box, [dyn [Binder(Trait(std::any::Any), []), Binder(AutoTrait(DefId(2:2765 ~ core[ae61]::marker::Send)), [])] + ReErased, Adt(std::alloc::Global, [])])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:110:29: 110:53 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).35), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).36), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).37), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:4782 ~ std[3ef1]::panic::catch_unwind), [Adt(std::panic::AssertUnwindSafe, [Closure(DefId(0:34 ~ main[cc0f]::{impl#1}::visit_expr::{closure#0}), [ReErased, i8, Binder(extern "RustCall" fn(()) -> &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased]), []), (&ReErased &ReErased mut Adt(PrintVisitor, [ReErased])&ReErased &ReErased Adt(rustc_hir::Expr, [ReErased])))])]), &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).39), kind: Path(Resolved(None, Path { span: src/main.rs:110:54: 110:82 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).40), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).41), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).42), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:110:54: 110:82 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).43), kind: Closure(Closure { def_id: DefId(0:34 ~ main[cc0f]::{impl#1}::visit_expr::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:110:86: 110:86 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).44) }, fn_decl_span: src/main.rs:110:83: 110:85 (#0), fn_arg_span: Some(src/main.rs:110:83: 110:85 (#0)), movability: None }), span: src/main.rs:110:83: 116:10 (#0) }]))
  Function call with 1 arguments
  Expression type: Adt(std::panic::AssertUnwindSafe, [Closure(DefId(0:34 ~ main[cc0f]::{impl#1}::visit_expr::{closure#0}), [ReErased, i8, Binder(extern "RustCall" fn(()) -> &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased]), []), (&ReErased &ReErased mut Adt(PrintVisitor, [ReErased])&ReErased &ReErased Adt(rustc_hir::Expr, [ReErased])))])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:110:54: 110:82 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).40), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).41), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).42), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0}), [Closure(DefId(0:34 ~ main[cc0f]::{impl#1}::visit_expr::{closure#0}), [ReErased, i8, Binder(extern "RustCall" fn(()) -> &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased]), []), (&ReErased &ReErased mut Adt(PrintVisitor, [ReErased])&ReErased &ReErased Adt(rustc_hir::Expr, [ReErased])))])])
Expression (kind: Closure(Closure { def_id: DefId(0:34 ~ main[cc0f]::{impl#1}::visit_expr::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:110:86: 110:86 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).44) }, fn_decl_span: src/main.rs:110:83: 110:85 (#0), fn_arg_span: Some(src/main.rs:110:83: 110:85 (#0)), movability: None }))
  Expression type: Closure(DefId(0:34 ~ main[cc0f]::{impl#1}::visit_expr::{closure#0}), [ReErased, i8, Binder(extern "RustCall" fn(()) -> &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased]), []), (&ReErased &ReErased mut Adt(PrintVisitor, [ReErased])&ReErased &ReErased Adt(rustc_hir::Expr, [ReErased])))])
Expression (kind: Block(Block { stmts: [], expr: Some(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).45), kind: MethodCall(PathSegment { ident: typeck_body#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).46), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).47), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).48), kind: Path(Resolved(None, Path { span: src/main.rs:111:13: 111:17 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).49), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:111:13: 111:17 (#0) }, tcx#0), span: src/main.rs:111:13: 111:21 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).50), kind: MethodCall(PathSegment { ident: body_owned_by#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).51), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).52), kind: MethodCall(PathSegment { ident: hir#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).53), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).54), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).55), kind: Path(Resolved(None, Path { span: src/main.rs:112:17: 112:21 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).56), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:112:17: 112:21 (#0) }, tcx#0), span: src/main.rs:112:17: 112:25 (#0) }, [], src/main.rs:113:22: 113:27 (#0)), span: src/main.rs:112:17: 113:27 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).57), kind: MethodCall(PathSegment { ident: enclosing_body_owner#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).58), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).59), kind: MethodCall(PathSegment { ident: hir#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).60), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).61), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).62), kind: Path(Resolved(None, Path { span: src/main.rs:114:36: 114:40 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).63), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:114:36: 114:40 (#0) }, tcx#0), span: src/main.rs:114:36: 114:44 (#0) }, [], src/main.rs:114:45: 114:50 (#0)), span: src/main.rs:114:36: 114:50 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).64), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).65), kind: Path(Resolved(None, Path { span: src/main.rs:114:72: 114:76 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).66), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:114:72: 114:76 (#0) }, hir_id#0), span: src/main.rs:114:72: 114:83 (#0) }], src/main.rs:114:51: 114:84 (#0)), span: src/main.rs:114:36: 114:84 (#0) }], src/main.rs:114:22: 114:85 (#0)), span: src/main.rs:112:17: 114:85 (#0) }], src/main.rs:111:22: 115:14 (#0)), span: src/main.rs:111:13: 115:14 (#0) }), hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).67), rules: DefaultBlock, span: src/main.rs:110:86: 116:10 (#0), targeted_by_break: false }, None))
  Expression type: &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])
Expression (kind: MethodCall(PathSegment { ident: typeck_body#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).46), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).47), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).48), kind: Path(Resolved(None, Path { span: src/main.rs:111:13: 111:17 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).49), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:111:13: 111:17 (#0) }, tcx#0), span: src/main.rs:111:13: 111:21 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).50), kind: MethodCall(PathSegment { ident: body_owned_by#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).51), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).52), kind: MethodCall(PathSegment { ident: hir#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).53), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).54), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).55), kind: Path(Resolved(None, Path { span: src/main.rs:112:17: 112:21 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).56), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:112:17: 112:21 (#0) }, tcx#0), span: src/main.rs:112:17: 112:25 (#0) }, [], src/main.rs:113:22: 113:27 (#0)), span: src/main.rs:112:17: 113:27 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).57), kind: MethodCall(PathSegment { ident: enclosing_body_owner#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).58), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).59), kind: MethodCall(PathSegment { ident: hir#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).60), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).61), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).62), kind: Path(Resolved(None, Path { span: src/main.rs:114:36: 114:40 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).63), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:114:36: 114:40 (#0) }, tcx#0), span: src/main.rs:114:36: 114:44 (#0) }, [], src/main.rs:114:45: 114:50 (#0)), span: src/main.rs:114:36: 114:50 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).64), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).65), kind: Path(Resolved(None, Path { span: src/main.rs:114:72: 114:76 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).66), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:114:72: 114:76 (#0) }, hir_id#0), span: src/main.rs:114:72: 114:83 (#0) }], src/main.rs:114:51: 114:84 (#0)), span: src/main.rs:114:36: 114:84 (#0) }], src/main.rs:114:22: 114:85 (#0)), span: src/main.rs:112:17: 114:85 (#0) }], src/main.rs:111:22: 115:14 (#0)))
  Method call: typeck_body with 1 arguments
  Receiver type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
  Method: rustc_middle::ty::<impl rustc_middle::ty::TyCtxt<'tcx>>::typeck_body
  Method type: FnDef(DefId(155:9007 ~ rustc_middle[ca3f]::ty::{impl#81}::typeck_body), [ReEarlyBound(DefId(155:9006 ~ rustc_middle[ca3f]::ty::{impl#81}::'tcx), 0, 'tcx)])
  Expression type: &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).48), kind: Path(Resolved(None, Path { span: src/main.rs:111:13: 111:17 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).49), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:111:13: 111:17 (#0) }, tcx#0))
  Expression type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:111:13: 111:17 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).49), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })))
  Expression type: &ReErased mut Adt(PrintVisitor, [ReErased])
Expression (kind: MethodCall(PathSegment { ident: body_owned_by#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).51), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).52), kind: MethodCall(PathSegment { ident: hir#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).53), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).54), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).55), kind: Path(Resolved(None, Path { span: src/main.rs:112:17: 112:21 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).56), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:112:17: 112:21 (#0) }, tcx#0), span: src/main.rs:112:17: 112:25 (#0) }, [], src/main.rs:113:22: 113:27 (#0)), span: src/main.rs:112:17: 113:27 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).57), kind: MethodCall(PathSegment { ident: enclosing_body_owner#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).58), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).59), kind: MethodCall(PathSegment { ident: hir#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).60), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).61), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).62), kind: Path(Resolved(None, Path { span: src/main.rs:114:36: 114:40 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).63), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:114:36: 114:40 (#0) }, tcx#0), span: src/main.rs:114:36: 114:44 (#0) }, [], src/main.rs:114:45: 114:50 (#0)), span: src/main.rs:114:36: 114:50 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).64), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).65), kind: Path(Resolved(None, Path { span: src/main.rs:114:72: 114:76 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).66), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:114:72: 114:76 (#0) }, hir_id#0), span: src/main.rs:114:72: 114:83 (#0) }], src/main.rs:114:51: 114:84 (#0)), span: src/main.rs:114:36: 114:84 (#0) }], src/main.rs:114:22: 114:85 (#0)))
  Method call: body_owned_by with 1 arguments
  Receiver type: Adt(rustc_middle::hir::map::Map, [ReErased])
  Method: rustc_middle::hir::map::Map::<'hir>::body_owned_by
  Method type: FnDef(DefId(155:148 ~ rustc_middle[ca3f]::hir::map::{impl#2}::body_owned_by), [ReEarlyBound(DefId(155:110 ~ rustc_middle[ca3f]::hir::map::{impl#2}::'hir), 0, 'hir)])
  Expression type: Adt(rustc_hir::BodyId, [])
Expression (kind: MethodCall(PathSegment { ident: hir#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).53), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).54), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).55), kind: Path(Resolved(None, Path { span: src/main.rs:112:17: 112:21 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).56), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:112:17: 112:21 (#0) }, tcx#0), span: src/main.rs:112:17: 112:25 (#0) }, [], src/main.rs:113:22: 113:27 (#0)))
  Method call: hir with 0 arguments
  Receiver type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
  Method: rustc_middle::hir::<impl rustc_middle::ty::TyCtxt<'tcx>>::hir
  Method type: FnDef(DefId(155:352 ~ rustc_middle[ca3f]::hir::{impl#2}::hir), [ReEarlyBound(DefId(155:351 ~ rustc_middle[ca3f]::hir::{impl#2}::'tcx), 0, 'tcx)])
  Expression type: Adt(rustc_middle::hir::map::Map, [ReErased])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).55), kind: Path(Resolved(None, Path { span: src/main.rs:112:17: 112:21 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).56), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:112:17: 112:21 (#0) }, tcx#0))
  Expression type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:112:17: 112:21 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).56), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })))
  Expression type: &ReErased mut Adt(PrintVisitor, [ReErased])
Expression (kind: MethodCall(PathSegment { ident: enclosing_body_owner#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).58), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).59), kind: MethodCall(PathSegment { ident: hir#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).60), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).61), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).62), kind: Path(Resolved(None, Path { span: src/main.rs:114:36: 114:40 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).63), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:114:36: 114:40 (#0) }, tcx#0), span: src/main.rs:114:36: 114:44 (#0) }, [], src/main.rs:114:45: 114:50 (#0)), span: src/main.rs:114:36: 114:50 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).64), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).65), kind: Path(Resolved(None, Path { span: src/main.rs:114:72: 114:76 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).66), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:114:72: 114:76 (#0) }, hir_id#0), span: src/main.rs:114:72: 114:83 (#0) }], src/main.rs:114:51: 114:84 (#0)))
  Method call: enclosing_body_owner with 1 arguments
  Receiver type: Adt(rustc_middle::hir::map::Map, [ReErased])
  Method: rustc_middle::hir::map::Map::<'hir>::enclosing_body_owner
  Method type: FnDef(DefId(155:144 ~ rustc_middle[ca3f]::hir::map::{impl#2}::enclosing_body_owner), [ReEarlyBound(DefId(155:110 ~ rustc_middle[ca3f]::hir::map::{impl#2}::'hir), 0, 'hir)])
  Expression type: Adt(rustc_span::def_id::LocalDefId, [])
Expression (kind: MethodCall(PathSegment { ident: hir#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).60), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).61), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).62), kind: Path(Resolved(None, Path { span: src/main.rs:114:36: 114:40 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).63), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:114:36: 114:40 (#0) }, tcx#0), span: src/main.rs:114:36: 114:44 (#0) }, [], src/main.rs:114:45: 114:50 (#0)))
  Method call: hir with 0 arguments
  Receiver type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
  Method: rustc_middle::hir::<impl rustc_middle::ty::TyCtxt<'tcx>>::hir
  Method type: FnDef(DefId(155:352 ~ rustc_middle[ca3f]::hir::{impl#2}::hir), [ReEarlyBound(DefId(155:351 ~ rustc_middle[ca3f]::hir::{impl#2}::'tcx), 0, 'tcx)])
  Expression type: Adt(rustc_middle::hir::map::Map, [ReErased])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).62), kind: Path(Resolved(None, Path { span: src/main.rs:114:36: 114:40 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).63), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:114:36: 114:40 (#0) }, tcx#0))
  Expression type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:114:36: 114:40 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).63), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })))
  Expression type: &ReErased mut Adt(PrintVisitor, [ReErased])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).65), kind: Path(Resolved(None, Path { span: src/main.rs:114:72: 114:76 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).66), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:114:72: 114:76 (#0) }, hir_id#0))
  Expression type: Adt(rustc_hir::HirId, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:114:72: 114:76 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).66), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_hir::Expr, [ReErased])
Expression (kind: Match(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).72), kind: Path(Resolved(None, Path { span: src/main.rs:118:28: 118:41 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).69)), segments: [PathSegment { ident: typeck_result#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).73), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).69)), args: None, infer_args: true }] })), span: src/main.rs:118:28: 118:41 (#0) }, [Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).77), span: src/main.rs:119:13: 119:33 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).76), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:119:13: 119:15 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), segments: [PathSegment { ident: Ok#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).74), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).75), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).75), typeck#0, None), span: src/main.rs:119:16: 119:22 (#0), default_binding_modes: true }], None), span: src/main.rs:119:13: 119:23 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).78), kind: Path(Resolved(None, Path { span: src/main.rs:119:27: 119:33 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).75)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).79), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).75)), args: None, infer_args: true }] })), span: src/main.rs:119:27: 119:33 (#0) } }, Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).83), span: src/main.rs:120:13: 125:14 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).82), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:120:13: 120:16 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), segments: [PathSegment { ident: Err#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).80), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).81), kind: Wild, span: src/main.rs:120:17: 120:18 (#0), default_binding_modes: true }], None), span: src/main.rs:120:13: 120:19 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).84), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).100), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).85), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).98), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).86), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).87), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#59), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).88), res: Err, args: None, infer_args: true }, PathSegment { ident: io#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).89), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).90), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#59) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).91), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).97), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).95), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }, PathSegment { ident: new_const#60, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).96), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).94), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).93), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).92), kind: Lit(Spanned { node: Str("  Could not get type information for this expression\n", Cooked), span: src/main.rs:121:26: 121:80 (#0) }), span: src/main.rs:121:26: 121:80 (#0) }]), span: src/main.rs:121:26: 121:80 (#0) }), span: src/main.rs:121:26: 121:80 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#59) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#59) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).99), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#59), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#59) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#59) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).109), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).101), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).102), kind: Path(Resolved(None, Path { span: src/main.rs:123:17: 123:38 (#0), res: Def(Fn, DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr)), segments: [PathSegment { ident: intravisit#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).103), res: Def(Mod, DefId(120:726 ~ rustc_hir[6705]::intravisit)), args: None, infer_args: true }, PathSegment { ident: walk_expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).104), res: Def(Fn, DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr)), args: None, infer_args: true }] })), span: src/main.rs:123:17: 123:38 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).105), kind: Path(Resolved(None, Path { span: src/main.rs:123:39: 123:43 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).106), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:123:39: 123:43 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).107), kind: Path(Resolved(None, Path { span: src/main.rs:123:45: 123:49 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).108), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:123:45: 123:49 (#0) }]), span: src/main.rs:123:17: 123:50 (#0) }), span: src/main.rs:123:17: 123:51 (#0) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).111), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).110), kind: Ret(None), span: src/main.rs:124:17: 124:23 (#0) }), span: src/main.rs:124:17: 124:24 (#0) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).112), rules: DefaultBlock, span: src/main.rs:120:23: 125:14 (#0), targeted_by_break: false }, None), span: src/main.rs:120:23: 125:14 (#0) } }], Normal))
  Expression type: &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:118:28: 118:41 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).69)), segments: [PathSegment { ident: typeck_result#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).73), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).69)), args: None, infer_args: true }] })))
  Expression type: Adt(std::result::Result, [&ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased]), Adt(std::boxed::Box, [dyn [Binder(Trait(std::any::Any), []), Binder(AutoTrait(DefId(2:2765 ~ core[ae61]::marker::Send)), [])] + ReErased, Adt(std::alloc::Global, [])])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:119:27: 119:33 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).75)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).79), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).75)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).100), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).85), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).98), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).86), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).87), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#59), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).88), res: Err, args: None, infer_args: true }, PathSegment { ident: io#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).89), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).90), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#59) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).91), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).97), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).95), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }, PathSegment { ident: new_const#60, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).96), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).94), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).93), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).92), kind: Lit(Spanned { node: Str("  Could not get type information for this expression\n", Cooked), span: src/main.rs:121:26: 121:80 (#0) }), span: src/main.rs:121:26: 121:80 (#0) }]), span: src/main.rs:121:26: 121:80 (#0) }), span: src/main.rs:121:26: 121:80 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#59) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#59) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).99), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#59), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#59) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#59) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).109), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).101), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).102), kind: Path(Resolved(None, Path { span: src/main.rs:123:17: 123:38 (#0), res: Def(Fn, DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr)), segments: [PathSegment { ident: intravisit#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).103), res: Def(Mod, DefId(120:726 ~ rustc_hir[6705]::intravisit)), args: None, infer_args: true }, PathSegment { ident: walk_expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).104), res: Def(Fn, DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr)), args: None, infer_args: true }] })), span: src/main.rs:123:17: 123:38 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).105), kind: Path(Resolved(None, Path { span: src/main.rs:123:39: 123:43 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).106), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:123:39: 123:43 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).107), kind: Path(Resolved(None, Path { span: src/main.rs:123:45: 123:49 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).108), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:123:45: 123:49 (#0) }]), span: src/main.rs:123:17: 123:50 (#0) }), span: src/main.rs:123:17: 123:51 (#0) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).111), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).110), kind: Ret(None), span: src/main.rs:124:17: 124:23 (#0) }), span: src/main.rs:124:17: 124:24 (#0) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).112), rules: DefaultBlock, span: src/main.rs:120:23: 125:14 (#0), targeted_by_break: false }, None))
  Expression type: !
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).98), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).86), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).87), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#59), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).88), res: Err, args: None, infer_args: true }, PathSegment { ident: io#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).89), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).90), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#59) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).91), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).97), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).95), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }, PathSegment { ident: new_const#60, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).96), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).94), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).93), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).92), kind: Lit(Spanned { node: Str("  Could not get type information for this expression\n", Cooked), span: src/main.rs:121:26: 121:80 (#0) }), span: src/main.rs:121:26: 121:80 (#0) }]), span: src/main.rs:121:26: 121:80 (#0) }), span: src/main.rs:121:26: 121:80 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#59) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#59) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).99), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#59), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).87), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#59), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).88), res: Err, args: None, infer_args: true }, PathSegment { ident: io#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).89), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).90), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#59) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).91), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).97), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).95), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }, PathSegment { ident: new_const#60, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).96), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).94), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).93), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).92), kind: Lit(Spanned { node: Str("  Could not get type information for this expression\n", Cooked), span: src/main.rs:121:26: 121:80 (#0) }), span: src/main.rs:121:26: 121:80 (#0) }]), span: src/main.rs:121:26: 121:80 (#0) }), span: src/main.rs:121:26: 121:80 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#59), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).88), res: Err, args: None, infer_args: true }, PathSegment { ident: io#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).89), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#59, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).90), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).97), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).95), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }, PathSegment { ident: new_const#60, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).96), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).94), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).93), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).92), kind: Lit(Spanned { node: Str("  Could not get type information for this expression\n", Cooked), span: src/main.rs:121:26: 121:80 (#0) }), span: src/main.rs:121:26: 121:80 (#0) }]), span: src/main.rs:121:26: 121:80 (#0) }), span: src/main.rs:121:26: 121:80 (#0) }]))
  Function call with 1 arguments
  Called function: std::fmt::Arguments::<'a>::new_const
  Function type: FnDef(DefId(2:9415 ~ core[ae61]::fmt::{impl#2}::new_const), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).95), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#60) }, PathSegment { ident: new_const#60, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).96), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9415 ~ core[ae61]::fmt::{impl#2}::new_const), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).93), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).92), kind: Lit(Spanned { node: Str("  Could not get type information for this expression\n", Cooked), span: src/main.rs:121:26: 121:80 (#0) }), span: src/main.rs:121:26: 121:80 (#0) }]), span: src/main.rs:121:26: 121:80 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).92), kind: Lit(Spanned { node: Str("  Could not get type information for this expression\n", Cooked), span: src/main.rs:121:26: 121:80 (#0) }), span: src/main.rs:121:26: 121:80 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Lit(Spanned { node: Str("  Could not get type information for this expression\n", Cooked), span: src/main.rs:121:26: 121:80 (#0) }))
  Expression type: &ReErased str
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).102), kind: Path(Resolved(None, Path { span: src/main.rs:123:17: 123:38 (#0), res: Def(Fn, DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr)), segments: [PathSegment { ident: intravisit#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).103), res: Def(Mod, DefId(120:726 ~ rustc_hir[6705]::intravisit)), args: None, infer_args: true }, PathSegment { ident: walk_expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).104), res: Def(Fn, DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr)), args: None, infer_args: true }] })), span: src/main.rs:123:17: 123:38 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).105), kind: Path(Resolved(None, Path { span: src/main.rs:123:39: 123:43 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).106), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:123:39: 123:43 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).107), kind: Path(Resolved(None, Path { span: src/main.rs:123:45: 123:49 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).108), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:123:45: 123:49 (#0) }]))
  Function call with 2 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:123:17: 123:38 (#0), res: Def(Fn, DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr)), segments: [PathSegment { ident: intravisit#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).103), res: Def(Mod, DefId(120:726 ~ rustc_hir[6705]::intravisit)), args: None, infer_args: true }, PathSegment { ident: walk_expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).104), res: Def(Fn, DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr), [ReErased, Adt(PrintVisitor, [ReErased])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:123:39: 123:43 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).106), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })))
  Expression type: &ReErased mut Adt(PrintVisitor, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:123:45: 123:49 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).108), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_hir::Expr, [ReErased])
Expression (kind: Ret(None))
  Expression type: !
Expression (kind: Match(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).116), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).117), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).118), kind: Path(Resolved(None, Path { span: src/main.rs:129:16: 129:20 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).119), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:129:16: 129:20 (#0) }, kind#0), span: src/main.rs:129:16: 129:25 (#0) }), span: src/main.rs:129:15: 129:25 (#0) }, [Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).126), span: src/main.rs:130:13: 141:14 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).125), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:130:13: 130:38 (#0), res: Def(Ctor(Variant, Fn), DefId(120:2880 ~ rustc_hir[6705]::hir::ExprKind::Call::{constructor#0})), segments: [PathSegment { ident: rustc_hir#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).120), res: Def(Mod, DefId(120:0 ~ rustc_hir[6705])), args: None, infer_args: true }, PathSegment { ident: ExprKind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).121), res: Def(Enum, DefId(120:2871 ~ rustc_hir[6705]::hir::ExprKind)), args: None, infer_args: true }, PathSegment { ident: Call#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).122), res: Def(Ctor(Variant, Fn), DefId(120:2880 ~ rustc_hir[6705]::hir::ExprKind::Call::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123), func#0, None), span: src/main.rs:130:39: 130:43 (#0), default_binding_modes: true }, Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124), args#0, None), span: src/main.rs:130:45: 130:49 (#0), default_binding_modes: true }], None), span: src/main.rs:130:13: 130:50 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).127), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).155), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).128), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).153), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).129), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).130), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#61), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).131), res: Err, args: None, infer_args: true }, PathSegment { ident: io#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).132), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).133), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#61) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).134), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).152), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).150), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }, PathSegment { ident: new_v1#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).151), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).138), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).137), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).135), kind: Lit(Spanned { node: Str("  Function call with ", Cooked), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).136), kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }]), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).149), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).148), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).147), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).144), kind: Path(LangItem(FormatArgument, src/main.rs:131:48: 131:50 (#62), None)), span: src/main.rs:131:48: 131:50 (#62) }, PathSegment { ident: new_display#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).145), res: Err, args: None, infer_args: true })), span: src/main.rs:131:48: 131:50 (#62) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).139), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).140), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).141), kind: Path(Resolved(None, Path { span: src/main.rs:131:63: 131:67 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).142), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), args: None, infer_args: true }] })), span: src/main.rs:131:63: 131:67 (#0) }, [], src/main.rs:131:68: 131:73 (#0)), span: src/main.rs:131:63: 131:73 (#0) }), span: src/main.rs:131:63: 131:73 (#62) }]), span: src/main.rs:131:48: 131:50 (#62) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#61) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#61) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).154), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#61), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#61) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#61) }], expr: Some(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).156), kind: If(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).157), kind: Let(Let { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).158), span: src/main.rs:134:20: 134:80 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).161), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:134:24: 134:28 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).159), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160), def_id#0, None), span: src/main.rs:134:29: 134:35 (#0), default_binding_modes: true }], None), span: src/main.rs:134:24: 134:36 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).162), kind: MethodCall(PathSegment { ident: type_dependent_def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).163), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).164), kind: Path(Resolved(None, Path { span: src/main.rs:134:39: 134:45 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).165), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })), span: src/main.rs:134:39: 134:45 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).166), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).167), kind: Path(Resolved(None, Path { span: src/main.rs:134:68: 134:72 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123)), segments: [PathSegment { ident: func#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).168), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123)), args: None, infer_args: true }] })), span: src/main.rs:134:68: 134:72 (#0) }, hir_id#0), span: src/main.rs:134:68: 134:79 (#0) }], src/main.rs:134:46: 134:80 (#0)), span: src/main.rs:134:39: 134:80 (#0) } }), span: src/main.rs:134:20: 134:80 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).234), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).199), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).169), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).197), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).170), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).171), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#63), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).172), res: Err, args: None, infer_args: true }, PathSegment { ident: io#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).173), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).174), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#63) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).175), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).196), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).194), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, PathSegment { ident: new_v1#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).195), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).179), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).178), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).176), kind: Lit(Spanned { node: Str("  Called function: ", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).177), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }]), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).193), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).192), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).191), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).190), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).188), kind: Path(LangItem(FormatArgument, src/main.rs:135:50: 135:52 (#64), None)), span: src/main.rs:135:50: 135:52 (#64) }, PathSegment { ident: new_display#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).189), res: Err, args: None, infer_args: true })), span: src/main.rs:135:50: 135:52 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).187), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).180), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).181), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).182), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).183), kind: Path(Resolved(None, Path { span: src/main.rs:135:55: 135:59 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).184), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:135:55: 135:59 (#0) }, tcx#0), span: src/main.rs:135:55: 135:63 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).185), kind: Path(Resolved(None, Path { span: src/main.rs:135:77: 135:83 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).186), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:135:77: 135:83 (#0) }], src/main.rs:135:64: 135:84 (#0)), span: src/main.rs:135:55: 135:84 (#0) }), span: src/main.rs:135:55: 135:84 (#64) }]), span: src/main.rs:135:50: 135:52 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#63) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#63) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).198), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#63), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#63) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#63) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).232), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).200), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).230), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).201), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).202), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#65), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).203), res: Err, args: None, infer_args: true }, PathSegment { ident: io#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).204), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).205), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#65) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).206), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).229), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).227), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, PathSegment { ident: new_v1#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).228), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).210), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).209), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).207), kind: Lit(Spanned { node: Str("  Function type: ", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).208), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }]), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).226), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).225), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).224), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).223), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).221), kind: Path(LangItem(FormatArgument, src/main.rs:137:43: 137:47 (#66), None)), span: src/main.rs:137:43: 137:47 (#66) }, PathSegment { ident: new_debug#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).222), res: Err, args: None, infer_args: true })), span: src/main.rs:137:43: 137:47 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).211), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).212), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).213), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).214), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).215), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).216), kind: Path(Resolved(None, Path { span: src/main.rs:138:25: 138:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).217), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:138:25: 138:29 (#0) }, tcx#0), span: src/main.rs:138:25: 138:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).218), kind: Path(Resolved(None, Path { span: src/main.rs:138:42: 138:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).219), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:138:42: 138:48 (#0) }], src/main.rs:138:34: 138:49 (#0)), span: src/main.rs:138:25: 138:49 (#0) }, [], src/main.rs:138:50: 138:72 (#0)), span: src/main.rs:138:25: 138:72 (#0) }), span: src/main.rs:138:25: 138:72 (#66) }]), span: src/main.rs:137:43: 137:47 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#65) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#65) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).231), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#65), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#65) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#65) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).233), rules: DefaultBlock, span: src/main.rs:134:81: 140:18 (#0), targeted_by_break: false }, None), span: src/main.rs:134:81: 140:18 (#0) }, None), span: src/main.rs:134:17: 140:18 (#0) }), hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).235), rules: DefaultBlock, span: src/main.rs:130:54: 141:14 (#0), targeted_by_break: false }, None), span: src/main.rs:130:54: 141:14 (#0) } }, Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).244), span: src/main.rs:142:13: 165:14 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).243), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:142:13: 142:44 (#0), res: Def(Ctor(Variant, Fn), DefId(120:2884 ~ rustc_hir[6705]::hir::ExprKind::MethodCall::{constructor#0})), segments: [PathSegment { ident: rustc_hir#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).236), res: Def(Mod, DefId(120:0 ~ rustc_hir[6705])), args: None, infer_args: true }, PathSegment { ident: ExprKind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).237), res: Def(Enum, DefId(120:2871 ~ rustc_hir[6705]::hir::ExprKind)), args: None, infer_args: true }, PathSegment { ident: MethodCall#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).238), res: Def(Ctor(Variant, Fn), DefId(120:2884 ~ rustc_hir[6705]::hir::ExprKind::MethodCall::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239), path_segment#0, None), span: src/main.rs:142:45: 142:57 (#0), default_binding_modes: true }, Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).240), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).240), receiver#0, None), span: src/main.rs:142:59: 142:67 (#0), default_binding_modes: true }, Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241), args#0, None), span: src/main.rs:142:69: 142:73 (#0), default_binding_modes: true }, Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).242), kind: Wild, span: src/main.rs:142:75: 142:76 (#0), default_binding_modes: true }], None), span: src/main.rs:142:13: 142:77 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).245), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).282), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).246), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).280), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).247), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).248), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#67), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).249), res: Err, args: None, infer_args: true }, PathSegment { ident: io#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).250), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).251), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#67) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).252), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).279), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).277), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }, PathSegment { ident: new_v1#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).278), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).257), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).256), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).253), kind: Lit(Spanned { node: Str("  Method call: ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).254), kind: Lit(Spanned { node: Str(" with ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).255), kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }]), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).276), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).275), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).265), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).264), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).262), kind: Path(LangItem(FormatArgument, src/main.rs:144:37: 144:39 (#68), None)), span: src/main.rs:144:37: 144:39 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).263), res: Err, args: None, infer_args: true })), span: src/main.rs:144:37: 144:39 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).261), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).258), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).259), kind: Path(Resolved(None, Path { span: src/main.rs:145:21: 145:33 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), segments: [PathSegment { ident: path_segment#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).260), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), args: None, infer_args: true }] })), span: src/main.rs:145:21: 145:33 (#0) }, ident#0), span: src/main.rs:145:21: 145:39 (#0) }), span: src/main.rs:145:21: 145:39 (#68) }]), span: src/main.rs:144:37: 144:39 (#68) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).274), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).273), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).271), kind: Path(LangItem(FormatArgument, src/main.rs:144:45: 144:47 (#68), None)), span: src/main.rs:144:45: 144:47 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).272), res: Err, args: None, infer_args: true })), span: src/main.rs:144:45: 144:47 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).270), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).266), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).267), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).268), kind: Path(Resolved(None, Path { span: src/main.rs:146:21: 146:25 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).269), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), args: None, infer_args: true }] })), span: src/main.rs:146:21: 146:25 (#0) }, [], src/main.rs:146:26: 146:31 (#0)), span: src/main.rs:146:21: 146:31 (#0) }), span: src/main.rs:146:21: 146:31 (#68) }]), span: src/main.rs:144:45: 144:47 (#68) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#67) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#67) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).281), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#67), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#67) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#67) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).351), kind: Expr(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).283), kind: Match(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).284), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).285), kind: Path(Resolved(None, Path { span: src/main.rs:150:23: 150:47 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).286), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).287), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).288), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })), span: src/main.rs:150:23: 150:47 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).289), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).290), kind: Path(Resolved(None, Path { span: src/main.rs:150:48: 150:76 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).291), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).292), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).293), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:150:48: 150:76 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).294), kind: Closure(Closure { def_id: DefId(0:35 ~ main[cc0f]::{impl#1}::visit_expr::{closure#1}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:150:80: 150:80 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).295) }, fn_decl_span: src/main.rs:150:77: 150:79 (#0), fn_arg_span: Some(src/main.rs:150:77: 150:79 (#0)), movability: None }), span: src/main.rs:150:77: 152:18 (#0) }]), span: src/main.rs:150:48: 152:19 (#0) }]), span: src/main.rs:150:23: 152:20 (#0) }, [Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).306), span: src/main.rs:153:21: 153:86 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).305), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:153:21: 153:23 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), segments: [PathSegment { ident: Ok#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).303), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304), receiver_ty#0, None), span: src/main.rs:153:24: 153:35 (#0), default_binding_modes: true }], None), span: src/main.rs:153:21: 153:36 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).307), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).330), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).308), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).309), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#69), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).310), res: Err, args: None, infer_args: true }, PathSegment { ident: io#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).311), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).312), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#69) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).313), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).329), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).327), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }, PathSegment { ident: new_v1#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).328), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).317), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).316), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).314), kind: Lit(Spanned { node: Str("  Receiver type: ", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).315), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }]), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).326), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).325), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).324), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).321), kind: Path(LangItem(FormatArgument, src/main.rs:153:67: 153:71 (#70), None)), span: src/main.rs:153:67: 153:71 (#70) }, PathSegment { ident: new_debug#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).322), res: Err, args: None, infer_args: true })), span: src/main.rs:153:67: 153:71 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).318), kind: Path(Resolved(None, Path { span: src/main.rs:153:74: 153:85 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), segments: [PathSegment { ident: receiver_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).319), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), args: None, infer_args: true }] })), span: src/main.rs:153:74: 153:85 (#0) }), span: src/main.rs:153:74: 153:85 (#70) }]), span: src/main.rs:153:67: 153:71 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#69) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#69) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).331), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#69), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#69) } }, Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).335), span: src/main.rs:154:21: 154:73 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).334), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:154:21: 154:24 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), segments: [PathSegment { ident: Err#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).332), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).333), kind: Wild, span: src/main.rs:154:25: 154:26 (#0), default_binding_modes: true }], None), span: src/main.rs:154:21: 154:27 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).336), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).349), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).337), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).338), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#71), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).339), res: Err, args: None, infer_args: true }, PathSegment { ident: io#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).340), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).341), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#71) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).342), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).348), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).346), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }, PathSegment { ident: new_const#72, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).347), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).345), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).344), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).343), kind: Lit(Spanned { node: Str("  Receiver type: <unavailable>\n", Cooked), span: src/main.rs:154:40: 154:72 (#0) }), span: src/main.rs:154:40: 154:72 (#0) }]), span: src/main.rs:154:40: 154:72 (#0) }), span: src/main.rs:154:40: 154:72 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#71) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#71) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).350), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#71), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#71) } }], Normal), span: src/main.rs:150:17: 155:18 (#0) }), span: src/main.rs:150:17: 155:18 (#0) }], expr: Some(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).352), kind: If(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).353), kind: Let(Let { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).354), span: src/main.rs:158:20: 158:80 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).357), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:158:24: 158:28 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).355), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356), def_id#0, None), span: src/main.rs:158:29: 158:35 (#0), default_binding_modes: true }], None), span: src/main.rs:158:24: 158:36 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).358), kind: MethodCall(PathSegment { ident: type_dependent_def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).359), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).360), kind: Path(Resolved(None, Path { span: src/main.rs:158:39: 158:45 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).361), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })), span: src/main.rs:158:39: 158:45 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).362), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).363), kind: Path(Resolved(None, Path { span: src/main.rs:158:68: 158:72 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).364), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:158:68: 158:72 (#0) }, hir_id#0), span: src/main.rs:158:68: 158:79 (#0) }], src/main.rs:158:46: 158:80 (#0)), span: src/main.rs:158:39: 158:80 (#0) } }), span: src/main.rs:158:20: 158:80 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).430), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).395), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).365), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).393), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).366), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).367), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#73), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).368), res: Err, args: None, infer_args: true }, PathSegment { ident: io#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).369), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).370), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#73) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).371), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).392), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).390), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, PathSegment { ident: new_v1#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).391), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).375), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).374), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).372), kind: Lit(Spanned { node: Str("  Method: ", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).373), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }]), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).389), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).388), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).387), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).386), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).384), kind: Path(LangItem(FormatArgument, src/main.rs:159:41: 159:43 (#74), None)), span: src/main.rs:159:41: 159:43 (#74) }, PathSegment { ident: new_display#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).385), res: Err, args: None, infer_args: true })), span: src/main.rs:159:41: 159:43 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).383), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).376), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).377), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).378), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).379), kind: Path(Resolved(None, Path { span: src/main.rs:159:46: 159:50 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).380), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:159:46: 159:50 (#0) }, tcx#0), span: src/main.rs:159:46: 159:54 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).381), kind: Path(Resolved(None, Path { span: src/main.rs:159:68: 159:74 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).382), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:159:68: 159:74 (#0) }], src/main.rs:159:55: 159:75 (#0)), span: src/main.rs:159:46: 159:75 (#0) }), span: src/main.rs:159:46: 159:75 (#74) }]), span: src/main.rs:159:41: 159:43 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#73) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#73) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).394), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#73), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#73) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#73) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).428), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).396), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).426), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).397), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).398), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#75), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).399), res: Err, args: None, infer_args: true }, PathSegment { ident: io#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).400), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).401), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#75) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).402), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).425), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).423), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, PathSegment { ident: new_v1#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).424), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).406), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).405), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).403), kind: Lit(Spanned { node: Str("  Method type: ", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).404), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }]), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).422), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).421), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).420), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).419), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).417), kind: Path(LangItem(FormatArgument, src/main.rs:161:41: 161:45 (#76), None)), span: src/main.rs:161:41: 161:45 (#76) }, PathSegment { ident: new_debug#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).418), res: Err, args: None, infer_args: true })), span: src/main.rs:161:41: 161:45 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).416), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).407), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).408), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).409), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).410), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).411), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).412), kind: Path(Resolved(None, Path { span: src/main.rs:162:25: 162:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).413), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:162:25: 162:29 (#0) }, tcx#0), span: src/main.rs:162:25: 162:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).414), kind: Path(Resolved(None, Path { span: src/main.rs:162:42: 162:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).415), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:162:42: 162:48 (#0) }], src/main.rs:162:34: 162:49 (#0)), span: src/main.rs:162:25: 162:49 (#0) }, [], src/main.rs:162:50: 162:72 (#0)), span: src/main.rs:162:25: 162:72 (#0) }), span: src/main.rs:162:25: 162:72 (#76) }]), span: src/main.rs:161:41: 161:45 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#75) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#75) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).427), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#75), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#75) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#75) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).429), rules: DefaultBlock, span: src/main.rs:158:81: 164:18 (#0), targeted_by_break: false }, None), span: src/main.rs:158:81: 164:18 (#0) }, None), span: src/main.rs:158:17: 164:18 (#0) }), hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).431), rules: DefaultBlock, span: src/main.rs:142:81: 165:14 (#0), targeted_by_break: false }, None), span: src/main.rs:142:81: 165:14 (#0) } }, Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).433), span: src/main.rs:166:13: 166:20 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).432), kind: Wild, span: src/main.rs:166:13: 166:14 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).434), kind: Block(Block { stmts: [], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).435), rules: DefaultBlock, span: src/main.rs:166:18: 166:20 (#0), targeted_by_break: false }, None), span: src/main.rs:166:18: 166:20 (#0) } }], Normal))
  Expression type: ()
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).117), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).118), kind: Path(Resolved(None, Path { span: src/main.rs:129:16: 129:20 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).119), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:129:16: 129:20 (#0) }, kind#0), span: src/main.rs:129:16: 129:25 (#0) }))
  Expression type: &ReErased Adt(rustc_hir::ExprKind, [ReErased])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).118), kind: Path(Resolved(None, Path { span: src/main.rs:129:16: 129:20 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).119), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:129:16: 129:20 (#0) }, kind#0))
  Expression type: Adt(rustc_hir::ExprKind, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:129:16: 129:20 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).119), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_hir::Expr, [ReErased])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).155), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).128), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).153), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).129), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).130), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#61), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).131), res: Err, args: None, infer_args: true }, PathSegment { ident: io#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).132), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).133), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#61) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).134), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).152), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).150), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }, PathSegment { ident: new_v1#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).151), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).138), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).137), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).135), kind: Lit(Spanned { node: Str("  Function call with ", Cooked), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).136), kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }]), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).149), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).148), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).147), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).144), kind: Path(LangItem(FormatArgument, src/main.rs:131:48: 131:50 (#62), None)), span: src/main.rs:131:48: 131:50 (#62) }, PathSegment { ident: new_display#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).145), res: Err, args: None, infer_args: true })), span: src/main.rs:131:48: 131:50 (#62) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).139), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).140), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).141), kind: Path(Resolved(None, Path { span: src/main.rs:131:63: 131:67 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).142), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), args: None, infer_args: true }] })), span: src/main.rs:131:63: 131:67 (#0) }, [], src/main.rs:131:68: 131:73 (#0)), span: src/main.rs:131:63: 131:73 (#0) }), span: src/main.rs:131:63: 131:73 (#62) }]), span: src/main.rs:131:48: 131:50 (#62) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#61) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#61) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).154), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#61), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#61) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#61) }], expr: Some(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).156), kind: If(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).157), kind: Let(Let { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).158), span: src/main.rs:134:20: 134:80 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).161), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:134:24: 134:28 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).159), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160), def_id#0, None), span: src/main.rs:134:29: 134:35 (#0), default_binding_modes: true }], None), span: src/main.rs:134:24: 134:36 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).162), kind: MethodCall(PathSegment { ident: type_dependent_def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).163), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).164), kind: Path(Resolved(None, Path { span: src/main.rs:134:39: 134:45 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).165), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })), span: src/main.rs:134:39: 134:45 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).166), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).167), kind: Path(Resolved(None, Path { span: src/main.rs:134:68: 134:72 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123)), segments: [PathSegment { ident: func#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).168), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123)), args: None, infer_args: true }] })), span: src/main.rs:134:68: 134:72 (#0) }, hir_id#0), span: src/main.rs:134:68: 134:79 (#0) }], src/main.rs:134:46: 134:80 (#0)), span: src/main.rs:134:39: 134:80 (#0) } }), span: src/main.rs:134:20: 134:80 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).234), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).199), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).169), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).197), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).170), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).171), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#63), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).172), res: Err, args: None, infer_args: true }, PathSegment { ident: io#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).173), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).174), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#63) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).175), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).196), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).194), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, PathSegment { ident: new_v1#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).195), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).179), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).178), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).176), kind: Lit(Spanned { node: Str("  Called function: ", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).177), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }]), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).193), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).192), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).191), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).190), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).188), kind: Path(LangItem(FormatArgument, src/main.rs:135:50: 135:52 (#64), None)), span: src/main.rs:135:50: 135:52 (#64) }, PathSegment { ident: new_display#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).189), res: Err, args: None, infer_args: true })), span: src/main.rs:135:50: 135:52 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).187), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).180), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).181), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).182), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).183), kind: Path(Resolved(None, Path { span: src/main.rs:135:55: 135:59 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).184), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:135:55: 135:59 (#0) }, tcx#0), span: src/main.rs:135:55: 135:63 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).185), kind: Path(Resolved(None, Path { span: src/main.rs:135:77: 135:83 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).186), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:135:77: 135:83 (#0) }], src/main.rs:135:64: 135:84 (#0)), span: src/main.rs:135:55: 135:84 (#0) }), span: src/main.rs:135:55: 135:84 (#64) }]), span: src/main.rs:135:50: 135:52 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#63) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#63) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).198), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#63), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#63) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#63) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).232), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).200), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).230), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).201), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).202), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#65), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).203), res: Err, args: None, infer_args: true }, PathSegment { ident: io#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).204), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).205), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#65) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).206), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).229), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).227), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, PathSegment { ident: new_v1#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).228), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).210), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).209), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).207), kind: Lit(Spanned { node: Str("  Function type: ", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).208), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }]), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).226), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).225), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).224), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).223), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).221), kind: Path(LangItem(FormatArgument, src/main.rs:137:43: 137:47 (#66), None)), span: src/main.rs:137:43: 137:47 (#66) }, PathSegment { ident: new_debug#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).222), res: Err, args: None, infer_args: true })), span: src/main.rs:137:43: 137:47 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).211), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).212), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).213), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).214), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).215), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).216), kind: Path(Resolved(None, Path { span: src/main.rs:138:25: 138:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).217), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:138:25: 138:29 (#0) }, tcx#0), span: src/main.rs:138:25: 138:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).218), kind: Path(Resolved(None, Path { span: src/main.rs:138:42: 138:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).219), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:138:42: 138:48 (#0) }], src/main.rs:138:34: 138:49 (#0)), span: src/main.rs:138:25: 138:49 (#0) }, [], src/main.rs:138:50: 138:72 (#0)), span: src/main.rs:138:25: 138:72 (#0) }), span: src/main.rs:138:25: 138:72 (#66) }]), span: src/main.rs:137:43: 137:47 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#65) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#65) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).231), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#65), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#65) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#65) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).233), rules: DefaultBlock, span: src/main.rs:134:81: 140:18 (#0), targeted_by_break: false }, None), span: src/main.rs:134:81: 140:18 (#0) }, None), span: src/main.rs:134:17: 140:18 (#0) }), hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).235), rules: DefaultBlock, span: src/main.rs:130:54: 141:14 (#0), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).153), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).129), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).130), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#61), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).131), res: Err, args: None, infer_args: true }, PathSegment { ident: io#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).132), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).133), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#61) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).134), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).152), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).150), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }, PathSegment { ident: new_v1#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).151), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).138), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).137), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).135), kind: Lit(Spanned { node: Str("  Function call with ", Cooked), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).136), kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }]), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).149), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).148), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).147), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).144), kind: Path(LangItem(FormatArgument, src/main.rs:131:48: 131:50 (#62), None)), span: src/main.rs:131:48: 131:50 (#62) }, PathSegment { ident: new_display#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).145), res: Err, args: None, infer_args: true })), span: src/main.rs:131:48: 131:50 (#62) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).139), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).140), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).141), kind: Path(Resolved(None, Path { span: src/main.rs:131:63: 131:67 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).142), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), args: None, infer_args: true }] })), span: src/main.rs:131:63: 131:67 (#0) }, [], src/main.rs:131:68: 131:73 (#0)), span: src/main.rs:131:63: 131:73 (#0) }), span: src/main.rs:131:63: 131:73 (#62) }]), span: src/main.rs:131:48: 131:50 (#62) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#61) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#61) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).154), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#61), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).130), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#61), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).131), res: Err, args: None, infer_args: true }, PathSegment { ident: io#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).132), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).133), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#61) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).134), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).152), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).150), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }, PathSegment { ident: new_v1#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).151), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).138), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).137), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).135), kind: Lit(Spanned { node: Str("  Function call with ", Cooked), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).136), kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }]), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).149), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).148), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).147), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).144), kind: Path(LangItem(FormatArgument, src/main.rs:131:48: 131:50 (#62), None)), span: src/main.rs:131:48: 131:50 (#62) }, PathSegment { ident: new_display#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).145), res: Err, args: None, infer_args: true })), span: src/main.rs:131:48: 131:50 (#62) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).139), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).140), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).141), kind: Path(Resolved(None, Path { span: src/main.rs:131:63: 131:67 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).142), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), args: None, infer_args: true }] })), span: src/main.rs:131:63: 131:67 (#0) }, [], src/main.rs:131:68: 131:73 (#0)), span: src/main.rs:131:63: 131:73 (#0) }), span: src/main.rs:131:63: 131:73 (#62) }]), span: src/main.rs:131:48: 131:50 (#62) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#61), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).131), res: Err, args: None, infer_args: true }, PathSegment { ident: io#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).132), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#61, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).133), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).152), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).150), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }, PathSegment { ident: new_v1#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).151), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).138), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).137), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).135), kind: Lit(Spanned { node: Str("  Function call with ", Cooked), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).136), kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }]), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).149), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).148), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).147), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).144), kind: Path(LangItem(FormatArgument, src/main.rs:131:48: 131:50 (#62), None)), span: src/main.rs:131:48: 131:50 (#62) }, PathSegment { ident: new_display#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).145), res: Err, args: None, infer_args: true })), span: src/main.rs:131:48: 131:50 (#62) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).139), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).140), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).141), kind: Path(Resolved(None, Path { span: src/main.rs:131:63: 131:67 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).142), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), args: None, infer_args: true }] })), span: src/main.rs:131:63: 131:67 (#0) }, [], src/main.rs:131:68: 131:73 (#0)), span: src/main.rs:131:63: 131:73 (#0) }), span: src/main.rs:131:63: 131:73 (#62) }]), span: src/main.rs:131:48: 131:50 (#62) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).150), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }, PathSegment { ident: new_v1#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).151), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).137), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).135), kind: Lit(Spanned { node: Str("  Function call with ", Cooked), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).136), kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }]), span: src/main.rs:131:26: 131:61 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).135), kind: Lit(Spanned { node: Str("  Function call with ", Cooked), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).136), kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:131:26: 131:61 (#0) }), span: src/main.rs:131:26: 131:61 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Lit(Spanned { node: Str("  Function call with ", Cooked), span: src/main.rs:131:26: 131:61 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:131:26: 131:61 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).148), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).147), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).144), kind: Path(LangItem(FormatArgument, src/main.rs:131:48: 131:50 (#62), None)), span: src/main.rs:131:48: 131:50 (#62) }, PathSegment { ident: new_display#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).145), res: Err, args: None, infer_args: true })), span: src/main.rs:131:48: 131:50 (#62) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).139), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).140), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).141), kind: Path(Resolved(None, Path { span: src/main.rs:131:63: 131:67 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).142), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), args: None, infer_args: true }] })), span: src/main.rs:131:63: 131:67 (#0) }, [], src/main.rs:131:68: 131:73 (#0)), span: src/main.rs:131:63: 131:73 (#0) }), span: src/main.rs:131:63: 131:73 (#62) }]), span: src/main.rs:131:48: 131:50 (#62) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#62) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).147), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).144), kind: Path(LangItem(FormatArgument, src/main.rs:131:48: 131:50 (#62), None)), span: src/main.rs:131:48: 131:50 (#62) }, PathSegment { ident: new_display#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).145), res: Err, args: None, infer_args: true })), span: src/main.rs:131:48: 131:50 (#62) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).139), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).140), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).141), kind: Path(Resolved(None, Path { span: src/main.rs:131:63: 131:67 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).142), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), args: None, infer_args: true }] })), span: src/main.rs:131:63: 131:67 (#0) }, [], src/main.rs:131:68: 131:73 (#0)), span: src/main.rs:131:63: 131:73 (#0) }), span: src/main.rs:131:63: 131:73 (#62) }]), span: src/main.rs:131:48: 131:50 (#62) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).146), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).144), kind: Path(LangItem(FormatArgument, src/main.rs:131:48: 131:50 (#62), None)), span: src/main.rs:131:48: 131:50 (#62) }, PathSegment { ident: new_display#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).145), res: Err, args: None, infer_args: true })), span: src/main.rs:131:48: 131:50 (#62) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).143), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).139), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).140), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).141), kind: Path(Resolved(None, Path { span: src/main.rs:131:63: 131:67 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).142), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), args: None, infer_args: true }] })), span: src/main.rs:131:63: 131:67 (#0) }, [], src/main.rs:131:68: 131:73 (#0)), span: src/main.rs:131:63: 131:73 (#0) }), span: src/main.rs:131:63: 131:73 (#62) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_display
  Function type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).144), kind: Path(LangItem(FormatArgument, src/main.rs:131:48: 131:50 (#62), None)), span: src/main.rs:131:48: 131:50 (#62) }, PathSegment { ident: new_display#62, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).145), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReErased, usize])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).139), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).140), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).141), kind: Path(Resolved(None, Path { span: src/main.rs:131:63: 131:67 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).142), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), args: None, infer_args: true }] })), span: src/main.rs:131:63: 131:67 (#0) }, [], src/main.rs:131:68: 131:73 (#0)), span: src/main.rs:131:63: 131:73 (#0) }))
  Expression type: &ReErased usize
Expression (kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).140), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).141), kind: Path(Resolved(None, Path { span: src/main.rs:131:63: 131:67 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).142), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), args: None, infer_args: true }] })), span: src/main.rs:131:63: 131:67 (#0) }, [], src/main.rs:131:68: 131:73 (#0)))
  Method call: len with 0 arguments
  Receiver type: &ReErased &ReErased [Adt(rustc_hir::Expr, [ReErased])]
  Method: core::slice::<impl [T]>::len
  Method type: FnDef(DefId(2:11262 ~ core[ae61]::slice::{impl#0}::len), [T/#0])
  Expression type: usize
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:131:63: 131:67 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).142), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).124)), args: None, infer_args: true }] })))
  Expression type: &ReErased &ReErased [Adt(rustc_hir::Expr, [ReErased])]
Expression (kind: If(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).157), kind: Let(Let { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).158), span: src/main.rs:134:20: 134:80 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).161), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:134:24: 134:28 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).159), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160), def_id#0, None), span: src/main.rs:134:29: 134:35 (#0), default_binding_modes: true }], None), span: src/main.rs:134:24: 134:36 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).162), kind: MethodCall(PathSegment { ident: type_dependent_def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).163), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).164), kind: Path(Resolved(None, Path { span: src/main.rs:134:39: 134:45 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).165), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })), span: src/main.rs:134:39: 134:45 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).166), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).167), kind: Path(Resolved(None, Path { span: src/main.rs:134:68: 134:72 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123)), segments: [PathSegment { ident: func#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).168), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123)), args: None, infer_args: true }] })), span: src/main.rs:134:68: 134:72 (#0) }, hir_id#0), span: src/main.rs:134:68: 134:79 (#0) }], src/main.rs:134:46: 134:80 (#0)), span: src/main.rs:134:39: 134:80 (#0) } }), span: src/main.rs:134:20: 134:80 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).234), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).199), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).169), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).197), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).170), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).171), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#63), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).172), res: Err, args: None, infer_args: true }, PathSegment { ident: io#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).173), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).174), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#63) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).175), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).196), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).194), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, PathSegment { ident: new_v1#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).195), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).179), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).178), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).176), kind: Lit(Spanned { node: Str("  Called function: ", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).177), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }]), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).193), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).192), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).191), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).190), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).188), kind: Path(LangItem(FormatArgument, src/main.rs:135:50: 135:52 (#64), None)), span: src/main.rs:135:50: 135:52 (#64) }, PathSegment { ident: new_display#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).189), res: Err, args: None, infer_args: true })), span: src/main.rs:135:50: 135:52 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).187), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).180), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).181), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).182), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).183), kind: Path(Resolved(None, Path { span: src/main.rs:135:55: 135:59 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).184), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:135:55: 135:59 (#0) }, tcx#0), span: src/main.rs:135:55: 135:63 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).185), kind: Path(Resolved(None, Path { span: src/main.rs:135:77: 135:83 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).186), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:135:77: 135:83 (#0) }], src/main.rs:135:64: 135:84 (#0)), span: src/main.rs:135:55: 135:84 (#0) }), span: src/main.rs:135:55: 135:84 (#64) }]), span: src/main.rs:135:50: 135:52 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#63) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#63) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).198), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#63), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#63) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#63) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).232), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).200), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).230), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).201), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).202), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#65), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).203), res: Err, args: None, infer_args: true }, PathSegment { ident: io#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).204), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).205), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#65) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).206), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).229), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).227), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, PathSegment { ident: new_v1#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).228), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).210), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).209), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).207), kind: Lit(Spanned { node: Str("  Function type: ", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).208), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }]), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).226), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).225), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).224), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).223), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).221), kind: Path(LangItem(FormatArgument, src/main.rs:137:43: 137:47 (#66), None)), span: src/main.rs:137:43: 137:47 (#66) }, PathSegment { ident: new_debug#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).222), res: Err, args: None, infer_args: true })), span: src/main.rs:137:43: 137:47 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).211), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).212), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).213), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).214), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).215), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).216), kind: Path(Resolved(None, Path { span: src/main.rs:138:25: 138:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).217), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:138:25: 138:29 (#0) }, tcx#0), span: src/main.rs:138:25: 138:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).218), kind: Path(Resolved(None, Path { span: src/main.rs:138:42: 138:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).219), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:138:42: 138:48 (#0) }], src/main.rs:138:34: 138:49 (#0)), span: src/main.rs:138:25: 138:49 (#0) }, [], src/main.rs:138:50: 138:72 (#0)), span: src/main.rs:138:25: 138:72 (#0) }), span: src/main.rs:138:25: 138:72 (#66) }]), span: src/main.rs:137:43: 137:47 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#65) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#65) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).231), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#65), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#65) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#65) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).233), rules: DefaultBlock, span: src/main.rs:134:81: 140:18 (#0), targeted_by_break: false }, None), span: src/main.rs:134:81: 140:18 (#0) }, None))
  Expression type: ()
Expression (kind: Let(Let { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).158), span: src/main.rs:134:20: 134:80 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).161), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:134:24: 134:28 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).159), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160), def_id#0, None), span: src/main.rs:134:29: 134:35 (#0), default_binding_modes: true }], None), span: src/main.rs:134:24: 134:36 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).162), kind: MethodCall(PathSegment { ident: type_dependent_def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).163), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).164), kind: Path(Resolved(None, Path { span: src/main.rs:134:39: 134:45 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).165), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })), span: src/main.rs:134:39: 134:45 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).166), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).167), kind: Path(Resolved(None, Path { span: src/main.rs:134:68: 134:72 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123)), segments: [PathSegment { ident: func#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).168), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123)), args: None, infer_args: true }] })), span: src/main.rs:134:68: 134:72 (#0) }, hir_id#0), span: src/main.rs:134:68: 134:79 (#0) }], src/main.rs:134:46: 134:80 (#0)), span: src/main.rs:134:39: 134:80 (#0) } }))
  Expression type: bool
Expression (kind: MethodCall(PathSegment { ident: type_dependent_def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).163), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).164), kind: Path(Resolved(None, Path { span: src/main.rs:134:39: 134:45 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).165), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })), span: src/main.rs:134:39: 134:45 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).166), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).167), kind: Path(Resolved(None, Path { span: src/main.rs:134:68: 134:72 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123)), segments: [PathSegment { ident: func#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).168), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123)), args: None, infer_args: true }] })), span: src/main.rs:134:68: 134:72 (#0) }, hir_id#0), span: src/main.rs:134:68: 134:79 (#0) }], src/main.rs:134:46: 134:80 (#0)))
  Method call: type_dependent_def_id with 1 arguments
  Receiver type: &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])
  Method: rustc_middle::ty::TypeckResults::<'tcx>::type_dependent_def_id
  Method type: FnDef(DefId(155:8561 ~ rustc_middle[ca3f]::ty::typeck_results::{impl#0}::type_dependent_def_id), [ReEarlyBound(DefId(155:8554 ~ rustc_middle[ca3f]::ty::typeck_results::{impl#0}::'tcx), 0, 'tcx)])
  Expression type: Adt(std::option::Option, [Adt(rustc_span::def_id::DefId, [])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:134:39: 134:45 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).165), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).167), kind: Path(Resolved(None, Path { span: src/main.rs:134:68: 134:72 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123)), segments: [PathSegment { ident: func#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).168), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123)), args: None, infer_args: true }] })), span: src/main.rs:134:68: 134:72 (#0) }, hir_id#0))
  Expression type: Adt(rustc_hir::HirId, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:134:68: 134:72 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123)), segments: [PathSegment { ident: func#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).168), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).123)), args: None, infer_args: true }] })))
  Expression type: &ReErased &ReErased Adt(rustc_hir::Expr, [ReErased])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).199), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).169), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).197), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).170), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).171), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#63), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).172), res: Err, args: None, infer_args: true }, PathSegment { ident: io#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).173), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).174), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#63) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).175), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).196), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).194), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, PathSegment { ident: new_v1#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).195), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).179), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).178), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).176), kind: Lit(Spanned { node: Str("  Called function: ", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).177), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }]), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).193), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).192), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).191), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).190), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).188), kind: Path(LangItem(FormatArgument, src/main.rs:135:50: 135:52 (#64), None)), span: src/main.rs:135:50: 135:52 (#64) }, PathSegment { ident: new_display#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).189), res: Err, args: None, infer_args: true })), span: src/main.rs:135:50: 135:52 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).187), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).180), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).181), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).182), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).183), kind: Path(Resolved(None, Path { span: src/main.rs:135:55: 135:59 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).184), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:135:55: 135:59 (#0) }, tcx#0), span: src/main.rs:135:55: 135:63 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).185), kind: Path(Resolved(None, Path { span: src/main.rs:135:77: 135:83 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).186), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:135:77: 135:83 (#0) }], src/main.rs:135:64: 135:84 (#0)), span: src/main.rs:135:55: 135:84 (#0) }), span: src/main.rs:135:55: 135:84 (#64) }]), span: src/main.rs:135:50: 135:52 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#63) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#63) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).198), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#63), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#63) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#63) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).232), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).200), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).230), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).201), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).202), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#65), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).203), res: Err, args: None, infer_args: true }, PathSegment { ident: io#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).204), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).205), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#65) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).206), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).229), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).227), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, PathSegment { ident: new_v1#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).228), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).210), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).209), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).207), kind: Lit(Spanned { node: Str("  Function type: ", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).208), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }]), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).226), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).225), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).224), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).223), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).221), kind: Path(LangItem(FormatArgument, src/main.rs:137:43: 137:47 (#66), None)), span: src/main.rs:137:43: 137:47 (#66) }, PathSegment { ident: new_debug#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).222), res: Err, args: None, infer_args: true })), span: src/main.rs:137:43: 137:47 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).211), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).212), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).213), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).214), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).215), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).216), kind: Path(Resolved(None, Path { span: src/main.rs:138:25: 138:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).217), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:138:25: 138:29 (#0) }, tcx#0), span: src/main.rs:138:25: 138:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).218), kind: Path(Resolved(None, Path { span: src/main.rs:138:42: 138:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).219), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:138:42: 138:48 (#0) }], src/main.rs:138:34: 138:49 (#0)), span: src/main.rs:138:25: 138:49 (#0) }, [], src/main.rs:138:50: 138:72 (#0)), span: src/main.rs:138:25: 138:72 (#0) }), span: src/main.rs:138:25: 138:72 (#66) }]), span: src/main.rs:137:43: 137:47 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#65) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#65) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).231), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#65), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#65) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#65) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).233), rules: DefaultBlock, span: src/main.rs:134:81: 140:18 (#0), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).197), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).170), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).171), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#63), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).172), res: Err, args: None, infer_args: true }, PathSegment { ident: io#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).173), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).174), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#63) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).175), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).196), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).194), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, PathSegment { ident: new_v1#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).195), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).179), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).178), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).176), kind: Lit(Spanned { node: Str("  Called function: ", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).177), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }]), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).193), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).192), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).191), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).190), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).188), kind: Path(LangItem(FormatArgument, src/main.rs:135:50: 135:52 (#64), None)), span: src/main.rs:135:50: 135:52 (#64) }, PathSegment { ident: new_display#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).189), res: Err, args: None, infer_args: true })), span: src/main.rs:135:50: 135:52 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).187), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).180), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).181), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).182), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).183), kind: Path(Resolved(None, Path { span: src/main.rs:135:55: 135:59 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).184), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:135:55: 135:59 (#0) }, tcx#0), span: src/main.rs:135:55: 135:63 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).185), kind: Path(Resolved(None, Path { span: src/main.rs:135:77: 135:83 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).186), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:135:77: 135:83 (#0) }], src/main.rs:135:64: 135:84 (#0)), span: src/main.rs:135:55: 135:84 (#0) }), span: src/main.rs:135:55: 135:84 (#64) }]), span: src/main.rs:135:50: 135:52 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#63) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#63) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).198), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#63), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).171), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#63), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).172), res: Err, args: None, infer_args: true }, PathSegment { ident: io#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).173), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).174), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#63) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).175), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).196), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).194), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, PathSegment { ident: new_v1#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).195), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).179), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).178), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).176), kind: Lit(Spanned { node: Str("  Called function: ", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).177), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }]), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).193), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).192), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).191), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).190), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).188), kind: Path(LangItem(FormatArgument, src/main.rs:135:50: 135:52 (#64), None)), span: src/main.rs:135:50: 135:52 (#64) }, PathSegment { ident: new_display#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).189), res: Err, args: None, infer_args: true })), span: src/main.rs:135:50: 135:52 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).187), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).180), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).181), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).182), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).183), kind: Path(Resolved(None, Path { span: src/main.rs:135:55: 135:59 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).184), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:135:55: 135:59 (#0) }, tcx#0), span: src/main.rs:135:55: 135:63 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).185), kind: Path(Resolved(None, Path { span: src/main.rs:135:77: 135:83 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).186), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:135:77: 135:83 (#0) }], src/main.rs:135:64: 135:84 (#0)), span: src/main.rs:135:55: 135:84 (#0) }), span: src/main.rs:135:55: 135:84 (#64) }]), span: src/main.rs:135:50: 135:52 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#63), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).172), res: Err, args: None, infer_args: true }, PathSegment { ident: io#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).173), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#63, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).174), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).196), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).194), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, PathSegment { ident: new_v1#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).195), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).179), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).178), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).176), kind: Lit(Spanned { node: Str("  Called function: ", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).177), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }]), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).193), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).192), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).191), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).190), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).188), kind: Path(LangItem(FormatArgument, src/main.rs:135:50: 135:52 (#64), None)), span: src/main.rs:135:50: 135:52 (#64) }, PathSegment { ident: new_display#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).189), res: Err, args: None, infer_args: true })), span: src/main.rs:135:50: 135:52 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).187), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).180), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).181), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).182), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).183), kind: Path(Resolved(None, Path { span: src/main.rs:135:55: 135:59 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).184), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:135:55: 135:59 (#0) }, tcx#0), span: src/main.rs:135:55: 135:63 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).185), kind: Path(Resolved(None, Path { span: src/main.rs:135:77: 135:83 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).186), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:135:77: 135:83 (#0) }], src/main.rs:135:64: 135:84 (#0)), span: src/main.rs:135:55: 135:84 (#0) }), span: src/main.rs:135:55: 135:84 (#64) }]), span: src/main.rs:135:50: 135:52 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).194), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }, PathSegment { ident: new_v1#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).195), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).178), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).176), kind: Lit(Spanned { node: Str("  Called function: ", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).177), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }]), span: src/main.rs:135:30: 135:53 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).176), kind: Lit(Spanned { node: Str("  Called function: ", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).177), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:135:30: 135:53 (#0) }), span: src/main.rs:135:30: 135:53 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Lit(Spanned { node: Str("  Called function: ", Cooked), span: src/main.rs:135:30: 135:53 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:135:30: 135:53 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).192), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).191), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).190), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).188), kind: Path(LangItem(FormatArgument, src/main.rs:135:50: 135:52 (#64), None)), span: src/main.rs:135:50: 135:52 (#64) }, PathSegment { ident: new_display#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).189), res: Err, args: None, infer_args: true })), span: src/main.rs:135:50: 135:52 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).187), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).180), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).181), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).182), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).183), kind: Path(Resolved(None, Path { span: src/main.rs:135:55: 135:59 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).184), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:135:55: 135:59 (#0) }, tcx#0), span: src/main.rs:135:55: 135:63 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).185), kind: Path(Resolved(None, Path { span: src/main.rs:135:77: 135:83 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).186), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:135:77: 135:83 (#0) }], src/main.rs:135:64: 135:84 (#0)), span: src/main.rs:135:55: 135:84 (#0) }), span: src/main.rs:135:55: 135:84 (#64) }]), span: src/main.rs:135:50: 135:52 (#64) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#64) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).191), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).190), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).188), kind: Path(LangItem(FormatArgument, src/main.rs:135:50: 135:52 (#64), None)), span: src/main.rs:135:50: 135:52 (#64) }, PathSegment { ident: new_display#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).189), res: Err, args: None, infer_args: true })), span: src/main.rs:135:50: 135:52 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).187), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).180), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).181), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).182), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).183), kind: Path(Resolved(None, Path { span: src/main.rs:135:55: 135:59 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).184), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:135:55: 135:59 (#0) }, tcx#0), span: src/main.rs:135:55: 135:63 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).185), kind: Path(Resolved(None, Path { span: src/main.rs:135:77: 135:83 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).186), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:135:77: 135:83 (#0) }], src/main.rs:135:64: 135:84 (#0)), span: src/main.rs:135:55: 135:84 (#0) }), span: src/main.rs:135:55: 135:84 (#64) }]), span: src/main.rs:135:50: 135:52 (#64) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).190), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).188), kind: Path(LangItem(FormatArgument, src/main.rs:135:50: 135:52 (#64), None)), span: src/main.rs:135:50: 135:52 (#64) }, PathSegment { ident: new_display#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).189), res: Err, args: None, infer_args: true })), span: src/main.rs:135:50: 135:52 (#64) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).187), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).180), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).181), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).182), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).183), kind: Path(Resolved(None, Path { span: src/main.rs:135:55: 135:59 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).184), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:135:55: 135:59 (#0) }, tcx#0), span: src/main.rs:135:55: 135:63 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).185), kind: Path(Resolved(None, Path { span: src/main.rs:135:77: 135:83 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).186), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:135:77: 135:83 (#0) }], src/main.rs:135:64: 135:84 (#0)), span: src/main.rs:135:55: 135:84 (#0) }), span: src/main.rs:135:55: 135:84 (#64) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_display
  Function type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).188), kind: Path(LangItem(FormatArgument, src/main.rs:135:50: 135:52 (#64), None)), span: src/main.rs:135:50: 135:52 (#64) }, PathSegment { ident: new_display#64, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).189), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReErased, Adt(std::string::String, [])])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).180), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).181), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).182), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).183), kind: Path(Resolved(None, Path { span: src/main.rs:135:55: 135:59 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).184), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:135:55: 135:59 (#0) }, tcx#0), span: src/main.rs:135:55: 135:63 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).185), kind: Path(Resolved(None, Path { span: src/main.rs:135:77: 135:83 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).186), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:135:77: 135:83 (#0) }], src/main.rs:135:64: 135:84 (#0)), span: src/main.rs:135:55: 135:84 (#0) }))
  Expression type: &ReErased Adt(std::string::String, [])
Expression (kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).181), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).182), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).183), kind: Path(Resolved(None, Path { span: src/main.rs:135:55: 135:59 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).184), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:135:55: 135:59 (#0) }, tcx#0), span: src/main.rs:135:55: 135:63 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).185), kind: Path(Resolved(None, Path { span: src/main.rs:135:77: 135:83 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).186), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:135:77: 135:83 (#0) }], src/main.rs:135:64: 135:84 (#0)))
  Method call: def_path_str with 1 arguments
  Receiver type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
  Method: rustc_middle::ty::print::pretty::<impl rustc_middle::ty::TyCtxt<'t>>::def_path_str
  Method type: FnDef(DefId(155:4851 ~ rustc_middle[ca3f]::ty::print::pretty::{impl#4}::def_path_str), [ReEarlyBound(DefId(155:4850 ~ rustc_middle[ca3f]::ty::print::pretty::{impl#4}::'t), 0, 't), impl IntoQueryParam<DefId>/#1])
  Expression type: Adt(std::string::String, [])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).183), kind: Path(Resolved(None, Path { span: src/main.rs:135:55: 135:59 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).184), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:135:55: 135:59 (#0) }, tcx#0))
  Expression type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:135:55: 135:59 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).184), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })))
  Expression type: &ReErased mut Adt(PrintVisitor, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:135:77: 135:83 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).186), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::def_id::DefId, [])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).230), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).201), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).202), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#65), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).203), res: Err, args: None, infer_args: true }, PathSegment { ident: io#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).204), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).205), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#65) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).206), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).229), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).227), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, PathSegment { ident: new_v1#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).228), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).210), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).209), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).207), kind: Lit(Spanned { node: Str("  Function type: ", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).208), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }]), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).226), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).225), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).224), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).223), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).221), kind: Path(LangItem(FormatArgument, src/main.rs:137:43: 137:47 (#66), None)), span: src/main.rs:137:43: 137:47 (#66) }, PathSegment { ident: new_debug#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).222), res: Err, args: None, infer_args: true })), span: src/main.rs:137:43: 137:47 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).211), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).212), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).213), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).214), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).215), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).216), kind: Path(Resolved(None, Path { span: src/main.rs:138:25: 138:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).217), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:138:25: 138:29 (#0) }, tcx#0), span: src/main.rs:138:25: 138:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).218), kind: Path(Resolved(None, Path { span: src/main.rs:138:42: 138:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).219), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:138:42: 138:48 (#0) }], src/main.rs:138:34: 138:49 (#0)), span: src/main.rs:138:25: 138:49 (#0) }, [], src/main.rs:138:50: 138:72 (#0)), span: src/main.rs:138:25: 138:72 (#0) }), span: src/main.rs:138:25: 138:72 (#66) }]), span: src/main.rs:137:43: 137:47 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#65) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#65) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).231), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#65), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).202), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#65), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).203), res: Err, args: None, infer_args: true }, PathSegment { ident: io#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).204), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).205), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#65) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).206), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).229), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).227), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, PathSegment { ident: new_v1#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).228), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).210), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).209), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).207), kind: Lit(Spanned { node: Str("  Function type: ", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).208), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }]), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).226), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).225), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).224), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).223), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).221), kind: Path(LangItem(FormatArgument, src/main.rs:137:43: 137:47 (#66), None)), span: src/main.rs:137:43: 137:47 (#66) }, PathSegment { ident: new_debug#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).222), res: Err, args: None, infer_args: true })), span: src/main.rs:137:43: 137:47 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).211), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).212), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).213), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).214), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).215), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).216), kind: Path(Resolved(None, Path { span: src/main.rs:138:25: 138:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).217), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:138:25: 138:29 (#0) }, tcx#0), span: src/main.rs:138:25: 138:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).218), kind: Path(Resolved(None, Path { span: src/main.rs:138:42: 138:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).219), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:138:42: 138:48 (#0) }], src/main.rs:138:34: 138:49 (#0)), span: src/main.rs:138:25: 138:49 (#0) }, [], src/main.rs:138:50: 138:72 (#0)), span: src/main.rs:138:25: 138:72 (#0) }), span: src/main.rs:138:25: 138:72 (#66) }]), span: src/main.rs:137:43: 137:47 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#65), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).203), res: Err, args: None, infer_args: true }, PathSegment { ident: io#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).204), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#65, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).205), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).229), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).227), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, PathSegment { ident: new_v1#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).228), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).210), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).209), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).207), kind: Lit(Spanned { node: Str("  Function type: ", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).208), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }]), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).226), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).225), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).224), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).223), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).221), kind: Path(LangItem(FormatArgument, src/main.rs:137:43: 137:47 (#66), None)), span: src/main.rs:137:43: 137:47 (#66) }, PathSegment { ident: new_debug#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).222), res: Err, args: None, infer_args: true })), span: src/main.rs:137:43: 137:47 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).211), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).212), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).213), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).214), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).215), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).216), kind: Path(Resolved(None, Path { span: src/main.rs:138:25: 138:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).217), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:138:25: 138:29 (#0) }, tcx#0), span: src/main.rs:138:25: 138:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).218), kind: Path(Resolved(None, Path { span: src/main.rs:138:42: 138:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).219), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:138:42: 138:48 (#0) }], src/main.rs:138:34: 138:49 (#0)), span: src/main.rs:138:25: 138:49 (#0) }, [], src/main.rs:138:50: 138:72 (#0)), span: src/main.rs:138:25: 138:72 (#0) }), span: src/main.rs:138:25: 138:72 (#66) }]), span: src/main.rs:137:43: 137:47 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).227), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }, PathSegment { ident: new_v1#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).228), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).209), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).207), kind: Lit(Spanned { node: Str("  Function type: ", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).208), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }]), span: src/main.rs:137:25: 137:48 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).207), kind: Lit(Spanned { node: Str("  Function type: ", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).208), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:137:25: 137:48 (#0) }), span: src/main.rs:137:25: 137:48 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Lit(Spanned { node: Str("  Function type: ", Cooked), span: src/main.rs:137:25: 137:48 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:137:25: 137:48 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).225), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).224), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).223), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).221), kind: Path(LangItem(FormatArgument, src/main.rs:137:43: 137:47 (#66), None)), span: src/main.rs:137:43: 137:47 (#66) }, PathSegment { ident: new_debug#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).222), res: Err, args: None, infer_args: true })), span: src/main.rs:137:43: 137:47 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).211), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).212), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).213), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).214), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).215), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).216), kind: Path(Resolved(None, Path { span: src/main.rs:138:25: 138:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).217), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:138:25: 138:29 (#0) }, tcx#0), span: src/main.rs:138:25: 138:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).218), kind: Path(Resolved(None, Path { span: src/main.rs:138:42: 138:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).219), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:138:42: 138:48 (#0) }], src/main.rs:138:34: 138:49 (#0)), span: src/main.rs:138:25: 138:49 (#0) }, [], src/main.rs:138:50: 138:72 (#0)), span: src/main.rs:138:25: 138:72 (#0) }), span: src/main.rs:138:25: 138:72 (#66) }]), span: src/main.rs:137:43: 137:47 (#66) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#66) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).224), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).223), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).221), kind: Path(LangItem(FormatArgument, src/main.rs:137:43: 137:47 (#66), None)), span: src/main.rs:137:43: 137:47 (#66) }, PathSegment { ident: new_debug#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).222), res: Err, args: None, infer_args: true })), span: src/main.rs:137:43: 137:47 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).211), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).212), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).213), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).214), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).215), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).216), kind: Path(Resolved(None, Path { span: src/main.rs:138:25: 138:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).217), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:138:25: 138:29 (#0) }, tcx#0), span: src/main.rs:138:25: 138:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).218), kind: Path(Resolved(None, Path { span: src/main.rs:138:42: 138:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).219), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:138:42: 138:48 (#0) }], src/main.rs:138:34: 138:49 (#0)), span: src/main.rs:138:25: 138:49 (#0) }, [], src/main.rs:138:50: 138:72 (#0)), span: src/main.rs:138:25: 138:72 (#0) }), span: src/main.rs:138:25: 138:72 (#66) }]), span: src/main.rs:137:43: 137:47 (#66) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).223), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).221), kind: Path(LangItem(FormatArgument, src/main.rs:137:43: 137:47 (#66), None)), span: src/main.rs:137:43: 137:47 (#66) }, PathSegment { ident: new_debug#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).222), res: Err, args: None, infer_args: true })), span: src/main.rs:137:43: 137:47 (#66) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).220), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).211), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).212), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).213), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).214), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).215), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).216), kind: Path(Resolved(None, Path { span: src/main.rs:138:25: 138:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).217), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:138:25: 138:29 (#0) }, tcx#0), span: src/main.rs:138:25: 138:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).218), kind: Path(Resolved(None, Path { span: src/main.rs:138:42: 138:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).219), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:138:42: 138:48 (#0) }], src/main.rs:138:34: 138:49 (#0)), span: src/main.rs:138:25: 138:49 (#0) }, [], src/main.rs:138:50: 138:72 (#0)), span: src/main.rs:138:25: 138:72 (#0) }), span: src/main.rs:138:25: 138:72 (#66) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_debug
  Function type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).221), kind: Path(LangItem(FormatArgument, src/main.rs:137:43: 137:47 (#66), None)), span: src/main.rs:137:43: 137:47 (#66) }, PathSegment { ident: new_debug#66, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).222), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReErased, Adt(rustc_middle::ty::Ty, [ReErased])])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).211), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).212), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).213), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).214), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).215), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).216), kind: Path(Resolved(None, Path { span: src/main.rs:138:25: 138:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).217), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:138:25: 138:29 (#0) }, tcx#0), span: src/main.rs:138:25: 138:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).218), kind: Path(Resolved(None, Path { span: src/main.rs:138:42: 138:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).219), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:138:42: 138:48 (#0) }], src/main.rs:138:34: 138:49 (#0)), span: src/main.rs:138:25: 138:49 (#0) }, [], src/main.rs:138:50: 138:72 (#0)), span: src/main.rs:138:25: 138:72 (#0) }))
  Expression type: &ReErased Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).212), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).213), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).214), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).215), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).216), kind: Path(Resolved(None, Path { span: src/main.rs:138:25: 138:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).217), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:138:25: 138:29 (#0) }, tcx#0), span: src/main.rs:138:25: 138:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).218), kind: Path(Resolved(None, Path { span: src/main.rs:138:42: 138:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).219), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:138:42: 138:48 (#0) }], src/main.rs:138:34: 138:49 (#0)), span: src/main.rs:138:25: 138:49 (#0) }, [], src/main.rs:138:50: 138:72 (#0)))
  Method call: instantiate_identity with 0 arguments
  Receiver type: Adt(rustc_middle::ty::EarlyBinder, [Adt(rustc_middle::ty::Ty, [ReErased])])
  Method: rustc_middle::ty::EarlyBinder::<T>::instantiate_identity
  Method type: FnDef(DefId(155:7186 ~ rustc_middle[ca3f]::ty::generic_args::{impl#33}::instantiate_identity), [ReEarlyBound(DefId(155:7183 ~ rustc_middle[ca3f]::ty::generic_args::{impl#33}::'tcx), 0, 'tcx), T/#1])
  Expression type: Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).214), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).215), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).216), kind: Path(Resolved(None, Path { span: src/main.rs:138:25: 138:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).217), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:138:25: 138:29 (#0) }, tcx#0), span: src/main.rs:138:25: 138:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).218), kind: Path(Resolved(None, Path { span: src/main.rs:138:42: 138:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).219), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })), span: src/main.rs:138:42: 138:48 (#0) }], src/main.rs:138:34: 138:49 (#0)))
  Method call: type_of with 1 arguments
  Receiver type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
  Method: rustc_middle::query::<impl rustc_middle::ty::TyCtxt<'tcx>>::type_of
  Method type: FnDef(DefId(155:37468 ~ rustc_middle[ca3f]::query::{impl#3}::type_of), [ReEarlyBound(DefId(155:37452 ~ rustc_middle[ca3f]::query::{impl#3}::'tcx), 0, 'tcx), impl IntoQueryParam<DefId>/#1])
  Expression type: Adt(rustc_middle::ty::EarlyBinder, [Adt(rustc_middle::ty::Ty, [ReErased])])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).216), kind: Path(Resolved(None, Path { span: src/main.rs:138:25: 138:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).217), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:138:25: 138:29 (#0) }, tcx#0))
  Expression type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:138:25: 138:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).217), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })))
  Expression type: &ReErased mut Adt(PrintVisitor, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:138:42: 138:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).219), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).160)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::def_id::DefId, [])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).282), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).246), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).280), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).247), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).248), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#67), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).249), res: Err, args: None, infer_args: true }, PathSegment { ident: io#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).250), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).251), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#67) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).252), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).279), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).277), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }, PathSegment { ident: new_v1#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).278), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).257), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).256), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).253), kind: Lit(Spanned { node: Str("  Method call: ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).254), kind: Lit(Spanned { node: Str(" with ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).255), kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }]), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).276), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).275), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).265), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).264), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).262), kind: Path(LangItem(FormatArgument, src/main.rs:144:37: 144:39 (#68), None)), span: src/main.rs:144:37: 144:39 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).263), res: Err, args: None, infer_args: true })), span: src/main.rs:144:37: 144:39 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).261), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).258), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).259), kind: Path(Resolved(None, Path { span: src/main.rs:145:21: 145:33 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), segments: [PathSegment { ident: path_segment#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).260), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), args: None, infer_args: true }] })), span: src/main.rs:145:21: 145:33 (#0) }, ident#0), span: src/main.rs:145:21: 145:39 (#0) }), span: src/main.rs:145:21: 145:39 (#68) }]), span: src/main.rs:144:37: 144:39 (#68) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).274), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).273), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).271), kind: Path(LangItem(FormatArgument, src/main.rs:144:45: 144:47 (#68), None)), span: src/main.rs:144:45: 144:47 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).272), res: Err, args: None, infer_args: true })), span: src/main.rs:144:45: 144:47 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).270), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).266), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).267), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).268), kind: Path(Resolved(None, Path { span: src/main.rs:146:21: 146:25 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).269), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), args: None, infer_args: true }] })), span: src/main.rs:146:21: 146:25 (#0) }, [], src/main.rs:146:26: 146:31 (#0)), span: src/main.rs:146:21: 146:31 (#0) }), span: src/main.rs:146:21: 146:31 (#68) }]), span: src/main.rs:144:45: 144:47 (#68) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#67) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#67) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).281), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#67), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#67) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#67) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).351), kind: Expr(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).283), kind: Match(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).284), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).285), kind: Path(Resolved(None, Path { span: src/main.rs:150:23: 150:47 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).286), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).287), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).288), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })), span: src/main.rs:150:23: 150:47 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).289), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).290), kind: Path(Resolved(None, Path { span: src/main.rs:150:48: 150:76 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).291), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).292), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).293), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:150:48: 150:76 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).294), kind: Closure(Closure { def_id: DefId(0:35 ~ main[cc0f]::{impl#1}::visit_expr::{closure#1}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:150:80: 150:80 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).295) }, fn_decl_span: src/main.rs:150:77: 150:79 (#0), fn_arg_span: Some(src/main.rs:150:77: 150:79 (#0)), movability: None }), span: src/main.rs:150:77: 152:18 (#0) }]), span: src/main.rs:150:48: 152:19 (#0) }]), span: src/main.rs:150:23: 152:20 (#0) }, [Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).306), span: src/main.rs:153:21: 153:86 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).305), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:153:21: 153:23 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), segments: [PathSegment { ident: Ok#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).303), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304), receiver_ty#0, None), span: src/main.rs:153:24: 153:35 (#0), default_binding_modes: true }], None), span: src/main.rs:153:21: 153:36 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).307), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).330), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).308), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).309), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#69), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).310), res: Err, args: None, infer_args: true }, PathSegment { ident: io#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).311), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).312), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#69) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).313), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).329), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).327), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }, PathSegment { ident: new_v1#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).328), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).317), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).316), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).314), kind: Lit(Spanned { node: Str("  Receiver type: ", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).315), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }]), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).326), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).325), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).324), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).321), kind: Path(LangItem(FormatArgument, src/main.rs:153:67: 153:71 (#70), None)), span: src/main.rs:153:67: 153:71 (#70) }, PathSegment { ident: new_debug#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).322), res: Err, args: None, infer_args: true })), span: src/main.rs:153:67: 153:71 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).318), kind: Path(Resolved(None, Path { span: src/main.rs:153:74: 153:85 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), segments: [PathSegment { ident: receiver_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).319), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), args: None, infer_args: true }] })), span: src/main.rs:153:74: 153:85 (#0) }), span: src/main.rs:153:74: 153:85 (#70) }]), span: src/main.rs:153:67: 153:71 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#69) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#69) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).331), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#69), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#69) } }, Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).335), span: src/main.rs:154:21: 154:73 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).334), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:154:21: 154:24 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), segments: [PathSegment { ident: Err#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).332), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).333), kind: Wild, span: src/main.rs:154:25: 154:26 (#0), default_binding_modes: true }], None), span: src/main.rs:154:21: 154:27 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).336), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).349), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).337), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).338), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#71), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).339), res: Err, args: None, infer_args: true }, PathSegment { ident: io#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).340), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).341), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#71) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).342), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).348), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).346), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }, PathSegment { ident: new_const#72, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).347), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).345), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).344), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).343), kind: Lit(Spanned { node: Str("  Receiver type: <unavailable>\n", Cooked), span: src/main.rs:154:40: 154:72 (#0) }), span: src/main.rs:154:40: 154:72 (#0) }]), span: src/main.rs:154:40: 154:72 (#0) }), span: src/main.rs:154:40: 154:72 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#71) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#71) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).350), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#71), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#71) } }], Normal), span: src/main.rs:150:17: 155:18 (#0) }), span: src/main.rs:150:17: 155:18 (#0) }], expr: Some(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).352), kind: If(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).353), kind: Let(Let { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).354), span: src/main.rs:158:20: 158:80 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).357), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:158:24: 158:28 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).355), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356), def_id#0, None), span: src/main.rs:158:29: 158:35 (#0), default_binding_modes: true }], None), span: src/main.rs:158:24: 158:36 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).358), kind: MethodCall(PathSegment { ident: type_dependent_def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).359), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).360), kind: Path(Resolved(None, Path { span: src/main.rs:158:39: 158:45 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).361), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })), span: src/main.rs:158:39: 158:45 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).362), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).363), kind: Path(Resolved(None, Path { span: src/main.rs:158:68: 158:72 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).364), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:158:68: 158:72 (#0) }, hir_id#0), span: src/main.rs:158:68: 158:79 (#0) }], src/main.rs:158:46: 158:80 (#0)), span: src/main.rs:158:39: 158:80 (#0) } }), span: src/main.rs:158:20: 158:80 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).430), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).395), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).365), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).393), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).366), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).367), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#73), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).368), res: Err, args: None, infer_args: true }, PathSegment { ident: io#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).369), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).370), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#73) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).371), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).392), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).390), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, PathSegment { ident: new_v1#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).391), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).375), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).374), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).372), kind: Lit(Spanned { node: Str("  Method: ", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).373), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }]), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).389), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).388), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).387), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).386), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).384), kind: Path(LangItem(FormatArgument, src/main.rs:159:41: 159:43 (#74), None)), span: src/main.rs:159:41: 159:43 (#74) }, PathSegment { ident: new_display#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).385), res: Err, args: None, infer_args: true })), span: src/main.rs:159:41: 159:43 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).383), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).376), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).377), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).378), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).379), kind: Path(Resolved(None, Path { span: src/main.rs:159:46: 159:50 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).380), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:159:46: 159:50 (#0) }, tcx#0), span: src/main.rs:159:46: 159:54 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).381), kind: Path(Resolved(None, Path { span: src/main.rs:159:68: 159:74 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).382), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:159:68: 159:74 (#0) }], src/main.rs:159:55: 159:75 (#0)), span: src/main.rs:159:46: 159:75 (#0) }), span: src/main.rs:159:46: 159:75 (#74) }]), span: src/main.rs:159:41: 159:43 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#73) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#73) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).394), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#73), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#73) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#73) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).428), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).396), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).426), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).397), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).398), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#75), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).399), res: Err, args: None, infer_args: true }, PathSegment { ident: io#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).400), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).401), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#75) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).402), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).425), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).423), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, PathSegment { ident: new_v1#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).424), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).406), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).405), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).403), kind: Lit(Spanned { node: Str("  Method type: ", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).404), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }]), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).422), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).421), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).420), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).419), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).417), kind: Path(LangItem(FormatArgument, src/main.rs:161:41: 161:45 (#76), None)), span: src/main.rs:161:41: 161:45 (#76) }, PathSegment { ident: new_debug#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).418), res: Err, args: None, infer_args: true })), span: src/main.rs:161:41: 161:45 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).416), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).407), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).408), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).409), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).410), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).411), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).412), kind: Path(Resolved(None, Path { span: src/main.rs:162:25: 162:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).413), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:162:25: 162:29 (#0) }, tcx#0), span: src/main.rs:162:25: 162:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).414), kind: Path(Resolved(None, Path { span: src/main.rs:162:42: 162:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).415), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:162:42: 162:48 (#0) }], src/main.rs:162:34: 162:49 (#0)), span: src/main.rs:162:25: 162:49 (#0) }, [], src/main.rs:162:50: 162:72 (#0)), span: src/main.rs:162:25: 162:72 (#0) }), span: src/main.rs:162:25: 162:72 (#76) }]), span: src/main.rs:161:41: 161:45 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#75) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#75) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).427), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#75), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#75) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#75) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).429), rules: DefaultBlock, span: src/main.rs:158:81: 164:18 (#0), targeted_by_break: false }, None), span: src/main.rs:158:81: 164:18 (#0) }, None), span: src/main.rs:158:17: 164:18 (#0) }), hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).431), rules: DefaultBlock, span: src/main.rs:142:81: 165:14 (#0), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).280), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).247), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).248), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#67), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).249), res: Err, args: None, infer_args: true }, PathSegment { ident: io#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).250), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).251), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#67) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).252), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).279), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).277), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }, PathSegment { ident: new_v1#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).278), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).257), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).256), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).253), kind: Lit(Spanned { node: Str("  Method call: ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).254), kind: Lit(Spanned { node: Str(" with ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).255), kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }]), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).276), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).275), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).265), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).264), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).262), kind: Path(LangItem(FormatArgument, src/main.rs:144:37: 144:39 (#68), None)), span: src/main.rs:144:37: 144:39 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).263), res: Err, args: None, infer_args: true })), span: src/main.rs:144:37: 144:39 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).261), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).258), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).259), kind: Path(Resolved(None, Path { span: src/main.rs:145:21: 145:33 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), segments: [PathSegment { ident: path_segment#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).260), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), args: None, infer_args: true }] })), span: src/main.rs:145:21: 145:33 (#0) }, ident#0), span: src/main.rs:145:21: 145:39 (#0) }), span: src/main.rs:145:21: 145:39 (#68) }]), span: src/main.rs:144:37: 144:39 (#68) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).274), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).273), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).271), kind: Path(LangItem(FormatArgument, src/main.rs:144:45: 144:47 (#68), None)), span: src/main.rs:144:45: 144:47 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).272), res: Err, args: None, infer_args: true })), span: src/main.rs:144:45: 144:47 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).270), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).266), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).267), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).268), kind: Path(Resolved(None, Path { span: src/main.rs:146:21: 146:25 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).269), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), args: None, infer_args: true }] })), span: src/main.rs:146:21: 146:25 (#0) }, [], src/main.rs:146:26: 146:31 (#0)), span: src/main.rs:146:21: 146:31 (#0) }), span: src/main.rs:146:21: 146:31 (#68) }]), span: src/main.rs:144:45: 144:47 (#68) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#67) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#67) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).281), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#67), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).248), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#67), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).249), res: Err, args: None, infer_args: true }, PathSegment { ident: io#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).250), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).251), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#67) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).252), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).279), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).277), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }, PathSegment { ident: new_v1#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).278), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).257), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).256), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).253), kind: Lit(Spanned { node: Str("  Method call: ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).254), kind: Lit(Spanned { node: Str(" with ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).255), kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }]), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).276), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).275), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).265), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).264), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).262), kind: Path(LangItem(FormatArgument, src/main.rs:144:37: 144:39 (#68), None)), span: src/main.rs:144:37: 144:39 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).263), res: Err, args: None, infer_args: true })), span: src/main.rs:144:37: 144:39 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).261), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).258), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).259), kind: Path(Resolved(None, Path { span: src/main.rs:145:21: 145:33 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), segments: [PathSegment { ident: path_segment#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).260), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), args: None, infer_args: true }] })), span: src/main.rs:145:21: 145:33 (#0) }, ident#0), span: src/main.rs:145:21: 145:39 (#0) }), span: src/main.rs:145:21: 145:39 (#68) }]), span: src/main.rs:144:37: 144:39 (#68) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).274), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).273), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).271), kind: Path(LangItem(FormatArgument, src/main.rs:144:45: 144:47 (#68), None)), span: src/main.rs:144:45: 144:47 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).272), res: Err, args: None, infer_args: true })), span: src/main.rs:144:45: 144:47 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).270), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).266), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).267), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).268), kind: Path(Resolved(None, Path { span: src/main.rs:146:21: 146:25 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).269), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), args: None, infer_args: true }] })), span: src/main.rs:146:21: 146:25 (#0) }, [], src/main.rs:146:26: 146:31 (#0)), span: src/main.rs:146:21: 146:31 (#0) }), span: src/main.rs:146:21: 146:31 (#68) }]), span: src/main.rs:144:45: 144:47 (#68) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#67), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).249), res: Err, args: None, infer_args: true }, PathSegment { ident: io#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).250), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#67, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).251), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).279), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).277), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }, PathSegment { ident: new_v1#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).278), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).257), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).256), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).253), kind: Lit(Spanned { node: Str("  Method call: ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).254), kind: Lit(Spanned { node: Str(" with ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).255), kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }]), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).276), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).275), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).265), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).264), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).262), kind: Path(LangItem(FormatArgument, src/main.rs:144:37: 144:39 (#68), None)), span: src/main.rs:144:37: 144:39 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).263), res: Err, args: None, infer_args: true })), span: src/main.rs:144:37: 144:39 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).261), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).258), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).259), kind: Path(Resolved(None, Path { span: src/main.rs:145:21: 145:33 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), segments: [PathSegment { ident: path_segment#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).260), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), args: None, infer_args: true }] })), span: src/main.rs:145:21: 145:33 (#0) }, ident#0), span: src/main.rs:145:21: 145:39 (#0) }), span: src/main.rs:145:21: 145:39 (#68) }]), span: src/main.rs:144:37: 144:39 (#68) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).274), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).273), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).271), kind: Path(LangItem(FormatArgument, src/main.rs:144:45: 144:47 (#68), None)), span: src/main.rs:144:45: 144:47 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).272), res: Err, args: None, infer_args: true })), span: src/main.rs:144:45: 144:47 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).270), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).266), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).267), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).268), kind: Path(Resolved(None, Path { span: src/main.rs:146:21: 146:25 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).269), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), args: None, infer_args: true }] })), span: src/main.rs:146:21: 146:25 (#0) }, [], src/main.rs:146:26: 146:31 (#0)), span: src/main.rs:146:21: 146:31 (#0) }), span: src/main.rs:146:21: 146:31 (#68) }]), span: src/main.rs:144:45: 144:47 (#68) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).277), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }, PathSegment { ident: new_v1#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).278), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).256), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).253), kind: Lit(Spanned { node: Str("  Method call: ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).254), kind: Lit(Spanned { node: Str(" with ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).255), kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }]), span: src/main.rs:144:21: 144:58 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000003) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).253), kind: Lit(Spanned { node: Str("  Method call: ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).254), kind: Lit(Spanned { node: Str(" with ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).255), kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:144:21: 144:58 (#0) }), span: src/main.rs:144:21: 144:58 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000003) }]
Expression (kind: Lit(Spanned { node: Str("  Method call: ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str(" with ", Cooked), span: src/main.rs:144:21: 144:58 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str(" arguments\n", Cooked), span: src/main.rs:144:21: 144:58 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).275), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).265), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).264), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).262), kind: Path(LangItem(FormatArgument, src/main.rs:144:37: 144:39 (#68), None)), span: src/main.rs:144:37: 144:39 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).263), res: Err, args: None, infer_args: true })), span: src/main.rs:144:37: 144:39 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).261), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).258), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).259), kind: Path(Resolved(None, Path { span: src/main.rs:145:21: 145:33 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), segments: [PathSegment { ident: path_segment#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).260), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), args: None, infer_args: true }] })), span: src/main.rs:145:21: 145:33 (#0) }, ident#0), span: src/main.rs:145:21: 145:39 (#0) }), span: src/main.rs:145:21: 145:39 (#68) }]), span: src/main.rs:144:37: 144:39 (#68) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).274), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).273), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).271), kind: Path(LangItem(FormatArgument, src/main.rs:144:45: 144:47 (#68), None)), span: src/main.rs:144:45: 144:47 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).272), res: Err, args: None, infer_args: true })), span: src/main.rs:144:45: 144:47 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).270), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).266), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).267), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).268), kind: Path(Resolved(None, Path { span: src/main.rs:146:21: 146:25 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).269), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), args: None, infer_args: true }] })), span: src/main.rs:146:21: 146:25 (#0) }, [], src/main.rs:146:26: 146:31 (#0)), span: src/main.rs:146:21: 146:31 (#0) }), span: src/main.rs:146:21: 146:31 (#68) }]), span: src/main.rs:144:45: 144:47 (#68) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#68) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).265), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).264), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).262), kind: Path(LangItem(FormatArgument, src/main.rs:144:37: 144:39 (#68), None)), span: src/main.rs:144:37: 144:39 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).263), res: Err, args: None, infer_args: true })), span: src/main.rs:144:37: 144:39 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).261), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).258), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).259), kind: Path(Resolved(None, Path { span: src/main.rs:145:21: 145:33 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), segments: [PathSegment { ident: path_segment#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).260), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), args: None, infer_args: true }] })), span: src/main.rs:145:21: 145:33 (#0) }, ident#0), span: src/main.rs:145:21: 145:39 (#0) }), span: src/main.rs:145:21: 145:39 (#68) }]), span: src/main.rs:144:37: 144:39 (#68) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).274), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).273), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).271), kind: Path(LangItem(FormatArgument, src/main.rs:144:45: 144:47 (#68), None)), span: src/main.rs:144:45: 144:47 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).272), res: Err, args: None, infer_args: true })), span: src/main.rs:144:45: 144:47 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).270), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).266), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).267), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).268), kind: Path(Resolved(None, Path { span: src/main.rs:146:21: 146:25 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).269), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), args: None, infer_args: true }] })), span: src/main.rs:146:21: 146:25 (#0) }, [], src/main.rs:146:26: 146:31 (#0)), span: src/main.rs:146:21: 146:31 (#0) }), span: src/main.rs:146:21: 146:31 (#68) }]), span: src/main.rs:144:45: 144:47 (#68) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).264), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).262), kind: Path(LangItem(FormatArgument, src/main.rs:144:37: 144:39 (#68), None)), span: src/main.rs:144:37: 144:39 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).263), res: Err, args: None, infer_args: true })), span: src/main.rs:144:37: 144:39 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).261), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).258), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).259), kind: Path(Resolved(None, Path { span: src/main.rs:145:21: 145:33 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), segments: [PathSegment { ident: path_segment#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).260), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), args: None, infer_args: true }] })), span: src/main.rs:145:21: 145:33 (#0) }, ident#0), span: src/main.rs:145:21: 145:39 (#0) }), span: src/main.rs:145:21: 145:39 (#68) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_display
  Function type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).262), kind: Path(LangItem(FormatArgument, src/main.rs:144:37: 144:39 (#68), None)), span: src/main.rs:144:37: 144:39 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).263), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReErased, Adt(rustc_span::symbol::Ident, [])])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).258), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).259), kind: Path(Resolved(None, Path { span: src/main.rs:145:21: 145:33 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), segments: [PathSegment { ident: path_segment#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).260), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), args: None, infer_args: true }] })), span: src/main.rs:145:21: 145:33 (#0) }, ident#0), span: src/main.rs:145:21: 145:39 (#0) }))
  Expression type: &ReErased Adt(rustc_span::symbol::Ident, [])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).259), kind: Path(Resolved(None, Path { span: src/main.rs:145:21: 145:33 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), segments: [PathSegment { ident: path_segment#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).260), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), args: None, infer_args: true }] })), span: src/main.rs:145:21: 145:33 (#0) }, ident#0))
  Expression type: Adt(rustc_span::symbol::Ident, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:145:21: 145:33 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), segments: [PathSegment { ident: path_segment#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).260), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).239)), args: None, infer_args: true }] })))
  Expression type: &ReErased &ReErased Adt(rustc_hir::PathSegment, [ReErased])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).273), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).271), kind: Path(LangItem(FormatArgument, src/main.rs:144:45: 144:47 (#68), None)), span: src/main.rs:144:45: 144:47 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).272), res: Err, args: None, infer_args: true })), span: src/main.rs:144:45: 144:47 (#68) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).270), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).266), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).267), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).268), kind: Path(Resolved(None, Path { span: src/main.rs:146:21: 146:25 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).269), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), args: None, infer_args: true }] })), span: src/main.rs:146:21: 146:25 (#0) }, [], src/main.rs:146:26: 146:31 (#0)), span: src/main.rs:146:21: 146:31 (#0) }), span: src/main.rs:146:21: 146:31 (#68) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_display
  Function type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).271), kind: Path(LangItem(FormatArgument, src/main.rs:144:45: 144:47 (#68), None)), span: src/main.rs:144:45: 144:47 (#68) }, PathSegment { ident: new_display#68, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).272), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReErased, usize])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).266), kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).267), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).268), kind: Path(Resolved(None, Path { span: src/main.rs:146:21: 146:25 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).269), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), args: None, infer_args: true }] })), span: src/main.rs:146:21: 146:25 (#0) }, [], src/main.rs:146:26: 146:31 (#0)), span: src/main.rs:146:21: 146:31 (#0) }))
  Expression type: &ReErased usize
Expression (kind: MethodCall(PathSegment { ident: len#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).267), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).268), kind: Path(Resolved(None, Path { span: src/main.rs:146:21: 146:25 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).269), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), args: None, infer_args: true }] })), span: src/main.rs:146:21: 146:25 (#0) }, [], src/main.rs:146:26: 146:31 (#0)))
  Method call: len with 0 arguments
  Receiver type: &ReErased &ReErased [Adt(rustc_hir::Expr, [ReErased])]
  Method: core::slice::<impl [T]>::len
  Method type: FnDef(DefId(2:11262 ~ core[ae61]::slice::{impl#0}::len), [T/#0])
  Expression type: usize
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:146:21: 146:25 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).269), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).241)), args: None, infer_args: true }] })))
  Expression type: &ReErased &ReErased [Adt(rustc_hir::Expr, [ReErased])]
Expression (kind: Match(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).284), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).285), kind: Path(Resolved(None, Path { span: src/main.rs:150:23: 150:47 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).286), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).287), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).288), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })), span: src/main.rs:150:23: 150:47 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).289), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).290), kind: Path(Resolved(None, Path { span: src/main.rs:150:48: 150:76 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).291), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).292), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).293), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:150:48: 150:76 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).294), kind: Closure(Closure { def_id: DefId(0:35 ~ main[cc0f]::{impl#1}::visit_expr::{closure#1}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:150:80: 150:80 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).295) }, fn_decl_span: src/main.rs:150:77: 150:79 (#0), fn_arg_span: Some(src/main.rs:150:77: 150:79 (#0)), movability: None }), span: src/main.rs:150:77: 152:18 (#0) }]), span: src/main.rs:150:48: 152:19 (#0) }]), span: src/main.rs:150:23: 152:20 (#0) }, [Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).306), span: src/main.rs:153:21: 153:86 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).305), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:153:21: 153:23 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), segments: [PathSegment { ident: Ok#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).303), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304), receiver_ty#0, None), span: src/main.rs:153:24: 153:35 (#0), default_binding_modes: true }], None), span: src/main.rs:153:21: 153:36 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).307), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).330), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).308), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).309), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#69), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).310), res: Err, args: None, infer_args: true }, PathSegment { ident: io#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).311), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).312), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#69) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).313), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).329), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).327), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }, PathSegment { ident: new_v1#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).328), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).317), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).316), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).314), kind: Lit(Spanned { node: Str("  Receiver type: ", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).315), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }]), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).326), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).325), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).324), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).321), kind: Path(LangItem(FormatArgument, src/main.rs:153:67: 153:71 (#70), None)), span: src/main.rs:153:67: 153:71 (#70) }, PathSegment { ident: new_debug#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).322), res: Err, args: None, infer_args: true })), span: src/main.rs:153:67: 153:71 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).318), kind: Path(Resolved(None, Path { span: src/main.rs:153:74: 153:85 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), segments: [PathSegment { ident: receiver_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).319), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), args: None, infer_args: true }] })), span: src/main.rs:153:74: 153:85 (#0) }), span: src/main.rs:153:74: 153:85 (#70) }]), span: src/main.rs:153:67: 153:71 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#69) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#69) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).331), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#69), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#69) } }, Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).335), span: src/main.rs:154:21: 154:73 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).334), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:154:21: 154:24 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), segments: [PathSegment { ident: Err#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).332), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).333), kind: Wild, span: src/main.rs:154:25: 154:26 (#0), default_binding_modes: true }], None), span: src/main.rs:154:21: 154:27 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).336), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).349), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).337), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).338), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#71), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).339), res: Err, args: None, infer_args: true }, PathSegment { ident: io#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).340), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).341), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#71) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).342), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).348), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).346), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }, PathSegment { ident: new_const#72, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).347), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).345), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).344), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).343), kind: Lit(Spanned { node: Str("  Receiver type: <unavailable>\n", Cooked), span: src/main.rs:154:40: 154:72 (#0) }), span: src/main.rs:154:40: 154:72 (#0) }]), span: src/main.rs:154:40: 154:72 (#0) }), span: src/main.rs:154:40: 154:72 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#71) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#71) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).350), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#71), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#71) } }], Normal))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).285), kind: Path(Resolved(None, Path { span: src/main.rs:150:23: 150:47 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).286), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).287), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).288), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })), span: src/main.rs:150:23: 150:47 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).289), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).290), kind: Path(Resolved(None, Path { span: src/main.rs:150:48: 150:76 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).291), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).292), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).293), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:150:48: 150:76 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).294), kind: Closure(Closure { def_id: DefId(0:35 ~ main[cc0f]::{impl#1}::visit_expr::{closure#1}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:150:80: 150:80 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).295) }, fn_decl_span: src/main.rs:150:77: 150:79 (#0), fn_arg_span: Some(src/main.rs:150:77: 150:79 (#0)), movability: None }), span: src/main.rs:150:77: 152:18 (#0) }]), span: src/main.rs:150:48: 152:19 (#0) }]))
  Function call with 1 arguments
  Expression type: Adt(std::result::Result, [Adt(rustc_middle::ty::Ty, [ReErased]), Adt(std::boxed::Box, [dyn [Binder(Trait(std::any::Any), []), Binder(AutoTrait(DefId(2:2765 ~ core[ae61]::marker::Send)), [])] + ReErased, Adt(std::alloc::Global, [])])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:150:23: 150:47 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).286), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).287), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).288), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:4782 ~ std[3ef1]::panic::catch_unwind), [Adt(std::panic::AssertUnwindSafe, [Closure(DefId(0:35 ~ main[cc0f]::{impl#1}::visit_expr::{closure#1}), [ReErased, i8, Binder(extern "RustCall" fn(()) -> Adt(rustc_middle::ty::Ty, [ReErased]), []), (&ReErased &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])&ReErased &ReErased &ReErased Adt(rustc_hir::Expr, [ReErased])))])]), Adt(rustc_middle::ty::Ty, [ReErased])])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).290), kind: Path(Resolved(None, Path { span: src/main.rs:150:48: 150:76 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).291), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).292), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).293), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:150:48: 150:76 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).294), kind: Closure(Closure { def_id: DefId(0:35 ~ main[cc0f]::{impl#1}::visit_expr::{closure#1}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:150:80: 150:80 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).295) }, fn_decl_span: src/main.rs:150:77: 150:79 (#0), fn_arg_span: Some(src/main.rs:150:77: 150:79 (#0)), movability: None }), span: src/main.rs:150:77: 152:18 (#0) }]))
  Function call with 1 arguments
  Expression type: Adt(std::panic::AssertUnwindSafe, [Closure(DefId(0:35 ~ main[cc0f]::{impl#1}::visit_expr::{closure#1}), [ReErased, i8, Binder(extern "RustCall" fn(()) -> Adt(rustc_middle::ty::Ty, [ReErased]), []), (&ReErased &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])&ReErased &ReErased &ReErased Adt(rustc_hir::Expr, [ReErased])))])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:150:48: 150:76 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).291), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).292), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).293), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0}), [Closure(DefId(0:35 ~ main[cc0f]::{impl#1}::visit_expr::{closure#1}), [ReErased, i8, Binder(extern "RustCall" fn(()) -> Adt(rustc_middle::ty::Ty, [ReErased]), []), (&ReErased &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])&ReErased &ReErased &ReErased Adt(rustc_hir::Expr, [ReErased])))])])
Expression (kind: Closure(Closure { def_id: DefId(0:35 ~ main[cc0f]::{impl#1}::visit_expr::{closure#1}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:150:80: 150:80 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).295) }, fn_decl_span: src/main.rs:150:77: 150:79 (#0), fn_arg_span: Some(src/main.rs:150:77: 150:79 (#0)), movability: None }))
  Expression type: Closure(DefId(0:35 ~ main[cc0f]::{impl#1}::visit_expr::{closure#1}), [ReErased, i8, Binder(extern "RustCall" fn(()) -> Adt(rustc_middle::ty::Ty, [ReErased]), []), (&ReErased &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])&ReErased &ReErased &ReErased Adt(rustc_hir::Expr, [ReErased])))])
Expression (kind: Block(Block { stmts: [], expr: Some(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).296), kind: MethodCall(PathSegment { ident: expr_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).297), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).298), kind: Path(Resolved(None, Path { span: src/main.rs:151:21: 151:27 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).299), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })), span: src/main.rs:151:21: 151:27 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).300), kind: Path(Resolved(None, Path { span: src/main.rs:151:36: 151:44 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).240)), segments: [PathSegment { ident: receiver#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).301), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).240)), args: None, infer_args: true }] })), span: src/main.rs:151:36: 151:44 (#0) }], src/main.rs:151:28: 151:45 (#0)), span: src/main.rs:151:21: 151:45 (#0) }), hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).302), rules: DefaultBlock, span: src/main.rs:150:80: 152:18 (#0), targeted_by_break: false }, None))
  Expression type: Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: MethodCall(PathSegment { ident: expr_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).297), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).298), kind: Path(Resolved(None, Path { span: src/main.rs:151:21: 151:27 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).299), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })), span: src/main.rs:151:21: 151:27 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).300), kind: Path(Resolved(None, Path { span: src/main.rs:151:36: 151:44 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).240)), segments: [PathSegment { ident: receiver#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).301), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).240)), args: None, infer_args: true }] })), span: src/main.rs:151:36: 151:44 (#0) }], src/main.rs:151:28: 151:45 (#0)))
  Method call: expr_ty with 1 arguments
  Receiver type: &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])
  Method: rustc_middle::ty::TypeckResults::<'tcx>::expr_ty
  Method type: FnDef(DefId(155:8583 ~ rustc_middle[ca3f]::ty::typeck_results::{impl#0}::expr_ty), [ReEarlyBound(DefId(155:8554 ~ rustc_middle[ca3f]::ty::typeck_results::{impl#0}::'tcx), 0, 'tcx)])
  Expression type: Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:151:21: 151:27 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).299), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:151:36: 151:44 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).240)), segments: [PathSegment { ident: receiver#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).301), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).240)), args: None, infer_args: true }] })))
  Expression type: &ReErased &ReErased Adt(rustc_hir::Expr, [ReErased])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).330), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).308), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).309), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#69), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).310), res: Err, args: None, infer_args: true }, PathSegment { ident: io#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).311), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).312), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#69) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).313), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).329), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).327), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }, PathSegment { ident: new_v1#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).328), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).317), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).316), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).314), kind: Lit(Spanned { node: Str("  Receiver type: ", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).315), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }]), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).326), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).325), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).324), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).321), kind: Path(LangItem(FormatArgument, src/main.rs:153:67: 153:71 (#70), None)), span: src/main.rs:153:67: 153:71 (#70) }, PathSegment { ident: new_debug#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).322), res: Err, args: None, infer_args: true })), span: src/main.rs:153:67: 153:71 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).318), kind: Path(Resolved(None, Path { span: src/main.rs:153:74: 153:85 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), segments: [PathSegment { ident: receiver_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).319), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), args: None, infer_args: true }] })), span: src/main.rs:153:74: 153:85 (#0) }), span: src/main.rs:153:74: 153:85 (#70) }]), span: src/main.rs:153:67: 153:71 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#69) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#69) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).331), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#69), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).309), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#69), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).310), res: Err, args: None, infer_args: true }, PathSegment { ident: io#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).311), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).312), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#69) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).313), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).329), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).327), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }, PathSegment { ident: new_v1#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).328), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).317), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).316), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).314), kind: Lit(Spanned { node: Str("  Receiver type: ", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).315), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }]), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).326), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).325), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).324), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).321), kind: Path(LangItem(FormatArgument, src/main.rs:153:67: 153:71 (#70), None)), span: src/main.rs:153:67: 153:71 (#70) }, PathSegment { ident: new_debug#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).322), res: Err, args: None, infer_args: true })), span: src/main.rs:153:67: 153:71 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).318), kind: Path(Resolved(None, Path { span: src/main.rs:153:74: 153:85 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), segments: [PathSegment { ident: receiver_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).319), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), args: None, infer_args: true }] })), span: src/main.rs:153:74: 153:85 (#0) }), span: src/main.rs:153:74: 153:85 (#70) }]), span: src/main.rs:153:67: 153:71 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#69), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).310), res: Err, args: None, infer_args: true }, PathSegment { ident: io#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).311), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#69, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).312), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).329), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).327), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }, PathSegment { ident: new_v1#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).328), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).317), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).316), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).314), kind: Lit(Spanned { node: Str("  Receiver type: ", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).315), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }]), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).326), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).325), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).324), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).321), kind: Path(LangItem(FormatArgument, src/main.rs:153:67: 153:71 (#70), None)), span: src/main.rs:153:67: 153:71 (#70) }, PathSegment { ident: new_debug#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).322), res: Err, args: None, infer_args: true })), span: src/main.rs:153:67: 153:71 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).318), kind: Path(Resolved(None, Path { span: src/main.rs:153:74: 153:85 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), segments: [PathSegment { ident: receiver_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).319), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), args: None, infer_args: true }] })), span: src/main.rs:153:74: 153:85 (#0) }), span: src/main.rs:153:74: 153:85 (#70) }]), span: src/main.rs:153:67: 153:71 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).327), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }, PathSegment { ident: new_v1#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).328), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).316), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).314), kind: Lit(Spanned { node: Str("  Receiver type: ", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).315), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }]), span: src/main.rs:153:49: 153:72 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).314), kind: Lit(Spanned { node: Str("  Receiver type: ", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).315), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:153:49: 153:72 (#0) }), span: src/main.rs:153:49: 153:72 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Lit(Spanned { node: Str("  Receiver type: ", Cooked), span: src/main.rs:153:49: 153:72 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:153:49: 153:72 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).325), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).324), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).321), kind: Path(LangItem(FormatArgument, src/main.rs:153:67: 153:71 (#70), None)), span: src/main.rs:153:67: 153:71 (#70) }, PathSegment { ident: new_debug#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).322), res: Err, args: None, infer_args: true })), span: src/main.rs:153:67: 153:71 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).318), kind: Path(Resolved(None, Path { span: src/main.rs:153:74: 153:85 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), segments: [PathSegment { ident: receiver_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).319), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), args: None, infer_args: true }] })), span: src/main.rs:153:74: 153:85 (#0) }), span: src/main.rs:153:74: 153:85 (#70) }]), span: src/main.rs:153:67: 153:71 (#70) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#70) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).324), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).321), kind: Path(LangItem(FormatArgument, src/main.rs:153:67: 153:71 (#70), None)), span: src/main.rs:153:67: 153:71 (#70) }, PathSegment { ident: new_debug#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).322), res: Err, args: None, infer_args: true })), span: src/main.rs:153:67: 153:71 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).318), kind: Path(Resolved(None, Path { span: src/main.rs:153:74: 153:85 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), segments: [PathSegment { ident: receiver_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).319), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), args: None, infer_args: true }] })), span: src/main.rs:153:74: 153:85 (#0) }), span: src/main.rs:153:74: 153:85 (#70) }]), span: src/main.rs:153:67: 153:71 (#70) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).323), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).321), kind: Path(LangItem(FormatArgument, src/main.rs:153:67: 153:71 (#70), None)), span: src/main.rs:153:67: 153:71 (#70) }, PathSegment { ident: new_debug#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).322), res: Err, args: None, infer_args: true })), span: src/main.rs:153:67: 153:71 (#70) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).320), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).318), kind: Path(Resolved(None, Path { span: src/main.rs:153:74: 153:85 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), segments: [PathSegment { ident: receiver_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).319), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), args: None, infer_args: true }] })), span: src/main.rs:153:74: 153:85 (#0) }), span: src/main.rs:153:74: 153:85 (#70) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_debug
  Function type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).321), kind: Path(LangItem(FormatArgument, src/main.rs:153:67: 153:71 (#70), None)), span: src/main.rs:153:67: 153:71 (#70) }, PathSegment { ident: new_debug#70, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).322), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReErased, Adt(rustc_middle::ty::Ty, [ReErased])])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).318), kind: Path(Resolved(None, Path { span: src/main.rs:153:74: 153:85 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), segments: [PathSegment { ident: receiver_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).319), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), args: None, infer_args: true }] })), span: src/main.rs:153:74: 153:85 (#0) }))
  Expression type: &ReErased Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:153:74: 153:85 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), segments: [PathSegment { ident: receiver_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).319), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).304)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).349), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).337), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).338), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#71), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).339), res: Err, args: None, infer_args: true }, PathSegment { ident: io#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).340), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).341), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#71) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).342), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).348), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).346), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }, PathSegment { ident: new_const#72, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).347), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).345), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).344), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).343), kind: Lit(Spanned { node: Str("  Receiver type: <unavailable>\n", Cooked), span: src/main.rs:154:40: 154:72 (#0) }), span: src/main.rs:154:40: 154:72 (#0) }]), span: src/main.rs:154:40: 154:72 (#0) }), span: src/main.rs:154:40: 154:72 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#71) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#71) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).350), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#71), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).338), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#71), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).339), res: Err, args: None, infer_args: true }, PathSegment { ident: io#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).340), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).341), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#71) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).342), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).348), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).346), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }, PathSegment { ident: new_const#72, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).347), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).345), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).344), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).343), kind: Lit(Spanned { node: Str("  Receiver type: <unavailable>\n", Cooked), span: src/main.rs:154:40: 154:72 (#0) }), span: src/main.rs:154:40: 154:72 (#0) }]), span: src/main.rs:154:40: 154:72 (#0) }), span: src/main.rs:154:40: 154:72 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#71), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).339), res: Err, args: None, infer_args: true }, PathSegment { ident: io#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).340), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#71, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).341), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).348), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).346), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }, PathSegment { ident: new_const#72, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).347), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).345), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).344), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).343), kind: Lit(Spanned { node: Str("  Receiver type: <unavailable>\n", Cooked), span: src/main.rs:154:40: 154:72 (#0) }), span: src/main.rs:154:40: 154:72 (#0) }]), span: src/main.rs:154:40: 154:72 (#0) }), span: src/main.rs:154:40: 154:72 (#0) }]))
  Function call with 1 arguments
  Called function: std::fmt::Arguments::<'a>::new_const
  Function type: FnDef(DefId(2:9415 ~ core[ae61]::fmt::{impl#2}::new_const), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).346), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#72) }, PathSegment { ident: new_const#72, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).347), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9415 ~ core[ae61]::fmt::{impl#2}::new_const), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).344), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).343), kind: Lit(Spanned { node: Str("  Receiver type: <unavailable>\n", Cooked), span: src/main.rs:154:40: 154:72 (#0) }), span: src/main.rs:154:40: 154:72 (#0) }]), span: src/main.rs:154:40: 154:72 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).343), kind: Lit(Spanned { node: Str("  Receiver type: <unavailable>\n", Cooked), span: src/main.rs:154:40: 154:72 (#0) }), span: src/main.rs:154:40: 154:72 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Lit(Spanned { node: Str("  Receiver type: <unavailable>\n", Cooked), span: src/main.rs:154:40: 154:72 (#0) }))
  Expression type: &ReErased str
Expression (kind: If(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).353), kind: Let(Let { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).354), span: src/main.rs:158:20: 158:80 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).357), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:158:24: 158:28 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).355), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356), def_id#0, None), span: src/main.rs:158:29: 158:35 (#0), default_binding_modes: true }], None), span: src/main.rs:158:24: 158:36 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).358), kind: MethodCall(PathSegment { ident: type_dependent_def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).359), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).360), kind: Path(Resolved(None, Path { span: src/main.rs:158:39: 158:45 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).361), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })), span: src/main.rs:158:39: 158:45 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).362), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).363), kind: Path(Resolved(None, Path { span: src/main.rs:158:68: 158:72 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).364), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:158:68: 158:72 (#0) }, hir_id#0), span: src/main.rs:158:68: 158:79 (#0) }], src/main.rs:158:46: 158:80 (#0)), span: src/main.rs:158:39: 158:80 (#0) } }), span: src/main.rs:158:20: 158:80 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).430), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).395), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).365), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).393), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).366), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).367), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#73), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).368), res: Err, args: None, infer_args: true }, PathSegment { ident: io#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).369), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).370), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#73) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).371), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).392), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).390), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, PathSegment { ident: new_v1#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).391), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).375), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).374), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).372), kind: Lit(Spanned { node: Str("  Method: ", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).373), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }]), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).389), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).388), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).387), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).386), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).384), kind: Path(LangItem(FormatArgument, src/main.rs:159:41: 159:43 (#74), None)), span: src/main.rs:159:41: 159:43 (#74) }, PathSegment { ident: new_display#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).385), res: Err, args: None, infer_args: true })), span: src/main.rs:159:41: 159:43 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).383), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).376), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).377), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).378), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).379), kind: Path(Resolved(None, Path { span: src/main.rs:159:46: 159:50 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).380), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:159:46: 159:50 (#0) }, tcx#0), span: src/main.rs:159:46: 159:54 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).381), kind: Path(Resolved(None, Path { span: src/main.rs:159:68: 159:74 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).382), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:159:68: 159:74 (#0) }], src/main.rs:159:55: 159:75 (#0)), span: src/main.rs:159:46: 159:75 (#0) }), span: src/main.rs:159:46: 159:75 (#74) }]), span: src/main.rs:159:41: 159:43 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#73) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#73) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).394), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#73), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#73) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#73) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).428), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).396), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).426), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).397), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).398), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#75), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).399), res: Err, args: None, infer_args: true }, PathSegment { ident: io#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).400), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).401), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#75) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).402), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).425), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).423), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, PathSegment { ident: new_v1#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).424), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).406), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).405), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).403), kind: Lit(Spanned { node: Str("  Method type: ", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).404), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }]), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).422), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).421), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).420), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).419), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).417), kind: Path(LangItem(FormatArgument, src/main.rs:161:41: 161:45 (#76), None)), span: src/main.rs:161:41: 161:45 (#76) }, PathSegment { ident: new_debug#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).418), res: Err, args: None, infer_args: true })), span: src/main.rs:161:41: 161:45 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).416), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).407), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).408), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).409), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).410), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).411), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).412), kind: Path(Resolved(None, Path { span: src/main.rs:162:25: 162:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).413), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:162:25: 162:29 (#0) }, tcx#0), span: src/main.rs:162:25: 162:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).414), kind: Path(Resolved(None, Path { span: src/main.rs:162:42: 162:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).415), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:162:42: 162:48 (#0) }], src/main.rs:162:34: 162:49 (#0)), span: src/main.rs:162:25: 162:49 (#0) }, [], src/main.rs:162:50: 162:72 (#0)), span: src/main.rs:162:25: 162:72 (#0) }), span: src/main.rs:162:25: 162:72 (#76) }]), span: src/main.rs:161:41: 161:45 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#75) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#75) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).427), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#75), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#75) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#75) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).429), rules: DefaultBlock, span: src/main.rs:158:81: 164:18 (#0), targeted_by_break: false }, None), span: src/main.rs:158:81: 164:18 (#0) }, None))
  Expression type: ()
Expression (kind: Let(Let { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).354), span: src/main.rs:158:20: 158:80 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).357), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:158:24: 158:28 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).355), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356), def_id#0, None), span: src/main.rs:158:29: 158:35 (#0), default_binding_modes: true }], None), span: src/main.rs:158:24: 158:36 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).358), kind: MethodCall(PathSegment { ident: type_dependent_def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).359), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).360), kind: Path(Resolved(None, Path { span: src/main.rs:158:39: 158:45 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).361), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })), span: src/main.rs:158:39: 158:45 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).362), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).363), kind: Path(Resolved(None, Path { span: src/main.rs:158:68: 158:72 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).364), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:158:68: 158:72 (#0) }, hir_id#0), span: src/main.rs:158:68: 158:79 (#0) }], src/main.rs:158:46: 158:80 (#0)), span: src/main.rs:158:39: 158:80 (#0) } }))
  Expression type: bool
Expression (kind: MethodCall(PathSegment { ident: type_dependent_def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).359), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).360), kind: Path(Resolved(None, Path { span: src/main.rs:158:39: 158:45 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).361), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })), span: src/main.rs:158:39: 158:45 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).362), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).363), kind: Path(Resolved(None, Path { span: src/main.rs:158:68: 158:72 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).364), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:158:68: 158:72 (#0) }, hir_id#0), span: src/main.rs:158:68: 158:79 (#0) }], src/main.rs:158:46: 158:80 (#0)))
  Method call: type_dependent_def_id with 1 arguments
  Receiver type: &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])
  Method: rustc_middle::ty::TypeckResults::<'tcx>::type_dependent_def_id
  Method type: FnDef(DefId(155:8561 ~ rustc_middle[ca3f]::ty::typeck_results::{impl#0}::type_dependent_def_id), [ReEarlyBound(DefId(155:8554 ~ rustc_middle[ca3f]::ty::typeck_results::{impl#0}::'tcx), 0, 'tcx)])
  Expression type: Adt(std::option::Option, [Adt(rustc_span::def_id::DefId, [])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:158:39: 158:45 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).361), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).363), kind: Path(Resolved(None, Path { span: src/main.rs:158:68: 158:72 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).364), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:158:68: 158:72 (#0) }, hir_id#0))
  Expression type: Adt(rustc_hir::HirId, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:158:68: 158:72 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).364), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_hir::Expr, [ReErased])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).395), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).365), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).393), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).366), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).367), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#73), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).368), res: Err, args: None, infer_args: true }, PathSegment { ident: io#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).369), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).370), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#73) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).371), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).392), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).390), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, PathSegment { ident: new_v1#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).391), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).375), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).374), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).372), kind: Lit(Spanned { node: Str("  Method: ", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).373), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }]), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).389), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).388), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).387), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).386), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).384), kind: Path(LangItem(FormatArgument, src/main.rs:159:41: 159:43 (#74), None)), span: src/main.rs:159:41: 159:43 (#74) }, PathSegment { ident: new_display#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).385), res: Err, args: None, infer_args: true })), span: src/main.rs:159:41: 159:43 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).383), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).376), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).377), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).378), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).379), kind: Path(Resolved(None, Path { span: src/main.rs:159:46: 159:50 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).380), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:159:46: 159:50 (#0) }, tcx#0), span: src/main.rs:159:46: 159:54 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).381), kind: Path(Resolved(None, Path { span: src/main.rs:159:68: 159:74 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).382), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:159:68: 159:74 (#0) }], src/main.rs:159:55: 159:75 (#0)), span: src/main.rs:159:46: 159:75 (#0) }), span: src/main.rs:159:46: 159:75 (#74) }]), span: src/main.rs:159:41: 159:43 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#73) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#73) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).394), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#73), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#73) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#73) }, Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).428), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).396), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).426), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).397), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).398), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#75), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).399), res: Err, args: None, infer_args: true }, PathSegment { ident: io#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).400), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).401), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#75) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).402), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).425), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).423), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, PathSegment { ident: new_v1#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).424), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).406), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).405), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).403), kind: Lit(Spanned { node: Str("  Method type: ", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).404), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }]), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).422), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).421), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).420), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).419), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).417), kind: Path(LangItem(FormatArgument, src/main.rs:161:41: 161:45 (#76), None)), span: src/main.rs:161:41: 161:45 (#76) }, PathSegment { ident: new_debug#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).418), res: Err, args: None, infer_args: true })), span: src/main.rs:161:41: 161:45 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).416), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).407), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).408), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).409), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).410), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).411), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).412), kind: Path(Resolved(None, Path { span: src/main.rs:162:25: 162:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).413), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:162:25: 162:29 (#0) }, tcx#0), span: src/main.rs:162:25: 162:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).414), kind: Path(Resolved(None, Path { span: src/main.rs:162:42: 162:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).415), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:162:42: 162:48 (#0) }], src/main.rs:162:34: 162:49 (#0)), span: src/main.rs:162:25: 162:49 (#0) }, [], src/main.rs:162:50: 162:72 (#0)), span: src/main.rs:162:25: 162:72 (#0) }), span: src/main.rs:162:25: 162:72 (#76) }]), span: src/main.rs:161:41: 161:45 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#75) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#75) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).427), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#75), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#75) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#75) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).429), rules: DefaultBlock, span: src/main.rs:158:81: 164:18 (#0), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).393), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).366), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).367), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#73), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).368), res: Err, args: None, infer_args: true }, PathSegment { ident: io#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).369), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).370), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#73) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).371), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).392), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).390), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, PathSegment { ident: new_v1#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).391), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).375), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).374), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).372), kind: Lit(Spanned { node: Str("  Method: ", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).373), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }]), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).389), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).388), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).387), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).386), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).384), kind: Path(LangItem(FormatArgument, src/main.rs:159:41: 159:43 (#74), None)), span: src/main.rs:159:41: 159:43 (#74) }, PathSegment { ident: new_display#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).385), res: Err, args: None, infer_args: true })), span: src/main.rs:159:41: 159:43 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).383), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).376), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).377), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).378), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).379), kind: Path(Resolved(None, Path { span: src/main.rs:159:46: 159:50 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).380), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:159:46: 159:50 (#0) }, tcx#0), span: src/main.rs:159:46: 159:54 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).381), kind: Path(Resolved(None, Path { span: src/main.rs:159:68: 159:74 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).382), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:159:68: 159:74 (#0) }], src/main.rs:159:55: 159:75 (#0)), span: src/main.rs:159:46: 159:75 (#0) }), span: src/main.rs:159:46: 159:75 (#74) }]), span: src/main.rs:159:41: 159:43 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#73) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#73) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).394), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#73), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).367), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#73), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).368), res: Err, args: None, infer_args: true }, PathSegment { ident: io#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).369), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).370), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#73) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).371), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).392), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).390), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, PathSegment { ident: new_v1#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).391), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).375), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).374), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).372), kind: Lit(Spanned { node: Str("  Method: ", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).373), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }]), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).389), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).388), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).387), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).386), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).384), kind: Path(LangItem(FormatArgument, src/main.rs:159:41: 159:43 (#74), None)), span: src/main.rs:159:41: 159:43 (#74) }, PathSegment { ident: new_display#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).385), res: Err, args: None, infer_args: true })), span: src/main.rs:159:41: 159:43 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).383), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).376), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).377), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).378), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).379), kind: Path(Resolved(None, Path { span: src/main.rs:159:46: 159:50 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).380), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:159:46: 159:50 (#0) }, tcx#0), span: src/main.rs:159:46: 159:54 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).381), kind: Path(Resolved(None, Path { span: src/main.rs:159:68: 159:74 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).382), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:159:68: 159:74 (#0) }], src/main.rs:159:55: 159:75 (#0)), span: src/main.rs:159:46: 159:75 (#0) }), span: src/main.rs:159:46: 159:75 (#74) }]), span: src/main.rs:159:41: 159:43 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#73), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).368), res: Err, args: None, infer_args: true }, PathSegment { ident: io#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).369), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#73, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).370), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).392), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).390), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, PathSegment { ident: new_v1#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).391), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).375), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).374), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).372), kind: Lit(Spanned { node: Str("  Method: ", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).373), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }]), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).389), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).388), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).387), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).386), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).384), kind: Path(LangItem(FormatArgument, src/main.rs:159:41: 159:43 (#74), None)), span: src/main.rs:159:41: 159:43 (#74) }, PathSegment { ident: new_display#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).385), res: Err, args: None, infer_args: true })), span: src/main.rs:159:41: 159:43 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).383), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).376), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).377), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).378), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).379), kind: Path(Resolved(None, Path { span: src/main.rs:159:46: 159:50 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).380), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:159:46: 159:50 (#0) }, tcx#0), span: src/main.rs:159:46: 159:54 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).381), kind: Path(Resolved(None, Path { span: src/main.rs:159:68: 159:74 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).382), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:159:68: 159:74 (#0) }], src/main.rs:159:55: 159:75 (#0)), span: src/main.rs:159:46: 159:75 (#0) }), span: src/main.rs:159:46: 159:75 (#74) }]), span: src/main.rs:159:41: 159:43 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).390), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }, PathSegment { ident: new_v1#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).391), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).374), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).372), kind: Lit(Spanned { node: Str("  Method: ", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).373), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }]), span: src/main.rs:159:30: 159:44 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).372), kind: Lit(Spanned { node: Str("  Method: ", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).373), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:159:30: 159:44 (#0) }), span: src/main.rs:159:30: 159:44 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Lit(Spanned { node: Str("  Method: ", Cooked), span: src/main.rs:159:30: 159:44 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:159:30: 159:44 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).388), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).387), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).386), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).384), kind: Path(LangItem(FormatArgument, src/main.rs:159:41: 159:43 (#74), None)), span: src/main.rs:159:41: 159:43 (#74) }, PathSegment { ident: new_display#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).385), res: Err, args: None, infer_args: true })), span: src/main.rs:159:41: 159:43 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).383), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).376), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).377), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).378), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).379), kind: Path(Resolved(None, Path { span: src/main.rs:159:46: 159:50 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).380), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:159:46: 159:50 (#0) }, tcx#0), span: src/main.rs:159:46: 159:54 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).381), kind: Path(Resolved(None, Path { span: src/main.rs:159:68: 159:74 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).382), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:159:68: 159:74 (#0) }], src/main.rs:159:55: 159:75 (#0)), span: src/main.rs:159:46: 159:75 (#0) }), span: src/main.rs:159:46: 159:75 (#74) }]), span: src/main.rs:159:41: 159:43 (#74) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#74) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).387), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).386), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).384), kind: Path(LangItem(FormatArgument, src/main.rs:159:41: 159:43 (#74), None)), span: src/main.rs:159:41: 159:43 (#74) }, PathSegment { ident: new_display#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).385), res: Err, args: None, infer_args: true })), span: src/main.rs:159:41: 159:43 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).383), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).376), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).377), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).378), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).379), kind: Path(Resolved(None, Path { span: src/main.rs:159:46: 159:50 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).380), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:159:46: 159:50 (#0) }, tcx#0), span: src/main.rs:159:46: 159:54 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).381), kind: Path(Resolved(None, Path { span: src/main.rs:159:68: 159:74 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).382), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:159:68: 159:74 (#0) }], src/main.rs:159:55: 159:75 (#0)), span: src/main.rs:159:46: 159:75 (#0) }), span: src/main.rs:159:46: 159:75 (#74) }]), span: src/main.rs:159:41: 159:43 (#74) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).386), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).384), kind: Path(LangItem(FormatArgument, src/main.rs:159:41: 159:43 (#74), None)), span: src/main.rs:159:41: 159:43 (#74) }, PathSegment { ident: new_display#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).385), res: Err, args: None, infer_args: true })), span: src/main.rs:159:41: 159:43 (#74) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).383), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).376), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).377), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).378), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).379), kind: Path(Resolved(None, Path { span: src/main.rs:159:46: 159:50 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).380), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:159:46: 159:50 (#0) }, tcx#0), span: src/main.rs:159:46: 159:54 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).381), kind: Path(Resolved(None, Path { span: src/main.rs:159:68: 159:74 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).382), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:159:68: 159:74 (#0) }], src/main.rs:159:55: 159:75 (#0)), span: src/main.rs:159:46: 159:75 (#0) }), span: src/main.rs:159:46: 159:75 (#74) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_display
  Function type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).384), kind: Path(LangItem(FormatArgument, src/main.rs:159:41: 159:43 (#74), None)), span: src/main.rs:159:41: 159:43 (#74) }, PathSegment { ident: new_display#74, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).385), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9345 ~ core[ae61]::fmt::rt::{impl#1}::new_display), [ReErased, Adt(std::string::String, [])])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).376), kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).377), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).378), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).379), kind: Path(Resolved(None, Path { span: src/main.rs:159:46: 159:50 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).380), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:159:46: 159:50 (#0) }, tcx#0), span: src/main.rs:159:46: 159:54 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).381), kind: Path(Resolved(None, Path { span: src/main.rs:159:68: 159:74 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).382), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:159:68: 159:74 (#0) }], src/main.rs:159:55: 159:75 (#0)), span: src/main.rs:159:46: 159:75 (#0) }))
  Expression type: &ReErased Adt(std::string::String, [])
Expression (kind: MethodCall(PathSegment { ident: def_path_str#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).377), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).378), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).379), kind: Path(Resolved(None, Path { span: src/main.rs:159:46: 159:50 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).380), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:159:46: 159:50 (#0) }, tcx#0), span: src/main.rs:159:46: 159:54 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).381), kind: Path(Resolved(None, Path { span: src/main.rs:159:68: 159:74 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).382), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:159:68: 159:74 (#0) }], src/main.rs:159:55: 159:75 (#0)))
  Method call: def_path_str with 1 arguments
  Receiver type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
  Method: rustc_middle::ty::print::pretty::<impl rustc_middle::ty::TyCtxt<'t>>::def_path_str
  Method type: FnDef(DefId(155:4851 ~ rustc_middle[ca3f]::ty::print::pretty::{impl#4}::def_path_str), [ReEarlyBound(DefId(155:4850 ~ rustc_middle[ca3f]::ty::print::pretty::{impl#4}::'t), 0, 't), impl IntoQueryParam<DefId>/#1])
  Expression type: Adt(std::string::String, [])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).379), kind: Path(Resolved(None, Path { span: src/main.rs:159:46: 159:50 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).380), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:159:46: 159:50 (#0) }, tcx#0))
  Expression type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:159:46: 159:50 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).380), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })))
  Expression type: &ReErased mut Adt(PrintVisitor, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:159:68: 159:74 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).382), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::def_id::DefId, [])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).426), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).397), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).398), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#75), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).399), res: Err, args: None, infer_args: true }, PathSegment { ident: io#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).400), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).401), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#75) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).402), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).425), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).423), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, PathSegment { ident: new_v1#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).424), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).406), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).405), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).403), kind: Lit(Spanned { node: Str("  Method type: ", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).404), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }]), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).422), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).421), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).420), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).419), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).417), kind: Path(LangItem(FormatArgument, src/main.rs:161:41: 161:45 (#76), None)), span: src/main.rs:161:41: 161:45 (#76) }, PathSegment { ident: new_debug#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).418), res: Err, args: None, infer_args: true })), span: src/main.rs:161:41: 161:45 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).416), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).407), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).408), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).409), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).410), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).411), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).412), kind: Path(Resolved(None, Path { span: src/main.rs:162:25: 162:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).413), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:162:25: 162:29 (#0) }, tcx#0), span: src/main.rs:162:25: 162:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).414), kind: Path(Resolved(None, Path { span: src/main.rs:162:42: 162:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).415), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:162:42: 162:48 (#0) }], src/main.rs:162:34: 162:49 (#0)), span: src/main.rs:162:25: 162:49 (#0) }, [], src/main.rs:162:50: 162:72 (#0)), span: src/main.rs:162:25: 162:72 (#0) }), span: src/main.rs:162:25: 162:72 (#76) }]), span: src/main.rs:161:41: 161:45 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#75) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#75) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).427), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#75), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).398), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#75), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).399), res: Err, args: None, infer_args: true }, PathSegment { ident: io#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).400), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).401), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#75) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).402), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).425), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).423), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, PathSegment { ident: new_v1#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).424), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).406), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).405), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).403), kind: Lit(Spanned { node: Str("  Method type: ", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).404), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }]), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).422), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).421), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).420), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).419), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).417), kind: Path(LangItem(FormatArgument, src/main.rs:161:41: 161:45 (#76), None)), span: src/main.rs:161:41: 161:45 (#76) }, PathSegment { ident: new_debug#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).418), res: Err, args: None, infer_args: true })), span: src/main.rs:161:41: 161:45 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).416), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).407), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).408), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).409), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).410), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).411), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).412), kind: Path(Resolved(None, Path { span: src/main.rs:162:25: 162:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).413), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:162:25: 162:29 (#0) }, tcx#0), span: src/main.rs:162:25: 162:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).414), kind: Path(Resolved(None, Path { span: src/main.rs:162:42: 162:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).415), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:162:42: 162:48 (#0) }], src/main.rs:162:34: 162:49 (#0)), span: src/main.rs:162:25: 162:49 (#0) }, [], src/main.rs:162:50: 162:72 (#0)), span: src/main.rs:162:25: 162:72 (#0) }), span: src/main.rs:162:25: 162:72 (#76) }]), span: src/main.rs:161:41: 161:45 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#75), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).399), res: Err, args: None, infer_args: true }, PathSegment { ident: io#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).400), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#75, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).401), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).425), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).423), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, PathSegment { ident: new_v1#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).424), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).406), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).405), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).403), kind: Lit(Spanned { node: Str("  Method type: ", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).404), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }]), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).422), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).421), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).420), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).419), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).417), kind: Path(LangItem(FormatArgument, src/main.rs:161:41: 161:45 (#76), None)), span: src/main.rs:161:41: 161:45 (#76) }, PathSegment { ident: new_debug#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).418), res: Err, args: None, infer_args: true })), span: src/main.rs:161:41: 161:45 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).416), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).407), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).408), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).409), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).410), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).411), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).412), kind: Path(Resolved(None, Path { span: src/main.rs:162:25: 162:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).413), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:162:25: 162:29 (#0) }, tcx#0), span: src/main.rs:162:25: 162:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).414), kind: Path(Resolved(None, Path { span: src/main.rs:162:42: 162:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).415), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:162:42: 162:48 (#0) }], src/main.rs:162:34: 162:49 (#0)), span: src/main.rs:162:25: 162:49 (#0) }, [], src/main.rs:162:50: 162:72 (#0)), span: src/main.rs:162:25: 162:72 (#0) }), span: src/main.rs:162:25: 162:72 (#76) }]), span: src/main.rs:161:41: 161:45 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).423), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }, PathSegment { ident: new_v1#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).424), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).405), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).403), kind: Lit(Spanned { node: Str("  Method type: ", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).404), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }]), span: src/main.rs:161:25: 161:46 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).403), kind: Lit(Spanned { node: Str("  Method type: ", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).404), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:161:25: 161:46 (#0) }), span: src/main.rs:161:25: 161:46 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Lit(Spanned { node: Str("  Method type: ", Cooked), span: src/main.rs:161:25: 161:46 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:161:25: 161:46 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).421), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).420), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).419), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).417), kind: Path(LangItem(FormatArgument, src/main.rs:161:41: 161:45 (#76), None)), span: src/main.rs:161:41: 161:45 (#76) }, PathSegment { ident: new_debug#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).418), res: Err, args: None, infer_args: true })), span: src/main.rs:161:41: 161:45 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).416), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).407), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).408), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).409), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).410), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).411), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).412), kind: Path(Resolved(None, Path { span: src/main.rs:162:25: 162:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).413), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:162:25: 162:29 (#0) }, tcx#0), span: src/main.rs:162:25: 162:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).414), kind: Path(Resolved(None, Path { span: src/main.rs:162:42: 162:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).415), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:162:42: 162:48 (#0) }], src/main.rs:162:34: 162:49 (#0)), span: src/main.rs:162:25: 162:49 (#0) }, [], src/main.rs:162:50: 162:72 (#0)), span: src/main.rs:162:25: 162:72 (#0) }), span: src/main.rs:162:25: 162:72 (#76) }]), span: src/main.rs:161:41: 161:45 (#76) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#76) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).420), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).419), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).417), kind: Path(LangItem(FormatArgument, src/main.rs:161:41: 161:45 (#76), None)), span: src/main.rs:161:41: 161:45 (#76) }, PathSegment { ident: new_debug#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).418), res: Err, args: None, infer_args: true })), span: src/main.rs:161:41: 161:45 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).416), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).407), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).408), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).409), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).410), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).411), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).412), kind: Path(Resolved(None, Path { span: src/main.rs:162:25: 162:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).413), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:162:25: 162:29 (#0) }, tcx#0), span: src/main.rs:162:25: 162:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).414), kind: Path(Resolved(None, Path { span: src/main.rs:162:42: 162:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).415), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:162:42: 162:48 (#0) }], src/main.rs:162:34: 162:49 (#0)), span: src/main.rs:162:25: 162:49 (#0) }, [], src/main.rs:162:50: 162:72 (#0)), span: src/main.rs:162:25: 162:72 (#0) }), span: src/main.rs:162:25: 162:72 (#76) }]), span: src/main.rs:161:41: 161:45 (#76) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).419), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).417), kind: Path(LangItem(FormatArgument, src/main.rs:161:41: 161:45 (#76), None)), span: src/main.rs:161:41: 161:45 (#76) }, PathSegment { ident: new_debug#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).418), res: Err, args: None, infer_args: true })), span: src/main.rs:161:41: 161:45 (#76) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).416), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).407), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).408), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).409), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).410), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).411), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).412), kind: Path(Resolved(None, Path { span: src/main.rs:162:25: 162:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).413), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:162:25: 162:29 (#0) }, tcx#0), span: src/main.rs:162:25: 162:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).414), kind: Path(Resolved(None, Path { span: src/main.rs:162:42: 162:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).415), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:162:42: 162:48 (#0) }], src/main.rs:162:34: 162:49 (#0)), span: src/main.rs:162:25: 162:49 (#0) }, [], src/main.rs:162:50: 162:72 (#0)), span: src/main.rs:162:25: 162:72 (#0) }), span: src/main.rs:162:25: 162:72 (#76) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_debug
  Function type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).417), kind: Path(LangItem(FormatArgument, src/main.rs:161:41: 161:45 (#76), None)), span: src/main.rs:161:41: 161:45 (#76) }, PathSegment { ident: new_debug#76, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).418), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReErased, Adt(rustc_middle::ty::Ty, [ReErased])])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).407), kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).408), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).409), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).410), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).411), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).412), kind: Path(Resolved(None, Path { span: src/main.rs:162:25: 162:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).413), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:162:25: 162:29 (#0) }, tcx#0), span: src/main.rs:162:25: 162:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).414), kind: Path(Resolved(None, Path { span: src/main.rs:162:42: 162:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).415), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:162:42: 162:48 (#0) }], src/main.rs:162:34: 162:49 (#0)), span: src/main.rs:162:25: 162:49 (#0) }, [], src/main.rs:162:50: 162:72 (#0)), span: src/main.rs:162:25: 162:72 (#0) }))
  Expression type: &ReErased Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: MethodCall(PathSegment { ident: instantiate_identity#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).408), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).409), kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).410), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).411), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).412), kind: Path(Resolved(None, Path { span: src/main.rs:162:25: 162:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).413), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:162:25: 162:29 (#0) }, tcx#0), span: src/main.rs:162:25: 162:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).414), kind: Path(Resolved(None, Path { span: src/main.rs:162:42: 162:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).415), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:162:42: 162:48 (#0) }], src/main.rs:162:34: 162:49 (#0)), span: src/main.rs:162:25: 162:49 (#0) }, [], src/main.rs:162:50: 162:72 (#0)))
  Method call: instantiate_identity with 0 arguments
  Receiver type: Adt(rustc_middle::ty::EarlyBinder, [Adt(rustc_middle::ty::Ty, [ReErased])])
  Method: rustc_middle::ty::EarlyBinder::<T>::instantiate_identity
  Method type: FnDef(DefId(155:7186 ~ rustc_middle[ca3f]::ty::generic_args::{impl#33}::instantiate_identity), [ReEarlyBound(DefId(155:7183 ~ rustc_middle[ca3f]::ty::generic_args::{impl#33}::'tcx), 0, 'tcx), T/#1])
  Expression type: Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: MethodCall(PathSegment { ident: type_of#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).410), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).411), kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).412), kind: Path(Resolved(None, Path { span: src/main.rs:162:25: 162:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).413), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:162:25: 162:29 (#0) }, tcx#0), span: src/main.rs:162:25: 162:33 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).414), kind: Path(Resolved(None, Path { span: src/main.rs:162:42: 162:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).415), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })), span: src/main.rs:162:42: 162:48 (#0) }], src/main.rs:162:34: 162:49 (#0)))
  Method call: type_of with 1 arguments
  Receiver type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
  Method: rustc_middle::query::<impl rustc_middle::ty::TyCtxt<'tcx>>::type_of
  Method type: FnDef(DefId(155:37468 ~ rustc_middle[ca3f]::query::{impl#3}::type_of), [ReEarlyBound(DefId(155:37452 ~ rustc_middle[ca3f]::query::{impl#3}::'tcx), 0, 'tcx), impl IntoQueryParam<DefId>/#1])
  Expression type: Adt(rustc_middle::ty::EarlyBinder, [Adt(rustc_middle::ty::Ty, [ReErased])])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).412), kind: Path(Resolved(None, Path { span: src/main.rs:162:25: 162:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).413), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:162:25: 162:29 (#0) }, tcx#0))
  Expression type: Adt(rustc_middle::ty::TyCtxt, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:162:25: 162:29 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).413), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })))
  Expression type: &ReErased mut Adt(PrintVisitor, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:162:42: 162:48 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), segments: [PathSegment { ident: def_id#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).415), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).356)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::def_id::DefId, [])
Expression (kind: Block(Block { stmts: [], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).435), rules: DefaultBlock, span: src/main.rs:166:18: 166:20 (#0), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Match(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).438), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).439), kind: Path(Resolved(None, Path { span: src/main.rs:170:15: 170:39 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).440), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).441), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).442), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })), span: src/main.rs:170:15: 170:39 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).443), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).444), kind: Path(Resolved(None, Path { span: src/main.rs:170:40: 170:68 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).445), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).446), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).447), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:170:40: 170:68 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).448), kind: Closure(Closure { def_id: DefId(0:36 ~ main[cc0f]::{impl#1}::visit_expr::{closure#2}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:170:72: 170:72 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).449) }, fn_decl_span: src/main.rs:170:69: 170:71 (#0), fn_arg_span: Some(src/main.rs:170:69: 170:71 (#0)), movability: None }), span: src/main.rs:170:69: 170:92 (#0) }]), span: src/main.rs:170:40: 170:93 (#0) }]), span: src/main.rs:170:15: 170:94 (#0) }, [Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).458), span: src/main.rs:171:13: 171:72 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).457), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:171:13: 171:15 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), segments: [PathSegment { ident: Ok#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).455), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456), expr_ty#0, None), span: src/main.rs:171:16: 171:23 (#0), default_binding_modes: true }], None), span: src/main.rs:171:13: 171:24 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).459), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).482), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).460), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).461), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#77), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#77, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).462), res: Err, args: None, infer_args: true }, PathSegment { ident: io#77, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).463), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#77, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).464), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#77) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).465), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).481), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).479), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }, PathSegment { ident: new_v1#78, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).480), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).469), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).468), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).466), kind: Lit(Spanned { node: Str("  Expression type: ", Cooked), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).467), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }]), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).478), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).477), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).476), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).475), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).473), kind: Path(LangItem(FormatArgument, src/main.rs:171:57: 171:61 (#78), None)), span: src/main.rs:171:57: 171:61 (#78) }, PathSegment { ident: new_debug#78, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).474), res: Err, args: None, infer_args: true })), span: src/main.rs:171:57: 171:61 (#78) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).472), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).470), kind: Path(Resolved(None, Path { span: src/main.rs:171:64: 171:71 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), segments: [PathSegment { ident: expr_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).471), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), args: None, infer_args: true }] })), span: src/main.rs:171:64: 171:71 (#0) }), span: src/main.rs:171:64: 171:71 (#78) }]), span: src/main.rs:171:57: 171:61 (#78) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#77) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#77) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).483), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#77), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#77) } }, Arm { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).487), span: src/main.rs:172:13: 172:67 (#0), pat: Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).486), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:172:13: 172:16 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), segments: [PathSegment { ident: Err#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).484), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).485), kind: Wild, span: src/main.rs:172:17: 172:18 (#0), default_binding_modes: true }], None), span: src/main.rs:172:13: 172:19 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).488), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).501), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).489), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).490), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#79), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#79, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).491), res: Err, args: None, infer_args: true }, PathSegment { ident: io#79, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).492), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#79, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).493), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#79) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).494), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).500), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).498), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80) }, PathSegment { ident: new_const#80, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).499), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).497), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).496), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).495), kind: Lit(Spanned { node: Str("  Expression type: <unavailable>\n", Cooked), span: src/main.rs:172:32: 172:66 (#0) }), span: src/main.rs:172:32: 172:66 (#0) }]), span: src/main.rs:172:32: 172:66 (#0) }), span: src/main.rs:172:32: 172:66 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#79) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#79) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).502), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#79), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#79) } }], Normal))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).439), kind: Path(Resolved(None, Path { span: src/main.rs:170:15: 170:39 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).440), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).441), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).442), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })), span: src/main.rs:170:15: 170:39 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).443), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).444), kind: Path(Resolved(None, Path { span: src/main.rs:170:40: 170:68 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).445), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).446), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).447), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:170:40: 170:68 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).448), kind: Closure(Closure { def_id: DefId(0:36 ~ main[cc0f]::{impl#1}::visit_expr::{closure#2}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:170:72: 170:72 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).449) }, fn_decl_span: src/main.rs:170:69: 170:71 (#0), fn_arg_span: Some(src/main.rs:170:69: 170:71 (#0)), movability: None }), span: src/main.rs:170:69: 170:92 (#0) }]), span: src/main.rs:170:40: 170:93 (#0) }]))
  Function call with 1 arguments
  Expression type: Adt(std::result::Result, [Adt(rustc_middle::ty::Ty, [ReErased]), Adt(std::boxed::Box, [dyn [Binder(Trait(std::any::Any), []), Binder(AutoTrait(DefId(2:2765 ~ core[ae61]::marker::Send)), [])] + ReErased, Adt(std::alloc::Global, [])])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:170:15: 170:39 (#0), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).440), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).441), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: catch_unwind#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).442), res: Def(Fn, DefId(1:4782 ~ std[3ef1]::panic::catch_unwind)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:4782 ~ std[3ef1]::panic::catch_unwind), [Adt(std::panic::AssertUnwindSafe, [Closure(DefId(0:36 ~ main[cc0f]::{impl#1}::visit_expr::{closure#2}), [ReErased, i8, Binder(extern "RustCall" fn(()) -> Adt(rustc_middle::ty::Ty, [ReErased]), []), (&ReErased &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])&ReErased &ReErased Adt(rustc_hir::Expr, [ReErased])))])]), Adt(rustc_middle::ty::Ty, [ReErased])])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).444), kind: Path(Resolved(None, Path { span: src/main.rs:170:40: 170:68 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).445), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).446), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).447), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:170:40: 170:68 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).448), kind: Closure(Closure { def_id: DefId(0:36 ~ main[cc0f]::{impl#1}::visit_expr::{closure#2}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:170:72: 170:72 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).449) }, fn_decl_span: src/main.rs:170:69: 170:71 (#0), fn_arg_span: Some(src/main.rs:170:69: 170:71 (#0)), movability: None }), span: src/main.rs:170:69: 170:92 (#0) }]))
  Function call with 1 arguments
  Expression type: Adt(std::panic::AssertUnwindSafe, [Closure(DefId(0:36 ~ main[cc0f]::{impl#1}::visit_expr::{closure#2}), [ReErased, i8, Binder(extern "RustCall" fn(()) -> Adt(rustc_middle::ty::Ty, [ReErased]), []), (&ReErased &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])&ReErased &ReErased Adt(rustc_hir::Expr, [ReErased])))])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:170:40: 170:68 (#0), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).445), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: panic#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).446), res: Def(Mod, DefId(1:4744 ~ std[3ef1]::panic)), args: None, infer_args: true }, PathSegment { ident: AssertUnwindSafe#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).447), res: Def(Ctor(Struct, Fn), DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0})), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(2:8532 ~ core[ae61]::panic::unwind_safe::AssertUnwindSafe::{constructor#0}), [Closure(DefId(0:36 ~ main[cc0f]::{impl#1}::visit_expr::{closure#2}), [ReErased, i8, Binder(extern "RustCall" fn(()) -> Adt(rustc_middle::ty::Ty, [ReErased]), []), (&ReErased &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])&ReErased &ReErased Adt(rustc_hir::Expr, [ReErased])))])])
Expression (kind: Closure(Closure { def_id: DefId(0:36 ~ main[cc0f]::{impl#1}::visit_expr::{closure#2}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [], output: DefaultReturn(src/main.rs:170:72: 170:72 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).449) }, fn_decl_span: src/main.rs:170:69: 170:71 (#0), fn_arg_span: Some(src/main.rs:170:69: 170:71 (#0)), movability: None }))
  Expression type: Closure(DefId(0:36 ~ main[cc0f]::{impl#1}::visit_expr::{closure#2}), [ReErased, i8, Binder(extern "RustCall" fn(()) -> Adt(rustc_middle::ty::Ty, [ReErased]), []), (&ReErased &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])&ReErased &ReErased Adt(rustc_hir::Expr, [ReErased])))])
Expression (kind: MethodCall(PathSegment { ident: expr_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).450), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).451), kind: Path(Resolved(None, Path { span: src/main.rs:170:72: 170:78 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).452), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })), span: src/main.rs:170:72: 170:78 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).453), kind: Path(Resolved(None, Path { span: src/main.rs:170:87: 170:91 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).454), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:170:87: 170:91 (#0) }], src/main.rs:170:79: 170:92 (#0)))
  Method call: expr_ty with 1 arguments
  Receiver type: &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])
  Method: rustc_middle::ty::TypeckResults::<'tcx>::expr_ty
  Method type: FnDef(DefId(155:8583 ~ rustc_middle[ca3f]::ty::typeck_results::{impl#0}::expr_ty), [ReEarlyBound(DefId(155:8554 ~ rustc_middle[ca3f]::ty::typeck_results::{impl#0}::'tcx), 0, 'tcx)])
  Expression type: Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:170:72: 170:78 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), segments: [PathSegment { ident: typeck#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).452), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).114)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_middle::ty::TypeckResults, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:170:87: 170:91 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).454), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_hir::Expr, [ReErased])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).482), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).460), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).461), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#77), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#77, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).462), res: Err, args: None, infer_args: true }, PathSegment { ident: io#77, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).463), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#77, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).464), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#77) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).465), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).481), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).479), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }, PathSegment { ident: new_v1#78, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).480), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).469), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).468), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).466), kind: Lit(Spanned { node: Str("  Expression type: ", Cooked), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).467), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }]), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).478), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).477), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).476), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).475), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).473), kind: Path(LangItem(FormatArgument, src/main.rs:171:57: 171:61 (#78), None)), span: src/main.rs:171:57: 171:61 (#78) }, PathSegment { ident: new_debug#78, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).474), res: Err, args: None, infer_args: true })), span: src/main.rs:171:57: 171:61 (#78) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).472), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).470), kind: Path(Resolved(None, Path { span: src/main.rs:171:64: 171:71 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), segments: [PathSegment { ident: expr_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).471), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), args: None, infer_args: true }] })), span: src/main.rs:171:64: 171:71 (#0) }), span: src/main.rs:171:64: 171:71 (#78) }]), span: src/main.rs:171:57: 171:61 (#78) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#77) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#77) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).483), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#77), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).461), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#77), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#77, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).462), res: Err, args: None, infer_args: true }, PathSegment { ident: io#77, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).463), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#77, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).464), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#77) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).465), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).481), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).479), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }, PathSegment { ident: new_v1#78, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).480), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).469), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).468), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).466), kind: Lit(Spanned { node: Str("  Expression type: ", Cooked), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).467), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }]), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).478), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).477), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).476), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).475), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).473), kind: Path(LangItem(FormatArgument, src/main.rs:171:57: 171:61 (#78), None)), span: src/main.rs:171:57: 171:61 (#78) }, PathSegment { ident: new_debug#78, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).474), res: Err, args: None, infer_args: true })), span: src/main.rs:171:57: 171:61 (#78) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).472), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).470), kind: Path(Resolved(None, Path { span: src/main.rs:171:64: 171:71 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), segments: [PathSegment { ident: expr_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).471), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), args: None, infer_args: true }] })), span: src/main.rs:171:64: 171:71 (#0) }), span: src/main.rs:171:64: 171:71 (#78) }]), span: src/main.rs:171:57: 171:61 (#78) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#77), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#77, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).462), res: Err, args: None, infer_args: true }, PathSegment { ident: io#77, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).463), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#77, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).464), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).481), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).479), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }, PathSegment { ident: new_v1#78, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).480), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).469), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).468), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).466), kind: Lit(Spanned { node: Str("  Expression type: ", Cooked), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).467), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }]), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).478), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).477), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).476), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).475), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).473), kind: Path(LangItem(FormatArgument, src/main.rs:171:57: 171:61 (#78), None)), span: src/main.rs:171:57: 171:61 (#78) }, PathSegment { ident: new_debug#78, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).474), res: Err, args: None, infer_args: true })), span: src/main.rs:171:57: 171:61 (#78) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).472), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).470), kind: Path(Resolved(None, Path { span: src/main.rs:171:64: 171:71 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), segments: [PathSegment { ident: expr_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).471), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), args: None, infer_args: true }] })), span: src/main.rs:171:64: 171:71 (#0) }), span: src/main.rs:171:64: 171:71 (#78) }]), span: src/main.rs:171:57: 171:61 (#78) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).479), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }, PathSegment { ident: new_v1#78, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).480), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).468), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).466), kind: Lit(Spanned { node: Str("  Expression type: ", Cooked), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).467), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }]), span: src/main.rs:171:37: 171:62 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).466), kind: Lit(Spanned { node: Str("  Expression type: ", Cooked), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).467), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:171:37: 171:62 (#0) }), span: src/main.rs:171:37: 171:62 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Lit(Spanned { node: Str("  Expression type: ", Cooked), span: src/main.rs:171:37: 171:62 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:171:37: 171:62 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).477), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).476), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).475), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).473), kind: Path(LangItem(FormatArgument, src/main.rs:171:57: 171:61 (#78), None)), span: src/main.rs:171:57: 171:61 (#78) }, PathSegment { ident: new_debug#78, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).474), res: Err, args: None, infer_args: true })), span: src/main.rs:171:57: 171:61 (#78) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).472), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).470), kind: Path(Resolved(None, Path { span: src/main.rs:171:64: 171:71 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), segments: [PathSegment { ident: expr_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).471), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), args: None, infer_args: true }] })), span: src/main.rs:171:64: 171:71 (#0) }), span: src/main.rs:171:64: 171:71 (#78) }]), span: src/main.rs:171:57: 171:61 (#78) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#78) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).476), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).475), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).473), kind: Path(LangItem(FormatArgument, src/main.rs:171:57: 171:61 (#78), None)), span: src/main.rs:171:57: 171:61 (#78) }, PathSegment { ident: new_debug#78, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).474), res: Err, args: None, infer_args: true })), span: src/main.rs:171:57: 171:61 (#78) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).472), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).470), kind: Path(Resolved(None, Path { span: src/main.rs:171:64: 171:71 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), segments: [PathSegment { ident: expr_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).471), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), args: None, infer_args: true }] })), span: src/main.rs:171:64: 171:71 (#0) }), span: src/main.rs:171:64: 171:71 (#78) }]), span: src/main.rs:171:57: 171:61 (#78) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).475), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).473), kind: Path(LangItem(FormatArgument, src/main.rs:171:57: 171:61 (#78), None)), span: src/main.rs:171:57: 171:61 (#78) }, PathSegment { ident: new_debug#78, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).474), res: Err, args: None, infer_args: true })), span: src/main.rs:171:57: 171:61 (#78) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).472), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).470), kind: Path(Resolved(None, Path { span: src/main.rs:171:64: 171:71 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), segments: [PathSegment { ident: expr_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).471), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), args: None, infer_args: true }] })), span: src/main.rs:171:64: 171:71 (#0) }), span: src/main.rs:171:64: 171:71 (#78) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_debug
  Function type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).473), kind: Path(LangItem(FormatArgument, src/main.rs:171:57: 171:61 (#78), None)), span: src/main.rs:171:57: 171:61 (#78) }, PathSegment { ident: new_debug#78, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).474), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReErased, Adt(rustc_middle::ty::Ty, [ReErased])])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).470), kind: Path(Resolved(None, Path { span: src/main.rs:171:64: 171:71 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), segments: [PathSegment { ident: expr_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).471), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), args: None, infer_args: true }] })), span: src/main.rs:171:64: 171:71 (#0) }))
  Expression type: &ReErased Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:171:64: 171:71 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), segments: [PathSegment { ident: expr_ty#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).471), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).456)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_middle::ty::Ty, [ReErased])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).501), kind: Semi(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).489), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).490), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#79), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#79, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).491), res: Err, args: None, infer_args: true }, PathSegment { ident: io#79, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).492), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#79, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).493), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#79) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).494), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).500), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).498), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80) }, PathSegment { ident: new_const#80, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).499), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).497), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).496), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).495), kind: Lit(Spanned { node: Str("  Expression type: <unavailable>\n", Cooked), span: src/main.rs:172:32: 172:66 (#0) }), span: src/main.rs:172:32: 172:66 (#0) }]), span: src/main.rs:172:32: 172:66 (#0) }), span: src/main.rs:172:32: 172:66 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#79) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#79) }], expr: None, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).502), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#79), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).490), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#79), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#79, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).491), res: Err, args: None, infer_args: true }, PathSegment { ident: io#79, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).492), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#79, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).493), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#79) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).494), kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).500), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).498), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80) }, PathSegment { ident: new_const#80, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).499), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).497), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).496), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).495), kind: Lit(Spanned { node: Str("  Expression type: <unavailable>\n", Cooked), span: src/main.rs:172:32: 172:66 (#0) }), span: src/main.rs:172:32: 172:66 (#0) }]), span: src/main.rs:172:32: 172:66 (#0) }), span: src/main.rs:172:32: 172:66 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#79), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#79, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).491), res: Err, args: None, infer_args: true }, PathSegment { ident: io#79, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).492), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#79, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).493), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).500), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).498), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80) }, PathSegment { ident: new_const#80, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).499), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).497), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).496), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).495), kind: Lit(Spanned { node: Str("  Expression type: <unavailable>\n", Cooked), span: src/main.rs:172:32: 172:66 (#0) }), span: src/main.rs:172:32: 172:66 (#0) }]), span: src/main.rs:172:32: 172:66 (#0) }), span: src/main.rs:172:32: 172:66 (#0) }]))
  Function call with 1 arguments
  Called function: std::fmt::Arguments::<'a>::new_const
  Function type: FnDef(DefId(2:9415 ~ core[ae61]::fmt::{impl#2}::new_const), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).498), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#80) }, PathSegment { ident: new_const#80, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).499), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9415 ~ core[ae61]::fmt::{impl#2}::new_const), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).496), kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).495), kind: Lit(Spanned { node: Str("  Expression type: <unavailable>\n", Cooked), span: src/main.rs:172:32: 172:66 (#0) }), span: src/main.rs:172:32: 172:66 (#0) }]), span: src/main.rs:172:32: 172:66 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).495), kind: Lit(Spanned { node: Str("  Expression type: <unavailable>\n", Cooked), span: src/main.rs:172:32: 172:66 (#0) }), span: src/main.rs:172:32: 172:66 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Lit(Spanned { node: Str("  Expression type: <unavailable>\n", Cooked), span: src/main.rs:172:32: 172:66 (#0) }))
  Expression type: &ReErased str
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).505), kind: Path(Resolved(None, Path { span: src/main.rs:176:9: 176:30 (#0), res: Def(Fn, DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr)), segments: [PathSegment { ident: intravisit#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).506), res: Def(Mod, DefId(120:726 ~ rustc_hir[6705]::intravisit)), args: None, infer_args: true }, PathSegment { ident: walk_expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).507), res: Def(Fn, DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr)), args: None, infer_args: true }] })), span: src/main.rs:176:9: 176:30 (#0) }, [Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).508), kind: Path(Resolved(None, Path { span: src/main.rs:176:31: 176:35 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).509), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })), span: src/main.rs:176:31: 176:35 (#0) }, Expr { hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).510), kind: Path(Resolved(None, Path { span: src/main.rs:176:37: 176:41 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).511), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })), span: src/main.rs:176:37: 176:41 (#0) }]))
  Function call with 2 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:176:9: 176:30 (#0), res: Def(Fn, DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr)), segments: [PathSegment { ident: intravisit#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).506), res: Def(Mod, DefId(120:726 ~ rustc_hir[6705]::intravisit)), args: None, infer_args: true }, PathSegment { ident: walk_expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).507), res: Def(Fn, DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(120:888 ~ rustc_hir[6705]::intravisit::walk_expr), [ReErased, Adt(PrintVisitor, [ReErased])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:176:31: 176:35 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), segments: [PathSegment { ident: self#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).509), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).2)), args: None, infer_args: true }] })))
  Expression type: &ReErased mut Adt(PrintVisitor, [ReErased])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:176:37: 176:41 (#0), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), segments: [PathSegment { ident: expr#0, hir_id: HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).511), res: Local(HirId(DefId(0:33 ~ main[cc0f]::{impl#1}::visit_expr).4)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(rustc_hir::Expr, [ReErased])
Item: main (kind: "function")
  DefId: DefId(0:37 ~ main[cc0f]::main)
  Path: main
  Type: FnDef(DefId(0:37 ~ main[cc0f]::main), [])
  Type-checked information:
    Return type: <unavailable for this item>
  Location: Real(LocalPath("src/main.rs")):180:0-218:1

Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).1), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).13), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:37 ~ main[cc0f]::main).13), args#0, None), span: src/main.rs:182:9: 182:13 (#0), default_binding_modes: true }, ty: Some(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).2), kind: Path(Resolved(None, Path { span: src/main.rs:182:15: 182:26 (#0), res: Def(Struct, DefId(5:6886 ~ alloc[ec52]::vec::Vec)), segments: [PathSegment { ident: Vec#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).5), res: Def(Struct, DefId(5:6886 ~ alloc[ec52]::vec::Vec)), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).3), kind: Path(Resolved(None, Path { span: src/main.rs:182:19: 182:25 (#0), res: Def(Struct, DefId(5:7449 ~ alloc[ec52]::string::String)), segments: [PathSegment { ident: String#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).4), res: Def(Struct, DefId(5:7449 ~ alloc[ec52]::string::String)), args: None, infer_args: false }] })), span: src/main.rs:182:19: 182:25 (#0) })], bindings: [], parenthesized: No, span_ext: src/main.rs:182:18: 182:26 (#0) }), infer_args: false }] })), span: src/main.rs:182:15: 182:26 (#0) }), init: Some(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).6), kind: MethodCall(PathSegment { ident: collect#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).7), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).8), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).9), kind: Path(Resolved(None, Path { span: src/main.rs:182:29: 182:38 (#0), res: Def(Fn, DefId(1:1841 ~ std[3ef1]::env::args)), segments: [PathSegment { ident: env#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).10), res: Def(Mod, DefId(1:1761 ~ std[3ef1]::env)), args: None, infer_args: true }, PathSegment { ident: args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).11), res: Def(Fn, DefId(1:1841 ~ std[3ef1]::env::args)), args: None, infer_args: true }] })), span: src/main.rs:182:29: 182:38 (#0) }, []), span: src/main.rs:182:29: 182:40 (#0) }, [], src/main.rs:182:41: 182:50 (#0)), span: src/main.rs:182:29: 182:50 (#0) }), els: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).12), span: src/main.rs:182:5: 182:51 (#0), source: Normal }), span: src/main.rs:182:5: 182:51 (#0) }, Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).14), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).20), kind: Binding(BindingAnnotation(No, Mut), HirId(DefId(0:37 ~ main[cc0f]::main).20), rustc_args#0, None), span: src/main.rs:185:9: 185:23 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).15), kind: MethodCall(PathSegment { ident: clone#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).16), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).17), kind: Path(Resolved(None, Path { span: src/main.rs:185:26: 185:30 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).13)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).18), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).13)), args: None, infer_args: true }] })), span: src/main.rs:185:26: 185:30 (#0) }, [], src/main.rs:185:31: 185:38 (#0)), span: src/main.rs:185:26: 185:38 (#0) }), els: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).19), span: src/main.rs:185:5: 185:39 (#0), source: Normal }), span: src/main.rs:185:5: 185:39 (#0) }, Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).114), kind: Expr(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).21), kind: If(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).37), kind: DropTemps(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).22), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).23), kind: MethodCall(PathSegment { ident: any#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).24), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).25), kind: MethodCall(PathSegment { ident: iter#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).27), kind: Path(Resolved(None, Path { span: src/main.rs:188:9: 188:19 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).28), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:188:9: 188:19 (#0) }, [], src/main.rs:188:20: 188:26 (#0)), span: src/main.rs:188:9: 188:26 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).29), kind: Closure(Closure { def_id: DefId(0:38 ~ main[cc0f]::main::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).36), kind: Infer, span: src/main.rs:188:32: 188:35 (#0) }], output: DefaultReturn(src/main.rs:188:37: 188:37 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).32) }, fn_decl_span: src/main.rs:188:31: 188:36 (#0), fn_arg_span: Some(src/main.rs:188:31: 188:36 (#0)), movability: None }), span: src/main.rs:188:31: 188:55 (#0) }], src/main.rs:188:27: 188:56 (#0)), span: src/main.rs:188:9: 188:56 (#0) }), span: src/main.rs:188:8: 188:56 (#0) }), span: src/main.rs:188:8: 188:56 (#239) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).113), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).38), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).86), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:37 ~ main[cc0f]::main).86), sysroot#0, None), span: src/main.rs:190:13: 190:20 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).39), kind: MethodCall(PathSegment { ident: map#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).40), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).41), kind: MethodCall(PathSegment { ident: and_then#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).42), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).43), kind: MethodCall(PathSegment { ident: ok#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).44), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).45), kind: MethodCall(PathSegment { ident: output#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).46), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).47), kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).48), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).49), kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).50), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).51), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).52), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).56), kind: Path(Resolved(None, Path { span: src/main.rs:190:23: 190:44 (#0), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).53), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: process#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).54), res: Def(Mod, DefId(1:5179 ~ std[3ef1]::process)), args: None, infer_args: true }, PathSegment { ident: Command#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).55), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), args: None, infer_args: true }] })), span: src/main.rs:190:23: 190:44 (#0) }, PathSegment { ident: new#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).57), res: Err, args: None, infer_args: true })), span: src/main.rs:190:23: 190:49 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).58), kind: Lit(Spanned { node: Str("rustc", Cooked), span: src/main.rs:190:50: 190:57 (#0) }), span: src/main.rs:190:50: 190:57 (#0) }]), span: src/main.rs:190:23: 190:58 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).59), kind: Lit(Spanned { node: Str("--print", Cooked), span: src/main.rs:191:18: 191:27 (#0) }), span: src/main.rs:191:18: 191:27 (#0) }], src/main.rs:191:14: 191:28 (#0)), span: src/main.rs:190:23: 191:28 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).60), kind: Lit(Spanned { node: Str("sysroot", Cooked), span: src/main.rs:192:18: 192:27 (#0) }), span: src/main.rs:192:18: 192:27 (#0) }], src/main.rs:192:14: 192:28 (#0)), span: src/main.rs:190:23: 192:28 (#0) }, [], src/main.rs:193:14: 193:22 (#0)), span: src/main.rs:190:23: 193:22 (#0) }, [], src/main.rs:194:14: 194:18 (#0)), span: src/main.rs:190:23: 194:18 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).61), kind: Closure(Closure { def_id: DefId(0:39 ~ main[cc0f]::main::{closure#1}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).74), kind: Infer, span: src/main.rs:195:24: 195:30 (#0) }], output: DefaultReturn(src/main.rs:195:32: 195:32 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).64) }, fn_decl_span: src/main.rs:195:23: 195:31 (#0), fn_arg_span: Some(src/main.rs:195:23: 195:31 (#0)), movability: None }), span: src/main.rs:195:23: 195:69 (#0) }], src/main.rs:195:14: 195:70 (#0)), span: src/main.rs:190:23: 195:70 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).75), kind: Closure(Closure { def_id: DefId(0:40 ~ main[cc0f]::main::{closure#2}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).84), kind: Infer, span: src/main.rs:196:19: 196:20 (#0) }], output: DefaultReturn(src/main.rs:196:22: 196:22 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).78) }, fn_decl_span: src/main.rs:196:18: 196:21 (#0), fn_arg_span: Some(src/main.rs:196:18: 196:21 (#0)), movability: None }), span: src/main.rs:196:18: 196:42 (#0) }], src/main.rs:196:14: 196:43 (#0)), span: src/main.rs:190:23: 196:43 (#0) }), els: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).85), span: src/main.rs:190:9: 196:44 (#0), source: Normal }), span: src/main.rs:190:9: 196:44 (#0) }], expr: Some(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).87), kind: If(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).88), kind: Let(Let { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).89), span: src/main.rs:198:12: 198:39 (#0), pat: Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).92), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:198:16: 198:20 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).90), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).91), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:37 ~ main[cc0f]::main).91), sysroot#0, None), span: src/main.rs:198:21: 198:28 (#0), default_binding_modes: true }], None), span: src/main.rs:198:16: 198:29 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).93), kind: Path(Resolved(None, Path { span: src/main.rs:198:32: 198:39 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).86)), segments: [PathSegment { ident: sysroot#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).94), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).86)), args: None, infer_args: true }] })), span: src/main.rs:198:32: 198:39 (#0) } }), span: src/main.rs:198:12: 198:39 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).111), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).102), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).95), kind: MethodCall(PathSegment { ident: push#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).96), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).97), kind: Path(Resolved(None, Path { span: src/main.rs:199:13: 199:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).98), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:199:13: 199:23 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).99), kind: MethodCall(PathSegment { ident: to_string#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).100), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).101), kind: Lit(Spanned { node: Str("--sysroot", Cooked), span: src/main.rs:199:29: 199:40 (#0) }), span: src/main.rs:199:29: 199:40 (#0) }, [], src/main.rs:199:41: 199:52 (#0)), span: src/main.rs:199:29: 199:52 (#0) }], src/main.rs:199:24: 199:53 (#0)), span: src/main.rs:199:13: 199:53 (#0) }), span: src/main.rs:199:13: 199:54 (#0) }, Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).109), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).103), kind: MethodCall(PathSegment { ident: push#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).104), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).105), kind: Path(Resolved(None, Path { span: src/main.rs:200:13: 200:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).106), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:200:13: 200:23 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).107), kind: Path(Resolved(None, Path { span: src/main.rs:200:29: 200:36 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).91)), segments: [PathSegment { ident: sysroot#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).108), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).91)), args: None, infer_args: true }] })), span: src/main.rs:200:29: 200:36 (#0) }], src/main.rs:200:24: 200:37 (#0)), span: src/main.rs:200:13: 200:37 (#0) }), span: src/main.rs:200:13: 200:38 (#0) }], expr: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).110), rules: DefaultBlock, span: src/main.rs:198:40: 201:10 (#0), targeted_by_break: false }, None), span: src/main.rs:198:40: 201:10 (#0) }, None), span: src/main.rs:198:9: 201:10 (#0) }), hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).112), rules: DefaultBlock, span: src/main.rs:188:57: 202:6 (#0), targeted_by_break: false }, None), span: src/main.rs:188:57: 202:6 (#0) }, None), span: src/main.rs:188:5: 202:6 (#0) }), span: src/main.rs:188:5: 202:6 (#0) }, Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).121), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).115), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).116), kind: Path(Resolved(None, Path { span: src/main.rs:205:5: 205:17 (#0), res: Def(Fn, DefId(1:1805 ~ std[3ef1]::env::set_var)), segments: [PathSegment { ident: env#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).117), res: Def(Mod, DefId(1:1761 ~ std[3ef1]::env)), args: None, infer_args: true }, PathSegment { ident: set_var#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).118), res: Def(Fn, DefId(1:1805 ~ std[3ef1]::env::set_var)), args: None, infer_args: true }] })), span: src/main.rs:205:5: 205:17 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).119), kind: Lit(Spanned { node: Str("RUSTC_BOOTSTRAP", Cooked), span: src/main.rs:205:18: 205:35 (#0) }), span: src/main.rs:205:18: 205:35 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).120), kind: Lit(Spanned { node: Str("1", Cooked), span: src/main.rs:205:37: 205:40 (#0) }), span: src/main.rs:205:37: 205:40 (#0) }]), span: src/main.rs:205:5: 205:41 (#0) }), span: src/main.rs:205:5: 205:42 (#0) }, Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).147), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).122), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).145), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).123), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).124), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#81), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#81, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).125), res: Err, args: None, infer_args: true }, PathSegment { ident: io#81, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).126), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#81, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).127), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#81) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).128), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).144), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).142), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }, PathSegment { ident: new_v1#82, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).143), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).132), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).131), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).129), kind: Lit(Spanned { node: Str("Running Rust compiler with arguments: ", Cooked), span: src/main.rs:207:14: 207:58 (#0) }), span: src/main.rs:207:14: 207:58 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).130), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:207:14: 207:58 (#0) }), span: src/main.rs:207:14: 207:58 (#0) }]), span: src/main.rs:207:14: 207:58 (#0) }), span: src/main.rs:207:14: 207:58 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).141), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).140), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).139), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).138), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).136), kind: Path(LangItem(FormatArgument, src/main.rs:207:53: 207:57 (#82), None)), span: src/main.rs:207:53: 207:57 (#82) }, PathSegment { ident: new_debug#82, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).137), res: Err, args: None, infer_args: true })), span: src/main.rs:207:53: 207:57 (#82) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).135), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).133), kind: Path(Resolved(None, Path { span: src/main.rs:207:60: 207:70 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).134), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:207:60: 207:70 (#0) }), span: src/main.rs:207:60: 207:70 (#82) }]), span: src/main.rs:207:53: 207:57 (#82) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#81) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#81) }], expr: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).146), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#81), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#81) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#81) }, Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).148), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).152), kind: Binding(BindingAnnotation(No, Mut), HirId(DefId(0:37 ~ main[cc0f]::main).152), callback#0, None), span: src/main.rs:210:9: 210:21 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).149), kind: Path(Resolved(None, Path { span: src/main.rs:210:24: 210:34 (#0), res: Def(Ctor(Struct, Const), DefId(0:19 ~ main[cc0f]::AstPrinter::{constructor#0})), segments: [PathSegment { ident: AstPrinter#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).150), res: Def(Ctor(Struct, Const), DefId(0:19 ~ main[cc0f]::AstPrinter::{constructor#0})), args: None, infer_args: true }] })), span: src/main.rs:210:24: 210:34 (#0) }), els: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).151), span: src/main.rs:210:5: 210:35 (#0), source: Normal }), span: src/main.rs:210:5: 210:35 (#0) }, Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).153), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).168), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:37 ~ main[cc0f]::main).168), compiler#0, None), span: src/main.rs:213:9: 213:17 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).154), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).155), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).159), kind: Path(Resolved(None, Path { span: src/main.rs:213:20: 213:31 (#0), res: Def(Struct, DefId(21:300 ~ rustc_driver_impl[66c9]::RunCompiler)), segments: [PathSegment { ident: RunCompiler#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).158), res: Def(Struct, DefId(21:300 ~ rustc_driver_impl[66c9]::RunCompiler)), args: Some(GenericArgs { args: [Lifetime(Lifetime { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).156), ident: #0, res: Infer }), Lifetime(Lifetime { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).157), ident: #0, res: Infer })], bindings: [], parenthesized: No, span_ext: src/main.rs:213:36: 213:36 (#0) }), infer_args: true }] })), span: src/main.rs:213:20: 213:31 (#0) }, PathSegment { ident: new#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).160), res: Err, args: None, infer_args: true })), span: src/main.rs:213:20: 213:36 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).161), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).162), kind: Path(Resolved(None, Path { span: src/main.rs:213:38: 213:48 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).163), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:213:38: 213:48 (#0) }), span: src/main.rs:213:37: 213:48 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).164), kind: AddrOf(Ref, Mut, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).165), kind: Path(Resolved(None, Path { span: src/main.rs:213:55: 213:63 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).152)), segments: [PathSegment { ident: callback#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).166), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).152)), args: None, infer_args: true }] })), span: src/main.rs:213:55: 213:63 (#0) }), span: src/main.rs:213:50: 213:63 (#0) }]), span: src/main.rs:213:20: 213:64 (#0) }), els: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).167), span: src/main.rs:213:5: 213:65 (#0), source: Normal }), span: src/main.rs:213:5: 213:65 (#0) }], expr: Some(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).169), kind: Match(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).170), kind: MethodCall(PathSegment { ident: run#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).171), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).172), kind: Path(Resolved(None, Path { span: src/main.rs:214:11: 214:19 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).168)), segments: [PathSegment { ident: compiler#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).173), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).168)), args: None, infer_args: true }] })), span: src/main.rs:214:11: 214:19 (#0) }, [], src/main.rs:214:20: 214:25 (#0)), span: src/main.rs:214:11: 214:25 (#0) }, [Arm { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).177), span: src/main.rs:215:9: 215:52 (#0), pat: Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).176), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:215:9: 215:11 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), segments: [PathSegment { ident: Ok#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).174), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).175), kind: Wild, span: src/main.rs:215:12: 215:13 (#0), default_binding_modes: true }], None), span: src/main.rs:215:9: 215:14 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).178), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).191), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).179), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).180), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#83), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#83, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).181), res: Err, args: None, infer_args: true }, PathSegment { ident: io#83, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).182), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#83, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).183), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#83) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).184), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).190), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).188), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84) }, PathSegment { ident: new_const#84, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).189), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).187), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).186), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).185), kind: Lit(Spanned { node: Str("AST traversal complete\n", Cooked), span: src/main.rs:215:27: 215:51 (#0) }), span: src/main.rs:215:27: 215:51 (#0) }]), span: src/main.rs:215:27: 215:51 (#0) }), span: src/main.rs:215:27: 215:51 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#83) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#83) }], expr: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).192), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#83), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#83) } }, Arm { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).196), span: src/main.rs:216:9: 216:55 (#0), pat: Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).195), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:216:9: 216:12 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), segments: [PathSegment { ident: Err#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).193), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).194), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:37 ~ main[cc0f]::main).194), e#0, None), span: src/main.rs:216:13: 216:14 (#0), default_binding_modes: true }], None), span: src/main.rs:216:9: 216:15 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).197), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).220), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).198), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).199), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:9: 221:28 (#85), res: Def(Fn, DefId(1:3347 ~ std[3ef1]::io::stdio::_eprint)), segments: [PathSegment { ident: $crate#85, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).200), res: Err, args: None, infer_args: true }, PathSegment { ident: io#85, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).201), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _eprint#85, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).202), res: Def(Fn, DefId(1:3347 ~ std[3ef1]::io::stdio::_eprint)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:9: 221:28 (#85) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).203), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).219), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).217), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }, PathSegment { ident: new_v1#86, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).218), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).207), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).206), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).204), kind: Lit(Spanned { node: Str("Compiler error: ", Cooked), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).205), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }]), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).216), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).215), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).214), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).213), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).211), kind: Path(LangItem(FormatArgument, src/main.rs:216:46: 216:50 (#86), None)), span: src/main.rs:216:46: 216:50 (#86) }, PathSegment { ident: new_debug#86, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).212), res: Err, args: None, infer_args: true })), span: src/main.rs:216:46: 216:50 (#86) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).210), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).208), kind: Path(Resolved(None, Path { span: src/main.rs:216:53: 216:54 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), segments: [PathSegment { ident: e#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).209), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), args: None, infer_args: true }] })), span: src/main.rs:216:53: 216:54 (#0) }), span: src/main.rs:216:53: 216:54 (#86) }]), span: src/main.rs:216:46: 216:50 (#86) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:9: 221:63 (#85) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:9: 221:64 (#85) }], expr: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).221), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:220:23: 222:6 (#85), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:220:23: 222:6 (#85) } }], Normal), span: src/main.rs:214:5: 217:6 (#0) }), hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).222), rules: DefaultBlock, span: src/main.rs:180:11: 218:2 (#0), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: MethodCall(PathSegment { ident: collect#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).7), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).8), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).9), kind: Path(Resolved(None, Path { span: src/main.rs:182:29: 182:38 (#0), res: Def(Fn, DefId(1:1841 ~ std[3ef1]::env::args)), segments: [PathSegment { ident: env#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).10), res: Def(Mod, DefId(1:1761 ~ std[3ef1]::env)), args: None, infer_args: true }, PathSegment { ident: args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).11), res: Def(Fn, DefId(1:1841 ~ std[3ef1]::env::args)), args: None, infer_args: true }] })), span: src/main.rs:182:29: 182:38 (#0) }, []), span: src/main.rs:182:29: 182:40 (#0) }, [], src/main.rs:182:41: 182:50 (#0)))
  Method call: collect with 0 arguments
  Receiver type: Adt(std::env::Args, [])
  Method: std::iter::Iterator::collect
  Method type: FnDef(DefId(2:7617 ~ core[ae61]::iter::traits::iterator::Iterator::collect), [Self/#0, B/#1])
  Expression type: Adt(std::vec::Vec, [Adt(std::string::String, []), Adt(std::alloc::Global, [])])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).9), kind: Path(Resolved(None, Path { span: src/main.rs:182:29: 182:38 (#0), res: Def(Fn, DefId(1:1841 ~ std[3ef1]::env::args)), segments: [PathSegment { ident: env#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).10), res: Def(Mod, DefId(1:1761 ~ std[3ef1]::env)), args: None, infer_args: true }, PathSegment { ident: args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).11), res: Def(Fn, DefId(1:1841 ~ std[3ef1]::env::args)), args: None, infer_args: true }] })), span: src/main.rs:182:29: 182:38 (#0) }, []))
  Function call with 0 arguments
  Expression type: Adt(std::env::Args, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:182:29: 182:38 (#0), res: Def(Fn, DefId(1:1841 ~ std[3ef1]::env::args)), segments: [PathSegment { ident: env#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).10), res: Def(Mod, DefId(1:1761 ~ std[3ef1]::env)), args: None, infer_args: true }, PathSegment { ident: args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).11), res: Def(Fn, DefId(1:1841 ~ std[3ef1]::env::args)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:1841 ~ std[3ef1]::env::args), [])
Expression (kind: MethodCall(PathSegment { ident: clone#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).16), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).17), kind: Path(Resolved(None, Path { span: src/main.rs:185:26: 185:30 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).13)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).18), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).13)), args: None, infer_args: true }] })), span: src/main.rs:185:26: 185:30 (#0) }, [], src/main.rs:185:31: 185:38 (#0)))
  Method call: clone with 0 arguments
  Receiver type: Adt(std::vec::Vec, [Adt(std::string::String, []), Adt(std::alloc::Global, [])])
  Method: std::clone::Clone::clone
  Method type: FnDef(DefId(2:2280 ~ core[ae61]::clone::Clone::clone), [Self/#0])
  Expression type: Adt(std::vec::Vec, [Adt(std::string::String, []), Adt(std::alloc::Global, [])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:185:26: 185:30 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).13)), segments: [PathSegment { ident: args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).18), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).13)), args: None, infer_args: true }] })))
  Expression type: Adt(std::vec::Vec, [Adt(std::string::String, []), Adt(std::alloc::Global, [])])
Expression (kind: If(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).37), kind: DropTemps(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).22), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).23), kind: MethodCall(PathSegment { ident: any#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).24), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).25), kind: MethodCall(PathSegment { ident: iter#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).27), kind: Path(Resolved(None, Path { span: src/main.rs:188:9: 188:19 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).28), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:188:9: 188:19 (#0) }, [], src/main.rs:188:20: 188:26 (#0)), span: src/main.rs:188:9: 188:26 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).29), kind: Closure(Closure { def_id: DefId(0:38 ~ main[cc0f]::main::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).36), kind: Infer, span: src/main.rs:188:32: 188:35 (#0) }], output: DefaultReturn(src/main.rs:188:37: 188:37 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).32) }, fn_decl_span: src/main.rs:188:31: 188:36 (#0), fn_arg_span: Some(src/main.rs:188:31: 188:36 (#0)), movability: None }), span: src/main.rs:188:31: 188:55 (#0) }], src/main.rs:188:27: 188:56 (#0)), span: src/main.rs:188:9: 188:56 (#0) }), span: src/main.rs:188:8: 188:56 (#0) }), span: src/main.rs:188:8: 188:56 (#239) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).113), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).38), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).86), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:37 ~ main[cc0f]::main).86), sysroot#0, None), span: src/main.rs:190:13: 190:20 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).39), kind: MethodCall(PathSegment { ident: map#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).40), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).41), kind: MethodCall(PathSegment { ident: and_then#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).42), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).43), kind: MethodCall(PathSegment { ident: ok#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).44), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).45), kind: MethodCall(PathSegment { ident: output#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).46), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).47), kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).48), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).49), kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).50), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).51), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).52), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).56), kind: Path(Resolved(None, Path { span: src/main.rs:190:23: 190:44 (#0), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).53), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: process#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).54), res: Def(Mod, DefId(1:5179 ~ std[3ef1]::process)), args: None, infer_args: true }, PathSegment { ident: Command#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).55), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), args: None, infer_args: true }] })), span: src/main.rs:190:23: 190:44 (#0) }, PathSegment { ident: new#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).57), res: Err, args: None, infer_args: true })), span: src/main.rs:190:23: 190:49 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).58), kind: Lit(Spanned { node: Str("rustc", Cooked), span: src/main.rs:190:50: 190:57 (#0) }), span: src/main.rs:190:50: 190:57 (#0) }]), span: src/main.rs:190:23: 190:58 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).59), kind: Lit(Spanned { node: Str("--print", Cooked), span: src/main.rs:191:18: 191:27 (#0) }), span: src/main.rs:191:18: 191:27 (#0) }], src/main.rs:191:14: 191:28 (#0)), span: src/main.rs:190:23: 191:28 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).60), kind: Lit(Spanned { node: Str("sysroot", Cooked), span: src/main.rs:192:18: 192:27 (#0) }), span: src/main.rs:192:18: 192:27 (#0) }], src/main.rs:192:14: 192:28 (#0)), span: src/main.rs:190:23: 192:28 (#0) }, [], src/main.rs:193:14: 193:22 (#0)), span: src/main.rs:190:23: 193:22 (#0) }, [], src/main.rs:194:14: 194:18 (#0)), span: src/main.rs:190:23: 194:18 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).61), kind: Closure(Closure { def_id: DefId(0:39 ~ main[cc0f]::main::{closure#1}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).74), kind: Infer, span: src/main.rs:195:24: 195:30 (#0) }], output: DefaultReturn(src/main.rs:195:32: 195:32 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).64) }, fn_decl_span: src/main.rs:195:23: 195:31 (#0), fn_arg_span: Some(src/main.rs:195:23: 195:31 (#0)), movability: None }), span: src/main.rs:195:23: 195:69 (#0) }], src/main.rs:195:14: 195:70 (#0)), span: src/main.rs:190:23: 195:70 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).75), kind: Closure(Closure { def_id: DefId(0:40 ~ main[cc0f]::main::{closure#2}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).84), kind: Infer, span: src/main.rs:196:19: 196:20 (#0) }], output: DefaultReturn(src/main.rs:196:22: 196:22 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).78) }, fn_decl_span: src/main.rs:196:18: 196:21 (#0), fn_arg_span: Some(src/main.rs:196:18: 196:21 (#0)), movability: None }), span: src/main.rs:196:18: 196:42 (#0) }], src/main.rs:196:14: 196:43 (#0)), span: src/main.rs:190:23: 196:43 (#0) }), els: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).85), span: src/main.rs:190:9: 196:44 (#0), source: Normal }), span: src/main.rs:190:9: 196:44 (#0) }], expr: Some(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).87), kind: If(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).88), kind: Let(Let { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).89), span: src/main.rs:198:12: 198:39 (#0), pat: Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).92), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:198:16: 198:20 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).90), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).91), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:37 ~ main[cc0f]::main).91), sysroot#0, None), span: src/main.rs:198:21: 198:28 (#0), default_binding_modes: true }], None), span: src/main.rs:198:16: 198:29 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).93), kind: Path(Resolved(None, Path { span: src/main.rs:198:32: 198:39 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).86)), segments: [PathSegment { ident: sysroot#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).94), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).86)), args: None, infer_args: true }] })), span: src/main.rs:198:32: 198:39 (#0) } }), span: src/main.rs:198:12: 198:39 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).111), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).102), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).95), kind: MethodCall(PathSegment { ident: push#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).96), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).97), kind: Path(Resolved(None, Path { span: src/main.rs:199:13: 199:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).98), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:199:13: 199:23 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).99), kind: MethodCall(PathSegment { ident: to_string#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).100), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).101), kind: Lit(Spanned { node: Str("--sysroot", Cooked), span: src/main.rs:199:29: 199:40 (#0) }), span: src/main.rs:199:29: 199:40 (#0) }, [], src/main.rs:199:41: 199:52 (#0)), span: src/main.rs:199:29: 199:52 (#0) }], src/main.rs:199:24: 199:53 (#0)), span: src/main.rs:199:13: 199:53 (#0) }), span: src/main.rs:199:13: 199:54 (#0) }, Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).109), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).103), kind: MethodCall(PathSegment { ident: push#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).104), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).105), kind: Path(Resolved(None, Path { span: src/main.rs:200:13: 200:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).106), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:200:13: 200:23 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).107), kind: Path(Resolved(None, Path { span: src/main.rs:200:29: 200:36 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).91)), segments: [PathSegment { ident: sysroot#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).108), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).91)), args: None, infer_args: true }] })), span: src/main.rs:200:29: 200:36 (#0) }], src/main.rs:200:24: 200:37 (#0)), span: src/main.rs:200:13: 200:37 (#0) }), span: src/main.rs:200:13: 200:38 (#0) }], expr: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).110), rules: DefaultBlock, span: src/main.rs:198:40: 201:10 (#0), targeted_by_break: false }, None), span: src/main.rs:198:40: 201:10 (#0) }, None), span: src/main.rs:198:9: 201:10 (#0) }), hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).112), rules: DefaultBlock, span: src/main.rs:188:57: 202:6 (#0), targeted_by_break: false }, None), span: src/main.rs:188:57: 202:6 (#0) }, None))
  Expression type: ()
Expression (kind: DropTemps(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).22), kind: Unary(Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).23), kind: MethodCall(PathSegment { ident: any#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).24), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).25), kind: MethodCall(PathSegment { ident: iter#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).27), kind: Path(Resolved(None, Path { span: src/main.rs:188:9: 188:19 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).28), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:188:9: 188:19 (#0) }, [], src/main.rs:188:20: 188:26 (#0)), span: src/main.rs:188:9: 188:26 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).29), kind: Closure(Closure { def_id: DefId(0:38 ~ main[cc0f]::main::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).36), kind: Infer, span: src/main.rs:188:32: 188:35 (#0) }], output: DefaultReturn(src/main.rs:188:37: 188:37 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).32) }, fn_decl_span: src/main.rs:188:31: 188:36 (#0), fn_arg_span: Some(src/main.rs:188:31: 188:36 (#0)), movability: None }), span: src/main.rs:188:31: 188:55 (#0) }], src/main.rs:188:27: 188:56 (#0)), span: src/main.rs:188:9: 188:56 (#0) }), span: src/main.rs:188:8: 188:56 (#0) }))
  Expression type: bool
Expression (kind: Unary(Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).23), kind: MethodCall(PathSegment { ident: any#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).24), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).25), kind: MethodCall(PathSegment { ident: iter#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).27), kind: Path(Resolved(None, Path { span: src/main.rs:188:9: 188:19 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).28), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:188:9: 188:19 (#0) }, [], src/main.rs:188:20: 188:26 (#0)), span: src/main.rs:188:9: 188:26 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).29), kind: Closure(Closure { def_id: DefId(0:38 ~ main[cc0f]::main::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).36), kind: Infer, span: src/main.rs:188:32: 188:35 (#0) }], output: DefaultReturn(src/main.rs:188:37: 188:37 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).32) }, fn_decl_span: src/main.rs:188:31: 188:36 (#0), fn_arg_span: Some(src/main.rs:188:31: 188:36 (#0)), movability: None }), span: src/main.rs:188:31: 188:55 (#0) }], src/main.rs:188:27: 188:56 (#0)), span: src/main.rs:188:9: 188:56 (#0) }))
  Expression type: bool
Expression (kind: MethodCall(PathSegment { ident: any#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).24), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).25), kind: MethodCall(PathSegment { ident: iter#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).27), kind: Path(Resolved(None, Path { span: src/main.rs:188:9: 188:19 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).28), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:188:9: 188:19 (#0) }, [], src/main.rs:188:20: 188:26 (#0)), span: src/main.rs:188:9: 188:26 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).29), kind: Closure(Closure { def_id: DefId(0:38 ~ main[cc0f]::main::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).36), kind: Infer, span: src/main.rs:188:32: 188:35 (#0) }], output: DefaultReturn(src/main.rs:188:37: 188:37 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).32) }, fn_decl_span: src/main.rs:188:31: 188:36 (#0), fn_arg_span: Some(src/main.rs:188:31: 188:36 (#0)), movability: None }), span: src/main.rs:188:31: 188:55 (#0) }], src/main.rs:188:27: 188:56 (#0)))
  Method call: any with 1 arguments
  Receiver type: Adt(std::slice::Iter, [ReErased, Adt(std::string::String, [])])
  Method: std::iter::Iterator::any
  Method type: FnDef(DefId(2:7669 ~ core[ae61]::iter::traits::iterator::Iterator::any), [Self/#0, F/#1])
  Expression type: bool
Expression (kind: MethodCall(PathSegment { ident: iter#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).26), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).27), kind: Path(Resolved(None, Path { span: src/main.rs:188:9: 188:19 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).28), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:188:9: 188:19 (#0) }, [], src/main.rs:188:20: 188:26 (#0)))
  Method call: iter with 0 arguments
  Receiver type: Adt(std::vec::Vec, [Adt(std::string::String, []), Adt(std::alloc::Global, [])])
  Method: core::slice::<impl [T]>::iter
  Method type: FnDef(DefId(2:11321 ~ core[ae61]::slice::{impl#0}::iter), [T/#0])
  Expression type: Adt(std::slice::Iter, [ReErased, Adt(std::string::String, [])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:188:9: 188:19 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).28), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })))
  Expression type: Adt(std::vec::Vec, [Adt(std::string::String, []), Adt(std::alloc::Global, [])])
Expression (kind: Closure(Closure { def_id: DefId(0:38 ~ main[cc0f]::main::{closure#0}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).36), kind: Infer, span: src/main.rs:188:32: 188:35 (#0) }], output: DefaultReturn(src/main.rs:188:37: 188:37 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).32) }, fn_decl_span: src/main.rs:188:31: 188:36 (#0), fn_arg_span: Some(src/main.rs:188:31: 188:36 (#0)), movability: None }))
  Expression type: Closure(DefId(0:38 ~ main[cc0f]::main::{closure#0}), [i16, Binder(extern "RustCall" fn((&ReErased Adt(std::string::String, []),)) -> bool, []), ()])
Expression (kind: Binary(Spanned { node: Eq, span: src/main.rs:188:41: 188:43 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).33), kind: Path(Resolved(None, Path { span: src/main.rs:188:37: 188:40 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).31)), segments: [PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).34), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).31)), args: None, infer_args: true }] })), span: src/main.rs:188:37: 188:40 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).35), kind: Lit(Spanned { node: Str("--sysroot", Cooked), span: src/main.rs:188:44: 188:55 (#0) }), span: src/main.rs:188:44: 188:55 (#0) }))
  Expression type: bool
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:188:37: 188:40 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).31)), segments: [PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).34), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).31)), args: None, infer_args: true }] })))
  Expression type: &ReErased Adt(std::string::String, [])
Expression (kind: Lit(Spanned { node: Str("--sysroot", Cooked), span: src/main.rs:188:44: 188:55 (#0) }))
  Expression type: &ReErased str
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).38), kind: Local(Local { pat: Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).86), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:37 ~ main[cc0f]::main).86), sysroot#0, None), span: src/main.rs:190:13: 190:20 (#0), default_binding_modes: true }, ty: None, init: Some(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).39), kind: MethodCall(PathSegment { ident: map#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).40), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).41), kind: MethodCall(PathSegment { ident: and_then#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).42), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).43), kind: MethodCall(PathSegment { ident: ok#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).44), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).45), kind: MethodCall(PathSegment { ident: output#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).46), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).47), kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).48), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).49), kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).50), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).51), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).52), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).56), kind: Path(Resolved(None, Path { span: src/main.rs:190:23: 190:44 (#0), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).53), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: process#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).54), res: Def(Mod, DefId(1:5179 ~ std[3ef1]::process)), args: None, infer_args: true }, PathSegment { ident: Command#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).55), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), args: None, infer_args: true }] })), span: src/main.rs:190:23: 190:44 (#0) }, PathSegment { ident: new#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).57), res: Err, args: None, infer_args: true })), span: src/main.rs:190:23: 190:49 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).58), kind: Lit(Spanned { node: Str("rustc", Cooked), span: src/main.rs:190:50: 190:57 (#0) }), span: src/main.rs:190:50: 190:57 (#0) }]), span: src/main.rs:190:23: 190:58 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).59), kind: Lit(Spanned { node: Str("--print", Cooked), span: src/main.rs:191:18: 191:27 (#0) }), span: src/main.rs:191:18: 191:27 (#0) }], src/main.rs:191:14: 191:28 (#0)), span: src/main.rs:190:23: 191:28 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).60), kind: Lit(Spanned { node: Str("sysroot", Cooked), span: src/main.rs:192:18: 192:27 (#0) }), span: src/main.rs:192:18: 192:27 (#0) }], src/main.rs:192:14: 192:28 (#0)), span: src/main.rs:190:23: 192:28 (#0) }, [], src/main.rs:193:14: 193:22 (#0)), span: src/main.rs:190:23: 193:22 (#0) }, [], src/main.rs:194:14: 194:18 (#0)), span: src/main.rs:190:23: 194:18 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).61), kind: Closure(Closure { def_id: DefId(0:39 ~ main[cc0f]::main::{closure#1}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).74), kind: Infer, span: src/main.rs:195:24: 195:30 (#0) }], output: DefaultReturn(src/main.rs:195:32: 195:32 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).64) }, fn_decl_span: src/main.rs:195:23: 195:31 (#0), fn_arg_span: Some(src/main.rs:195:23: 195:31 (#0)), movability: None }), span: src/main.rs:195:23: 195:69 (#0) }], src/main.rs:195:14: 195:70 (#0)), span: src/main.rs:190:23: 195:70 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).75), kind: Closure(Closure { def_id: DefId(0:40 ~ main[cc0f]::main::{closure#2}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).84), kind: Infer, span: src/main.rs:196:19: 196:20 (#0) }], output: DefaultReturn(src/main.rs:196:22: 196:22 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).78) }, fn_decl_span: src/main.rs:196:18: 196:21 (#0), fn_arg_span: Some(src/main.rs:196:18: 196:21 (#0)), movability: None }), span: src/main.rs:196:18: 196:42 (#0) }], src/main.rs:196:14: 196:43 (#0)), span: src/main.rs:190:23: 196:43 (#0) }), els: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).85), span: src/main.rs:190:9: 196:44 (#0), source: Normal }), span: src/main.rs:190:9: 196:44 (#0) }], expr: Some(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).87), kind: If(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).88), kind: Let(Let { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).89), span: src/main.rs:198:12: 198:39 (#0), pat: Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).92), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:198:16: 198:20 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).90), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).91), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:37 ~ main[cc0f]::main).91), sysroot#0, None), span: src/main.rs:198:21: 198:28 (#0), default_binding_modes: true }], None), span: src/main.rs:198:16: 198:29 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).93), kind: Path(Resolved(None, Path { span: src/main.rs:198:32: 198:39 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).86)), segments: [PathSegment { ident: sysroot#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).94), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).86)), args: None, infer_args: true }] })), span: src/main.rs:198:32: 198:39 (#0) } }), span: src/main.rs:198:12: 198:39 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).111), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).102), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).95), kind: MethodCall(PathSegment { ident: push#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).96), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).97), kind: Path(Resolved(None, Path { span: src/main.rs:199:13: 199:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).98), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:199:13: 199:23 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).99), kind: MethodCall(PathSegment { ident: to_string#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).100), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).101), kind: Lit(Spanned { node: Str("--sysroot", Cooked), span: src/main.rs:199:29: 199:40 (#0) }), span: src/main.rs:199:29: 199:40 (#0) }, [], src/main.rs:199:41: 199:52 (#0)), span: src/main.rs:199:29: 199:52 (#0) }], src/main.rs:199:24: 199:53 (#0)), span: src/main.rs:199:13: 199:53 (#0) }), span: src/main.rs:199:13: 199:54 (#0) }, Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).109), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).103), kind: MethodCall(PathSegment { ident: push#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).104), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).105), kind: Path(Resolved(None, Path { span: src/main.rs:200:13: 200:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).106), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:200:13: 200:23 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).107), kind: Path(Resolved(None, Path { span: src/main.rs:200:29: 200:36 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).91)), segments: [PathSegment { ident: sysroot#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).108), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).91)), args: None, infer_args: true }] })), span: src/main.rs:200:29: 200:36 (#0) }], src/main.rs:200:24: 200:37 (#0)), span: src/main.rs:200:13: 200:37 (#0) }), span: src/main.rs:200:13: 200:38 (#0) }], expr: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).110), rules: DefaultBlock, span: src/main.rs:198:40: 201:10 (#0), targeted_by_break: false }, None), span: src/main.rs:198:40: 201:10 (#0) }, None), span: src/main.rs:198:9: 201:10 (#0) }), hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).112), rules: DefaultBlock, span: src/main.rs:188:57: 202:6 (#0), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: MethodCall(PathSegment { ident: map#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).40), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).41), kind: MethodCall(PathSegment { ident: and_then#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).42), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).43), kind: MethodCall(PathSegment { ident: ok#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).44), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).45), kind: MethodCall(PathSegment { ident: output#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).46), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).47), kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).48), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).49), kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).50), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).51), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).52), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).56), kind: Path(Resolved(None, Path { span: src/main.rs:190:23: 190:44 (#0), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).53), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: process#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).54), res: Def(Mod, DefId(1:5179 ~ std[3ef1]::process)), args: None, infer_args: true }, PathSegment { ident: Command#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).55), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), args: None, infer_args: true }] })), span: src/main.rs:190:23: 190:44 (#0) }, PathSegment { ident: new#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).57), res: Err, args: None, infer_args: true })), span: src/main.rs:190:23: 190:49 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).58), kind: Lit(Spanned { node: Str("rustc", Cooked), span: src/main.rs:190:50: 190:57 (#0) }), span: src/main.rs:190:50: 190:57 (#0) }]), span: src/main.rs:190:23: 190:58 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).59), kind: Lit(Spanned { node: Str("--print", Cooked), span: src/main.rs:191:18: 191:27 (#0) }), span: src/main.rs:191:18: 191:27 (#0) }], src/main.rs:191:14: 191:28 (#0)), span: src/main.rs:190:23: 191:28 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).60), kind: Lit(Spanned { node: Str("sysroot", Cooked), span: src/main.rs:192:18: 192:27 (#0) }), span: src/main.rs:192:18: 192:27 (#0) }], src/main.rs:192:14: 192:28 (#0)), span: src/main.rs:190:23: 192:28 (#0) }, [], src/main.rs:193:14: 193:22 (#0)), span: src/main.rs:190:23: 193:22 (#0) }, [], src/main.rs:194:14: 194:18 (#0)), span: src/main.rs:190:23: 194:18 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).61), kind: Closure(Closure { def_id: DefId(0:39 ~ main[cc0f]::main::{closure#1}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).74), kind: Infer, span: src/main.rs:195:24: 195:30 (#0) }], output: DefaultReturn(src/main.rs:195:32: 195:32 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).64) }, fn_decl_span: src/main.rs:195:23: 195:31 (#0), fn_arg_span: Some(src/main.rs:195:23: 195:31 (#0)), movability: None }), span: src/main.rs:195:23: 195:69 (#0) }], src/main.rs:195:14: 195:70 (#0)), span: src/main.rs:190:23: 195:70 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).75), kind: Closure(Closure { def_id: DefId(0:40 ~ main[cc0f]::main::{closure#2}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).84), kind: Infer, span: src/main.rs:196:19: 196:20 (#0) }], output: DefaultReturn(src/main.rs:196:22: 196:22 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).78) }, fn_decl_span: src/main.rs:196:18: 196:21 (#0), fn_arg_span: Some(src/main.rs:196:18: 196:21 (#0)), movability: None }), span: src/main.rs:196:18: 196:42 (#0) }], src/main.rs:196:14: 196:43 (#0)))
  Method call: map with 1 arguments
  Receiver type: Adt(std::option::Option, [Adt(std::string::String, [])])
  Method: std::option::Option::<T>::map
  Method type: FnDef(DefId(2:8277 ~ core[ae61]::option::{impl#0}::map), [T/#0, U/#1, F/#2])
  Expression type: Adt(std::option::Option, [Adt(std::string::String, [])])
Expression (kind: MethodCall(PathSegment { ident: and_then#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).42), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).43), kind: MethodCall(PathSegment { ident: ok#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).44), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).45), kind: MethodCall(PathSegment { ident: output#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).46), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).47), kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).48), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).49), kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).50), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).51), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).52), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).56), kind: Path(Resolved(None, Path { span: src/main.rs:190:23: 190:44 (#0), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).53), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: process#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).54), res: Def(Mod, DefId(1:5179 ~ std[3ef1]::process)), args: None, infer_args: true }, PathSegment { ident: Command#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).55), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), args: None, infer_args: true }] })), span: src/main.rs:190:23: 190:44 (#0) }, PathSegment { ident: new#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).57), res: Err, args: None, infer_args: true })), span: src/main.rs:190:23: 190:49 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).58), kind: Lit(Spanned { node: Str("rustc", Cooked), span: src/main.rs:190:50: 190:57 (#0) }), span: src/main.rs:190:50: 190:57 (#0) }]), span: src/main.rs:190:23: 190:58 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).59), kind: Lit(Spanned { node: Str("--print", Cooked), span: src/main.rs:191:18: 191:27 (#0) }), span: src/main.rs:191:18: 191:27 (#0) }], src/main.rs:191:14: 191:28 (#0)), span: src/main.rs:190:23: 191:28 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).60), kind: Lit(Spanned { node: Str("sysroot", Cooked), span: src/main.rs:192:18: 192:27 (#0) }), span: src/main.rs:192:18: 192:27 (#0) }], src/main.rs:192:14: 192:28 (#0)), span: src/main.rs:190:23: 192:28 (#0) }, [], src/main.rs:193:14: 193:22 (#0)), span: src/main.rs:190:23: 193:22 (#0) }, [], src/main.rs:194:14: 194:18 (#0)), span: src/main.rs:190:23: 194:18 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).61), kind: Closure(Closure { def_id: DefId(0:39 ~ main[cc0f]::main::{closure#1}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).74), kind: Infer, span: src/main.rs:195:24: 195:30 (#0) }], output: DefaultReturn(src/main.rs:195:32: 195:32 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).64) }, fn_decl_span: src/main.rs:195:23: 195:31 (#0), fn_arg_span: Some(src/main.rs:195:23: 195:31 (#0)), movability: None }), span: src/main.rs:195:23: 195:69 (#0) }], src/main.rs:195:14: 195:70 (#0)))
  Method call: and_then with 1 arguments
  Receiver type: Adt(std::option::Option, [Adt(std::process::Output, [])])
  Method: std::option::Option::<T>::and_then
  Method type: FnDef(DefId(2:8300 ~ core[ae61]::option::{impl#0}::and_then), [T/#0, U/#1, F/#2])
  Expression type: Adt(std::option::Option, [Adt(std::string::String, [])])
Expression (kind: MethodCall(PathSegment { ident: ok#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).44), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).45), kind: MethodCall(PathSegment { ident: output#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).46), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).47), kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).48), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).49), kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).50), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).51), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).52), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).56), kind: Path(Resolved(None, Path { span: src/main.rs:190:23: 190:44 (#0), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).53), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: process#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).54), res: Def(Mod, DefId(1:5179 ~ std[3ef1]::process)), args: None, infer_args: true }, PathSegment { ident: Command#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).55), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), args: None, infer_args: true }] })), span: src/main.rs:190:23: 190:44 (#0) }, PathSegment { ident: new#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).57), res: Err, args: None, infer_args: true })), span: src/main.rs:190:23: 190:49 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).58), kind: Lit(Spanned { node: Str("rustc", Cooked), span: src/main.rs:190:50: 190:57 (#0) }), span: src/main.rs:190:50: 190:57 (#0) }]), span: src/main.rs:190:23: 190:58 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).59), kind: Lit(Spanned { node: Str("--print", Cooked), span: src/main.rs:191:18: 191:27 (#0) }), span: src/main.rs:191:18: 191:27 (#0) }], src/main.rs:191:14: 191:28 (#0)), span: src/main.rs:190:23: 191:28 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).60), kind: Lit(Spanned { node: Str("sysroot", Cooked), span: src/main.rs:192:18: 192:27 (#0) }), span: src/main.rs:192:18: 192:27 (#0) }], src/main.rs:192:14: 192:28 (#0)), span: src/main.rs:190:23: 192:28 (#0) }, [], src/main.rs:193:14: 193:22 (#0)), span: src/main.rs:190:23: 193:22 (#0) }, [], src/main.rs:194:14: 194:18 (#0)))
  Method call: ok with 0 arguments
  Receiver type: Adt(std::result::Result, [Adt(std::process::Output, []), Adt(std::io::Error, [])])
  Method: std::result::Result::<T, E>::ok
  Method type: FnDef(DefId(2:8773 ~ core[ae61]::result::{impl#0}::ok), [T/#0, E/#1])
  Expression type: Adt(std::option::Option, [Adt(std::process::Output, [])])
Expression (kind: MethodCall(PathSegment { ident: output#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).46), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).47), kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).48), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).49), kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).50), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).51), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).52), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).56), kind: Path(Resolved(None, Path { span: src/main.rs:190:23: 190:44 (#0), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).53), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: process#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).54), res: Def(Mod, DefId(1:5179 ~ std[3ef1]::process)), args: None, infer_args: true }, PathSegment { ident: Command#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).55), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), args: None, infer_args: true }] })), span: src/main.rs:190:23: 190:44 (#0) }, PathSegment { ident: new#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).57), res: Err, args: None, infer_args: true })), span: src/main.rs:190:23: 190:49 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).58), kind: Lit(Spanned { node: Str("rustc", Cooked), span: src/main.rs:190:50: 190:57 (#0) }), span: src/main.rs:190:50: 190:57 (#0) }]), span: src/main.rs:190:23: 190:58 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).59), kind: Lit(Spanned { node: Str("--print", Cooked), span: src/main.rs:191:18: 191:27 (#0) }), span: src/main.rs:191:18: 191:27 (#0) }], src/main.rs:191:14: 191:28 (#0)), span: src/main.rs:190:23: 191:28 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).60), kind: Lit(Spanned { node: Str("sysroot", Cooked), span: src/main.rs:192:18: 192:27 (#0) }), span: src/main.rs:192:18: 192:27 (#0) }], src/main.rs:192:14: 192:28 (#0)), span: src/main.rs:190:23: 192:28 (#0) }, [], src/main.rs:193:14: 193:22 (#0)))
  Method call: output with 0 arguments
  Receiver type: &ReErased mut Adt(std::process::Command, [])
  Method: std::process::Command::output
  Method type: FnDef(DefId(1:5298 ~ std[3ef1]::process::{impl#22}::output), [])
  Expression type: Adt(std::result::Result, [Adt(std::process::Output, []), Adt(std::io::Error, [])])
Expression (kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).48), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).49), kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).50), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).51), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).52), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).56), kind: Path(Resolved(None, Path { span: src/main.rs:190:23: 190:44 (#0), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).53), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: process#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).54), res: Def(Mod, DefId(1:5179 ~ std[3ef1]::process)), args: None, infer_args: true }, PathSegment { ident: Command#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).55), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), args: None, infer_args: true }] })), span: src/main.rs:190:23: 190:44 (#0) }, PathSegment { ident: new#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).57), res: Err, args: None, infer_args: true })), span: src/main.rs:190:23: 190:49 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).58), kind: Lit(Spanned { node: Str("rustc", Cooked), span: src/main.rs:190:50: 190:57 (#0) }), span: src/main.rs:190:50: 190:57 (#0) }]), span: src/main.rs:190:23: 190:58 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).59), kind: Lit(Spanned { node: Str("--print", Cooked), span: src/main.rs:191:18: 191:27 (#0) }), span: src/main.rs:191:18: 191:27 (#0) }], src/main.rs:191:14: 191:28 (#0)), span: src/main.rs:190:23: 191:28 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).60), kind: Lit(Spanned { node: Str("sysroot", Cooked), span: src/main.rs:192:18: 192:27 (#0) }), span: src/main.rs:192:18: 192:27 (#0) }], src/main.rs:192:14: 192:28 (#0)))
  Method call: arg with 1 arguments
  Receiver type: &ReErased mut Adt(std::process::Command, [])
  Method: std::process::Command::arg
  Method type: FnDef(DefId(1:5274 ~ std[3ef1]::process::{impl#22}::arg), [S/#0])
  Expression type: &ReErased mut Adt(std::process::Command, [])
Expression (kind: MethodCall(PathSegment { ident: arg#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).50), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).51), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).52), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).56), kind: Path(Resolved(None, Path { span: src/main.rs:190:23: 190:44 (#0), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).53), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: process#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).54), res: Def(Mod, DefId(1:5179 ~ std[3ef1]::process)), args: None, infer_args: true }, PathSegment { ident: Command#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).55), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), args: None, infer_args: true }] })), span: src/main.rs:190:23: 190:44 (#0) }, PathSegment { ident: new#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).57), res: Err, args: None, infer_args: true })), span: src/main.rs:190:23: 190:49 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).58), kind: Lit(Spanned { node: Str("rustc", Cooked), span: src/main.rs:190:50: 190:57 (#0) }), span: src/main.rs:190:50: 190:57 (#0) }]), span: src/main.rs:190:23: 190:58 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).59), kind: Lit(Spanned { node: Str("--print", Cooked), span: src/main.rs:191:18: 191:27 (#0) }), span: src/main.rs:191:18: 191:27 (#0) }], src/main.rs:191:14: 191:28 (#0)))
  Method call: arg with 1 arguments
  Receiver type: Adt(std::process::Command, [])
  Method: std::process::Command::arg
  Method type: FnDef(DefId(1:5274 ~ std[3ef1]::process::{impl#22}::arg), [S/#0])
  Expression type: &ReErased mut Adt(std::process::Command, [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).52), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).56), kind: Path(Resolved(None, Path { span: src/main.rs:190:23: 190:44 (#0), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).53), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: process#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).54), res: Def(Mod, DefId(1:5179 ~ std[3ef1]::process)), args: None, infer_args: true }, PathSegment { ident: Command#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).55), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), args: None, infer_args: true }] })), span: src/main.rs:190:23: 190:44 (#0) }, PathSegment { ident: new#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).57), res: Err, args: None, infer_args: true })), span: src/main.rs:190:23: 190:49 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).58), kind: Lit(Spanned { node: Str("rustc", Cooked), span: src/main.rs:190:50: 190:57 (#0) }), span: src/main.rs:190:50: 190:57 (#0) }]))
  Function call with 1 arguments
  Called function: std::process::Command::new
  Function type: FnDef(DefId(1:5272 ~ std[3ef1]::process::{impl#22}::new), [S/#0])
  Expression type: Adt(std::process::Command, [])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).56), kind: Path(Resolved(None, Path { span: src/main.rs:190:23: 190:44 (#0), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), segments: [PathSegment { ident: std#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).53), res: Def(Mod, DefId(1:0 ~ std[3ef1])), args: None, infer_args: true }, PathSegment { ident: process#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).54), res: Def(Mod, DefId(1:5179 ~ std[3ef1]::process)), args: None, infer_args: true }, PathSegment { ident: Command#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).55), res: Def(Struct, DefId(1:5268 ~ std[3ef1]::process::Command)), args: None, infer_args: true }] })), span: src/main.rs:190:23: 190:44 (#0) }, PathSegment { ident: new#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).57), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(1:5272 ~ std[3ef1]::process::{impl#22}::new), [&ReErased str])
Expression (kind: Lit(Spanned { node: Str("rustc", Cooked), span: src/main.rs:190:50: 190:57 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("--print", Cooked), span: src/main.rs:191:18: 191:27 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("sysroot", Cooked), span: src/main.rs:192:18: 192:27 (#0) }))
  Expression type: &ReErased str
Expression (kind: Closure(Closure { def_id: DefId(0:39 ~ main[cc0f]::main::{closure#1}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).74), kind: Infer, span: src/main.rs:195:24: 195:30 (#0) }], output: DefaultReturn(src/main.rs:195:32: 195:32 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).64) }, fn_decl_span: src/main.rs:195:23: 195:31 (#0), fn_arg_span: Some(src/main.rs:195:23: 195:31 (#0)), movability: None }))
  Expression type: Closure(DefId(0:39 ~ main[cc0f]::main::{closure#1}), [i32, Binder(extern "RustCall" fn((Adt(std::process::Output, []),)) -> Adt(std::option::Option, [Adt(std::string::String, [])]), []), ()])
Expression (kind: MethodCall(PathSegment { ident: ok#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).65), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).66), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).67), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).69), kind: Path(Resolved(None, Path { span: src/main.rs:195:32: 195:38 (#0), res: Def(Struct, DefId(5:7449 ~ alloc[ec52]::string::String)), segments: [PathSegment { ident: String#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).68), res: Def(Struct, DefId(5:7449 ~ alloc[ec52]::string::String)), args: None, infer_args: true }] })), span: src/main.rs:195:32: 195:38 (#0) }, PathSegment { ident: from_utf8#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).70), res: Err, args: None, infer_args: true })), span: src/main.rs:195:32: 195:49 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).71), kind: Field(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).72), kind: Path(Resolved(None, Path { span: src/main.rs:195:50: 195:56 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).63)), segments: [PathSegment { ident: output#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).73), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).63)), args: None, infer_args: true }] })), span: src/main.rs:195:50: 195:56 (#0) }, stdout#0), span: src/main.rs:195:50: 195:63 (#0) }]), span: src/main.rs:195:32: 195:64 (#0) }, [], src/main.rs:195:65: 195:69 (#0)))
  Method call: ok with 0 arguments
  Receiver type: Adt(std::result::Result, [Adt(std::string::String, []), Adt(std::string::FromUtf8Error, [])])
  Method: std::result::Result::<T, E>::ok
  Method type: FnDef(DefId(2:8773 ~ core[ae61]::result::{impl#0}::ok), [T/#0, E/#1])
  Expression type: Adt(std::option::Option, [Adt(std::string::String, [])])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).67), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).69), kind: Path(Resolved(None, Path { span: src/main.rs:195:32: 195:38 (#0), res: Def(Struct, DefId(5:7449 ~ alloc[ec52]::string::String)), segments: [PathSegment { ident: String#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).68), res: Def(Struct, DefId(5:7449 ~ alloc[ec52]::string::String)), args: None, infer_args: true }] })), span: src/main.rs:195:32: 195:38 (#0) }, PathSegment { ident: from_utf8#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).70), res: Err, args: None, infer_args: true })), span: src/main.rs:195:32: 195:49 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).71), kind: Field(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).72), kind: Path(Resolved(None, Path { span: src/main.rs:195:50: 195:56 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).63)), segments: [PathSegment { ident: output#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).73), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).63)), args: None, infer_args: true }] })), span: src/main.rs:195:50: 195:56 (#0) }, stdout#0), span: src/main.rs:195:50: 195:63 (#0) }]))
  Function call with 1 arguments
  Called function: std::string::String::from_utf8
  Function type: FnDef(DefId(5:5576 ~ alloc[ec52]::string::{impl#0}::from_utf8), [])
  Expression type: Adt(std::result::Result, [Adt(std::string::String, []), Adt(std::string::FromUtf8Error, [])])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).69), kind: Path(Resolved(None, Path { span: src/main.rs:195:32: 195:38 (#0), res: Def(Struct, DefId(5:7449 ~ alloc[ec52]::string::String)), segments: [PathSegment { ident: String#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).68), res: Def(Struct, DefId(5:7449 ~ alloc[ec52]::string::String)), args: None, infer_args: true }] })), span: src/main.rs:195:32: 195:38 (#0) }, PathSegment { ident: from_utf8#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).70), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(5:5576 ~ alloc[ec52]::string::{impl#0}::from_utf8), [])
Expression (kind: Field(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).72), kind: Path(Resolved(None, Path { span: src/main.rs:195:50: 195:56 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).63)), segments: [PathSegment { ident: output#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).73), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).63)), args: None, infer_args: true }] })), span: src/main.rs:195:50: 195:56 (#0) }, stdout#0))
  Expression type: Adt(std::vec::Vec, [u8, Adt(std::alloc::Global, [])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:195:50: 195:56 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).63)), segments: [PathSegment { ident: output#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).73), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).63)), args: None, infer_args: true }] })))
  Expression type: Adt(std::process::Output, [])
Expression (kind: Closure(Closure { def_id: DefId(0:40 ~ main[cc0f]::main::{closure#2}), binder: Default, constness: NotConst, capture_clause: Ref, bound_generic_params: [], fn_decl: FnDecl { inputs: [Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).84), kind: Infer, span: src/main.rs:196:19: 196:20 (#0) }], output: DefaultReturn(src/main.rs:196:22: 196:22 (#0)), c_variadic: false, implicit_self: None, lifetime_elision_allowed: false }, body: BodyId { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).78) }, fn_decl_span: src/main.rs:196:18: 196:21 (#0), fn_arg_span: Some(src/main.rs:196:18: 196:21 (#0)), movability: None }))
  Expression type: Closure(DefId(0:40 ~ main[cc0f]::main::{closure#2}), [i32, Binder(extern "RustCall" fn((Adt(std::string::String, []),)) -> Adt(std::string::String, []), []), ()])
Expression (kind: MethodCall(PathSegment { ident: to_string#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).79), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).80), kind: MethodCall(PathSegment { ident: trim#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).81), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).82), kind: Path(Resolved(None, Path { span: src/main.rs:196:22: 196:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).77)), segments: [PathSegment { ident: s#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).83), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).77)), args: None, infer_args: true }] })), span: src/main.rs:196:22: 196:23 (#0) }, [], src/main.rs:196:24: 196:30 (#0)), span: src/main.rs:196:22: 196:30 (#0) }, [], src/main.rs:196:31: 196:42 (#0)))
  Method call: to_string with 0 arguments
  Receiver type: &ReErased str
  Method: std::string::ToString::to_string
  Method type: FnDef(DefId(5:5770 ~ alloc[ec52]::string::ToString::to_string), [Self/#0])
  Expression type: Adt(std::string::String, [])
Expression (kind: MethodCall(PathSegment { ident: trim#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).81), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).82), kind: Path(Resolved(None, Path { span: src/main.rs:196:22: 196:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).77)), segments: [PathSegment { ident: s#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).83), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).77)), args: None, infer_args: true }] })), span: src/main.rs:196:22: 196:23 (#0) }, [], src/main.rs:196:24: 196:30 (#0)))
  Method call: trim with 0 arguments
  Receiver type: Adt(std::string::String, [])
  Method: core::str::<impl str>::trim
  Method type: FnDef(DefId(2:12371 ~ core[ae61]::str::{impl#0}::trim), [])
  Expression type: &ReErased str
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:196:22: 196:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).77)), segments: [PathSegment { ident: s#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).83), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).77)), args: None, infer_args: true }] })))
  Expression type: Adt(std::string::String, [])
Expression (kind: If(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).88), kind: Let(Let { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).89), span: src/main.rs:198:12: 198:39 (#0), pat: Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).92), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:198:16: 198:20 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).90), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).91), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:37 ~ main[cc0f]::main).91), sysroot#0, None), span: src/main.rs:198:21: 198:28 (#0), default_binding_modes: true }], None), span: src/main.rs:198:16: 198:29 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).93), kind: Path(Resolved(None, Path { span: src/main.rs:198:32: 198:39 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).86)), segments: [PathSegment { ident: sysroot#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).94), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).86)), args: None, infer_args: true }] })), span: src/main.rs:198:32: 198:39 (#0) } }), span: src/main.rs:198:12: 198:39 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).111), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).102), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).95), kind: MethodCall(PathSegment { ident: push#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).96), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).97), kind: Path(Resolved(None, Path { span: src/main.rs:199:13: 199:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).98), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:199:13: 199:23 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).99), kind: MethodCall(PathSegment { ident: to_string#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).100), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).101), kind: Lit(Spanned { node: Str("--sysroot", Cooked), span: src/main.rs:199:29: 199:40 (#0) }), span: src/main.rs:199:29: 199:40 (#0) }, [], src/main.rs:199:41: 199:52 (#0)), span: src/main.rs:199:29: 199:52 (#0) }], src/main.rs:199:24: 199:53 (#0)), span: src/main.rs:199:13: 199:53 (#0) }), span: src/main.rs:199:13: 199:54 (#0) }, Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).109), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).103), kind: MethodCall(PathSegment { ident: push#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).104), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).105), kind: Path(Resolved(None, Path { span: src/main.rs:200:13: 200:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).106), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:200:13: 200:23 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).107), kind: Path(Resolved(None, Path { span: src/main.rs:200:29: 200:36 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).91)), segments: [PathSegment { ident: sysroot#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).108), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).91)), args: None, infer_args: true }] })), span: src/main.rs:200:29: 200:36 (#0) }], src/main.rs:200:24: 200:37 (#0)), span: src/main.rs:200:13: 200:37 (#0) }), span: src/main.rs:200:13: 200:38 (#0) }], expr: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).110), rules: DefaultBlock, span: src/main.rs:198:40: 201:10 (#0), targeted_by_break: false }, None), span: src/main.rs:198:40: 201:10 (#0) }, None))
  Expression type: ()
Expression (kind: Let(Let { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).89), span: src/main.rs:198:12: 198:39 (#0), pat: Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).92), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:198:16: 198:20 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), segments: [PathSegment { ident: Some#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).90), res: Def(Ctor(Variant, Fn), DefId(2:35423 ~ core[ae61]::option::Option::Some::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).91), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:37 ~ main[cc0f]::main).91), sysroot#0, None), span: src/main.rs:198:21: 198:28 (#0), default_binding_modes: true }], None), span: src/main.rs:198:16: 198:29 (#0), default_binding_modes: true }, ty: None, init: Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).93), kind: Path(Resolved(None, Path { span: src/main.rs:198:32: 198:39 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).86)), segments: [PathSegment { ident: sysroot#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).94), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).86)), args: None, infer_args: true }] })), span: src/main.rs:198:32: 198:39 (#0) } }))
  Expression type: bool
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:198:32: 198:39 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).86)), segments: [PathSegment { ident: sysroot#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).94), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).86)), args: None, infer_args: true }] })))
  Expression type: Adt(std::option::Option, [Adt(std::string::String, [])])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).102), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).95), kind: MethodCall(PathSegment { ident: push#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).96), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).97), kind: Path(Resolved(None, Path { span: src/main.rs:199:13: 199:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).98), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:199:13: 199:23 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).99), kind: MethodCall(PathSegment { ident: to_string#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).100), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).101), kind: Lit(Spanned { node: Str("--sysroot", Cooked), span: src/main.rs:199:29: 199:40 (#0) }), span: src/main.rs:199:29: 199:40 (#0) }, [], src/main.rs:199:41: 199:52 (#0)), span: src/main.rs:199:29: 199:52 (#0) }], src/main.rs:199:24: 199:53 (#0)), span: src/main.rs:199:13: 199:53 (#0) }), span: src/main.rs:199:13: 199:54 (#0) }, Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).109), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).103), kind: MethodCall(PathSegment { ident: push#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).104), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).105), kind: Path(Resolved(None, Path { span: src/main.rs:200:13: 200:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).106), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:200:13: 200:23 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).107), kind: Path(Resolved(None, Path { span: src/main.rs:200:29: 200:36 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).91)), segments: [PathSegment { ident: sysroot#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).108), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).91)), args: None, infer_args: true }] })), span: src/main.rs:200:29: 200:36 (#0) }], src/main.rs:200:24: 200:37 (#0)), span: src/main.rs:200:13: 200:37 (#0) }), span: src/main.rs:200:13: 200:38 (#0) }], expr: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).110), rules: DefaultBlock, span: src/main.rs:198:40: 201:10 (#0), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: MethodCall(PathSegment { ident: push#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).96), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).97), kind: Path(Resolved(None, Path { span: src/main.rs:199:13: 199:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).98), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:199:13: 199:23 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).99), kind: MethodCall(PathSegment { ident: to_string#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).100), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).101), kind: Lit(Spanned { node: Str("--sysroot", Cooked), span: src/main.rs:199:29: 199:40 (#0) }), span: src/main.rs:199:29: 199:40 (#0) }, [], src/main.rs:199:41: 199:52 (#0)), span: src/main.rs:199:29: 199:52 (#0) }], src/main.rs:199:24: 199:53 (#0)))
  Method call: push with 1 arguments
  Receiver type: Adt(std::vec::Vec, [Adt(std::string::String, []), Adt(std::alloc::Global, [])])
  Method: std::vec::Vec::<T, A>::push
  Method type: FnDef(DefId(5:6967 ~ alloc[ec52]::vec::{impl#1}::push), [T/#0, A/#1])
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:199:13: 199:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).98), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })))
  Expression type: Adt(std::vec::Vec, [Adt(std::string::String, []), Adt(std::alloc::Global, [])])
Expression (kind: MethodCall(PathSegment { ident: to_string#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).100), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).101), kind: Lit(Spanned { node: Str("--sysroot", Cooked), span: src/main.rs:199:29: 199:40 (#0) }), span: src/main.rs:199:29: 199:40 (#0) }, [], src/main.rs:199:41: 199:52 (#0)))
  Method call: to_string with 0 arguments
  Receiver type: &ReErased str
  Method: std::string::ToString::to_string
  Method type: FnDef(DefId(5:5770 ~ alloc[ec52]::string::ToString::to_string), [Self/#0])
  Expression type: Adt(std::string::String, [])
Expression (kind: Lit(Spanned { node: Str("--sysroot", Cooked), span: src/main.rs:199:29: 199:40 (#0) }))
  Expression type: &ReErased str
Expression (kind: MethodCall(PathSegment { ident: push#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).104), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).105), kind: Path(Resolved(None, Path { span: src/main.rs:200:13: 200:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).106), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:200:13: 200:23 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).107), kind: Path(Resolved(None, Path { span: src/main.rs:200:29: 200:36 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).91)), segments: [PathSegment { ident: sysroot#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).108), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).91)), args: None, infer_args: true }] })), span: src/main.rs:200:29: 200:36 (#0) }], src/main.rs:200:24: 200:37 (#0)))
  Method call: push with 1 arguments
  Receiver type: Adt(std::vec::Vec, [Adt(std::string::String, []), Adt(std::alloc::Global, [])])
  Method: std::vec::Vec::<T, A>::push
  Method type: FnDef(DefId(5:6967 ~ alloc[ec52]::vec::{impl#1}::push), [T/#0, A/#1])
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:200:13: 200:23 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).106), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })))
  Expression type: Adt(std::vec::Vec, [Adt(std::string::String, []), Adt(std::alloc::Global, [])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:200:29: 200:36 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).91)), segments: [PathSegment { ident: sysroot#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).108), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).91)), args: None, infer_args: true }] })))
  Expression type: Adt(std::string::String, [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).116), kind: Path(Resolved(None, Path { span: src/main.rs:205:5: 205:17 (#0), res: Def(Fn, DefId(1:1805 ~ std[3ef1]::env::set_var)), segments: [PathSegment { ident: env#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).117), res: Def(Mod, DefId(1:1761 ~ std[3ef1]::env)), args: None, infer_args: true }, PathSegment { ident: set_var#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).118), res: Def(Fn, DefId(1:1805 ~ std[3ef1]::env::set_var)), args: None, infer_args: true }] })), span: src/main.rs:205:5: 205:17 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).119), kind: Lit(Spanned { node: Str("RUSTC_BOOTSTRAP", Cooked), span: src/main.rs:205:18: 205:35 (#0) }), span: src/main.rs:205:18: 205:35 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).120), kind: Lit(Spanned { node: Str("1", Cooked), span: src/main.rs:205:37: 205:40 (#0) }), span: src/main.rs:205:37: 205:40 (#0) }]))
  Function call with 2 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:205:5: 205:17 (#0), res: Def(Fn, DefId(1:1805 ~ std[3ef1]::env::set_var)), segments: [PathSegment { ident: env#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).117), res: Def(Mod, DefId(1:1761 ~ std[3ef1]::env)), args: None, infer_args: true }, PathSegment { ident: set_var#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).118), res: Def(Fn, DefId(1:1805 ~ std[3ef1]::env::set_var)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:1805 ~ std[3ef1]::env::set_var), [&ReErased str, &ReErased str])
Expression (kind: Lit(Spanned { node: Str("RUSTC_BOOTSTRAP", Cooked), span: src/main.rs:205:18: 205:35 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("1", Cooked), span: src/main.rs:205:37: 205:40 (#0) }))
  Expression type: &ReErased str
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).145), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).123), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).124), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#81), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#81, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).125), res: Err, args: None, infer_args: true }, PathSegment { ident: io#81, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).126), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#81, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).127), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#81) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).128), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).144), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).142), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }, PathSegment { ident: new_v1#82, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).143), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).132), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).131), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).129), kind: Lit(Spanned { node: Str("Running Rust compiler with arguments: ", Cooked), span: src/main.rs:207:14: 207:58 (#0) }), span: src/main.rs:207:14: 207:58 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).130), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:207:14: 207:58 (#0) }), span: src/main.rs:207:14: 207:58 (#0) }]), span: src/main.rs:207:14: 207:58 (#0) }), span: src/main.rs:207:14: 207:58 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).141), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).140), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).139), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).138), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).136), kind: Path(LangItem(FormatArgument, src/main.rs:207:53: 207:57 (#82), None)), span: src/main.rs:207:53: 207:57 (#82) }, PathSegment { ident: new_debug#82, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).137), res: Err, args: None, infer_args: true })), span: src/main.rs:207:53: 207:57 (#82) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).135), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).133), kind: Path(Resolved(None, Path { span: src/main.rs:207:60: 207:70 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).134), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:207:60: 207:70 (#0) }), span: src/main.rs:207:60: 207:70 (#82) }]), span: src/main.rs:207:53: 207:57 (#82) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#81) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#81) }], expr: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).146), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#81), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).124), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#81), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#81, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).125), res: Err, args: None, infer_args: true }, PathSegment { ident: io#81, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).126), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#81, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).127), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#81) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).128), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).144), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).142), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }, PathSegment { ident: new_v1#82, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).143), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).132), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).131), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).129), kind: Lit(Spanned { node: Str("Running Rust compiler with arguments: ", Cooked), span: src/main.rs:207:14: 207:58 (#0) }), span: src/main.rs:207:14: 207:58 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).130), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:207:14: 207:58 (#0) }), span: src/main.rs:207:14: 207:58 (#0) }]), span: src/main.rs:207:14: 207:58 (#0) }), span: src/main.rs:207:14: 207:58 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).141), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).140), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).139), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).138), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).136), kind: Path(LangItem(FormatArgument, src/main.rs:207:53: 207:57 (#82), None)), span: src/main.rs:207:53: 207:57 (#82) }, PathSegment { ident: new_debug#82, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).137), res: Err, args: None, infer_args: true })), span: src/main.rs:207:53: 207:57 (#82) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).135), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).133), kind: Path(Resolved(None, Path { span: src/main.rs:207:60: 207:70 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).134), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:207:60: 207:70 (#0) }), span: src/main.rs:207:60: 207:70 (#82) }]), span: src/main.rs:207:53: 207:57 (#82) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#81), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#81, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).125), res: Err, args: None, infer_args: true }, PathSegment { ident: io#81, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).126), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#81, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).127), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).144), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).142), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }, PathSegment { ident: new_v1#82, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).143), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).132), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).131), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).129), kind: Lit(Spanned { node: Str("Running Rust compiler with arguments: ", Cooked), span: src/main.rs:207:14: 207:58 (#0) }), span: src/main.rs:207:14: 207:58 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).130), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:207:14: 207:58 (#0) }), span: src/main.rs:207:14: 207:58 (#0) }]), span: src/main.rs:207:14: 207:58 (#0) }), span: src/main.rs:207:14: 207:58 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).141), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).140), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).139), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).138), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).136), kind: Path(LangItem(FormatArgument, src/main.rs:207:53: 207:57 (#82), None)), span: src/main.rs:207:53: 207:57 (#82) }, PathSegment { ident: new_debug#82, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).137), res: Err, args: None, infer_args: true })), span: src/main.rs:207:53: 207:57 (#82) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).135), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).133), kind: Path(Resolved(None, Path { span: src/main.rs:207:60: 207:70 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).134), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:207:60: 207:70 (#0) }), span: src/main.rs:207:60: 207:70 (#82) }]), span: src/main.rs:207:53: 207:57 (#82) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).142), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }, PathSegment { ident: new_v1#82, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).143), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).131), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).129), kind: Lit(Spanned { node: Str("Running Rust compiler with arguments: ", Cooked), span: src/main.rs:207:14: 207:58 (#0) }), span: src/main.rs:207:14: 207:58 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).130), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:207:14: 207:58 (#0) }), span: src/main.rs:207:14: 207:58 (#0) }]), span: src/main.rs:207:14: 207:58 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).129), kind: Lit(Spanned { node: Str("Running Rust compiler with arguments: ", Cooked), span: src/main.rs:207:14: 207:58 (#0) }), span: src/main.rs:207:14: 207:58 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).130), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:207:14: 207:58 (#0) }), span: src/main.rs:207:14: 207:58 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Lit(Spanned { node: Str("Running Rust compiler with arguments: ", Cooked), span: src/main.rs:207:14: 207:58 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:207:14: 207:58 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).140), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).139), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).138), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).136), kind: Path(LangItem(FormatArgument, src/main.rs:207:53: 207:57 (#82), None)), span: src/main.rs:207:53: 207:57 (#82) }, PathSegment { ident: new_debug#82, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).137), res: Err, args: None, infer_args: true })), span: src/main.rs:207:53: 207:57 (#82) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).135), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).133), kind: Path(Resolved(None, Path { span: src/main.rs:207:60: 207:70 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).134), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:207:60: 207:70 (#0) }), span: src/main.rs:207:60: 207:70 (#82) }]), span: src/main.rs:207:53: 207:57 (#82) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#82) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).139), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).138), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).136), kind: Path(LangItem(FormatArgument, src/main.rs:207:53: 207:57 (#82), None)), span: src/main.rs:207:53: 207:57 (#82) }, PathSegment { ident: new_debug#82, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).137), res: Err, args: None, infer_args: true })), span: src/main.rs:207:53: 207:57 (#82) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).135), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).133), kind: Path(Resolved(None, Path { span: src/main.rs:207:60: 207:70 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).134), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:207:60: 207:70 (#0) }), span: src/main.rs:207:60: 207:70 (#82) }]), span: src/main.rs:207:53: 207:57 (#82) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).138), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).136), kind: Path(LangItem(FormatArgument, src/main.rs:207:53: 207:57 (#82), None)), span: src/main.rs:207:53: 207:57 (#82) }, PathSegment { ident: new_debug#82, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).137), res: Err, args: None, infer_args: true })), span: src/main.rs:207:53: 207:57 (#82) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).135), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).133), kind: Path(Resolved(None, Path { span: src/main.rs:207:60: 207:70 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).134), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:207:60: 207:70 (#0) }), span: src/main.rs:207:60: 207:70 (#82) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_debug
  Function type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).136), kind: Path(LangItem(FormatArgument, src/main.rs:207:53: 207:57 (#82), None)), span: src/main.rs:207:53: 207:57 (#82) }, PathSegment { ident: new_debug#82, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).137), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReErased, Adt(std::vec::Vec, [Adt(std::string::String, []), Adt(std::alloc::Global, [])])])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).133), kind: Path(Resolved(None, Path { span: src/main.rs:207:60: 207:70 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).134), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:207:60: 207:70 (#0) }))
  Expression type: &ReErased Adt(std::vec::Vec, [Adt(std::string::String, []), Adt(std::alloc::Global, [])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:207:60: 207:70 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).134), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })))
  Expression type: Adt(std::vec::Vec, [Adt(std::string::String, []), Adt(std::alloc::Global, [])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:210:24: 210:34 (#0), res: Def(Ctor(Struct, Const), DefId(0:19 ~ main[cc0f]::AstPrinter::{constructor#0})), segments: [PathSegment { ident: AstPrinter#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).150), res: Def(Ctor(Struct, Const), DefId(0:19 ~ main[cc0f]::AstPrinter::{constructor#0})), args: None, infer_args: true }] })))
  Expression type: Adt(AstPrinter, [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).155), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).159), kind: Path(Resolved(None, Path { span: src/main.rs:213:20: 213:31 (#0), res: Def(Struct, DefId(21:300 ~ rustc_driver_impl[66c9]::RunCompiler)), segments: [PathSegment { ident: RunCompiler#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).158), res: Def(Struct, DefId(21:300 ~ rustc_driver_impl[66c9]::RunCompiler)), args: Some(GenericArgs { args: [Lifetime(Lifetime { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).156), ident: #0, res: Infer }), Lifetime(Lifetime { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).157), ident: #0, res: Infer })], bindings: [], parenthesized: No, span_ext: src/main.rs:213:36: 213:36 (#0) }), infer_args: true }] })), span: src/main.rs:213:20: 213:31 (#0) }, PathSegment { ident: new#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).160), res: Err, args: None, infer_args: true })), span: src/main.rs:213:20: 213:36 (#0) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).161), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).162), kind: Path(Resolved(None, Path { span: src/main.rs:213:38: 213:48 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).163), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:213:38: 213:48 (#0) }), span: src/main.rs:213:37: 213:48 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).164), kind: AddrOf(Ref, Mut, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).165), kind: Path(Resolved(None, Path { span: src/main.rs:213:55: 213:63 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).152)), segments: [PathSegment { ident: callback#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).166), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).152)), args: None, infer_args: true }] })), span: src/main.rs:213:55: 213:63 (#0) }), span: src/main.rs:213:50: 213:63 (#0) }]))
  Function call with 2 arguments
  Called function: rustc_driver::RunCompiler::<'a, 'b>::new
  Function type: FnDef(DefId(21:310 ~ rustc_driver_impl[66c9]::{impl#1}::new), [ReEarlyBound(DefId(21:308 ~ rustc_driver_impl[66c9]::{impl#1}::'a), 0, 'a), ReEarlyBound(DefId(21:309 ~ rustc_driver_impl[66c9]::{impl#1}::'b), 1, 'b)])
  Expression type: Adt(rustc_driver::RunCompiler, [ReErased, ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).159), kind: Path(Resolved(None, Path { span: src/main.rs:213:20: 213:31 (#0), res: Def(Struct, DefId(21:300 ~ rustc_driver_impl[66c9]::RunCompiler)), segments: [PathSegment { ident: RunCompiler#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).158), res: Def(Struct, DefId(21:300 ~ rustc_driver_impl[66c9]::RunCompiler)), args: Some(GenericArgs { args: [Lifetime(Lifetime { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).156), ident: #0, res: Infer }), Lifetime(Lifetime { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).157), ident: #0, res: Infer })], bindings: [], parenthesized: No, span_ext: src/main.rs:213:36: 213:36 (#0) }), infer_args: true }] })), span: src/main.rs:213:20: 213:31 (#0) }, PathSegment { ident: new#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).160), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(21:310 ~ rustc_driver_impl[66c9]::{impl#1}::new), [ReErased, ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).162), kind: Path(Resolved(None, Path { span: src/main.rs:213:38: 213:48 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).163), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })), span: src/main.rs:213:38: 213:48 (#0) }))
  Expression type: &ReErased Adt(std::vec::Vec, [Adt(std::string::String, []), Adt(std::alloc::Global, [])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:213:38: 213:48 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), segments: [PathSegment { ident: rustc_args#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).163), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).20)), args: None, infer_args: true }] })))
  Expression type: Adt(std::vec::Vec, [Adt(std::string::String, []), Adt(std::alloc::Global, [])])
Expression (kind: AddrOf(Ref, Mut, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).165), kind: Path(Resolved(None, Path { span: src/main.rs:213:55: 213:63 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).152)), segments: [PathSegment { ident: callback#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).166), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).152)), args: None, infer_args: true }] })), span: src/main.rs:213:55: 213:63 (#0) }))
  Expression type: &ReErased mut Adt(AstPrinter, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:213:55: 213:63 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).152)), segments: [PathSegment { ident: callback#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).166), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).152)), args: None, infer_args: true }] })))
  Expression type: Adt(AstPrinter, [])
Expression (kind: Match(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).170), kind: MethodCall(PathSegment { ident: run#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).171), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).172), kind: Path(Resolved(None, Path { span: src/main.rs:214:11: 214:19 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).168)), segments: [PathSegment { ident: compiler#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).173), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).168)), args: None, infer_args: true }] })), span: src/main.rs:214:11: 214:19 (#0) }, [], src/main.rs:214:20: 214:25 (#0)), span: src/main.rs:214:11: 214:25 (#0) }, [Arm { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).177), span: src/main.rs:215:9: 215:52 (#0), pat: Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).176), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:215:9: 215:11 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), segments: [PathSegment { ident: Ok#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).174), res: Def(Ctor(Variant, Fn), DefId(2:35567 ~ core[ae61]::result::Result::Ok::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).175), kind: Wild, span: src/main.rs:215:12: 215:13 (#0), default_binding_modes: true }], None), span: src/main.rs:215:9: 215:14 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).178), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).191), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).179), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).180), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#83), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#83, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).181), res: Err, args: None, infer_args: true }, PathSegment { ident: io#83, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).182), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#83, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).183), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#83) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).184), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).190), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).188), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84) }, PathSegment { ident: new_const#84, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).189), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).187), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).186), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).185), kind: Lit(Spanned { node: Str("AST traversal complete\n", Cooked), span: src/main.rs:215:27: 215:51 (#0) }), span: src/main.rs:215:27: 215:51 (#0) }]), span: src/main.rs:215:27: 215:51 (#0) }), span: src/main.rs:215:27: 215:51 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#83) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#83) }], expr: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).192), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#83), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#83) } }, Arm { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).196), span: src/main.rs:216:9: 216:55 (#0), pat: Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).195), kind: TupleStruct(Resolved(None, Path { span: src/main.rs:216:9: 216:12 (#0), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), segments: [PathSegment { ident: Err#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).193), res: Def(Ctor(Variant, Fn), DefId(2:35570 ~ core[ae61]::result::Result::Err::{constructor#0})), args: None, infer_args: true }] }), [Pat { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).194), kind: Binding(BindingAnnotation(No, Not), HirId(DefId(0:37 ~ main[cc0f]::main).194), e#0, None), span: src/main.rs:216:13: 216:14 (#0), default_binding_modes: true }], None), span: src/main.rs:216:9: 216:15 (#0), default_binding_modes: true }, guard: None, body: Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).197), kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).220), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).198), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).199), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:9: 221:28 (#85), res: Def(Fn, DefId(1:3347 ~ std[3ef1]::io::stdio::_eprint)), segments: [PathSegment { ident: $crate#85, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).200), res: Err, args: None, infer_args: true }, PathSegment { ident: io#85, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).201), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _eprint#85, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).202), res: Def(Fn, DefId(1:3347 ~ std[3ef1]::io::stdio::_eprint)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:9: 221:28 (#85) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).203), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).219), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).217), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }, PathSegment { ident: new_v1#86, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).218), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).207), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).206), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).204), kind: Lit(Spanned { node: Str("Compiler error: ", Cooked), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).205), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }]), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).216), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).215), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).214), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).213), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).211), kind: Path(LangItem(FormatArgument, src/main.rs:216:46: 216:50 (#86), None)), span: src/main.rs:216:46: 216:50 (#86) }, PathSegment { ident: new_debug#86, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).212), res: Err, args: None, infer_args: true })), span: src/main.rs:216:46: 216:50 (#86) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).210), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).208), kind: Path(Resolved(None, Path { span: src/main.rs:216:53: 216:54 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), segments: [PathSegment { ident: e#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).209), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), args: None, infer_args: true }] })), span: src/main.rs:216:53: 216:54 (#0) }), span: src/main.rs:216:53: 216:54 (#86) }]), span: src/main.rs:216:46: 216:50 (#86) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:9: 221:63 (#85) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:9: 221:64 (#85) }], expr: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).221), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:220:23: 222:6 (#85), targeted_by_break: false }, None), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:220:23: 222:6 (#85) } }], Normal))
  Expression type: ()
Expression (kind: MethodCall(PathSegment { ident: run#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).171), res: Err, args: None, infer_args: true }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).172), kind: Path(Resolved(None, Path { span: src/main.rs:214:11: 214:19 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).168)), segments: [PathSegment { ident: compiler#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).173), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).168)), args: None, infer_args: true }] })), span: src/main.rs:214:11: 214:19 (#0) }, [], src/main.rs:214:20: 214:25 (#0)))
  Method call: run with 0 arguments
  Receiver type: Adt(rustc_driver::RunCompiler, [ReErased, ReErased])
  Method: rustc_driver::RunCompiler::<'a, 'b>::run
  Method type: FnDef(DefId(21:313 ~ rustc_driver_impl[66c9]::{impl#1}::run), [ReEarlyBound(DefId(21:308 ~ rustc_driver_impl[66c9]::{impl#1}::'a), 0, 'a), ReEarlyBound(DefId(21:309 ~ rustc_driver_impl[66c9]::{impl#1}::'b), 1, 'b)])
  Expression type: Adt(std::result::Result, [(), Adt(rustc_span::ErrorGuaranteed, [])])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:214:11: 214:19 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).168)), segments: [PathSegment { ident: compiler#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).173), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).168)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_driver::RunCompiler, [ReErased, ReErased])
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).191), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).179), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).180), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#83), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#83, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).181), res: Err, args: None, infer_args: true }, PathSegment { ident: io#83, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).182), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#83, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).183), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#83) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).184), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).190), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).188), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84) }, PathSegment { ident: new_const#84, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).189), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).187), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).186), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).185), kind: Lit(Spanned { node: Str("AST traversal complete\n", Cooked), span: src/main.rs:215:27: 215:51 (#0) }), span: src/main.rs:215:27: 215:51 (#0) }]), span: src/main.rs:215:27: 215:51 (#0) }), span: src/main.rs:215:27: 215:51 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:62 (#83) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:63 (#83) }], expr: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).192), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:142:23: 144:6 (#83), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).180), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#83), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#83, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).181), res: Err, args: None, infer_args: true }, PathSegment { ident: io#83, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).182), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#83, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).183), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#83) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).184), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).190), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).188), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84) }, PathSegment { ident: new_const#84, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).189), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).187), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).186), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).185), kind: Lit(Spanned { node: Str("AST traversal complete\n", Cooked), span: src/main.rs:215:27: 215:51 (#0) }), span: src/main.rs:215:27: 215:51 (#0) }]), span: src/main.rs:215:27: 215:51 (#0) }), span: src/main.rs:215:27: 215:51 (#0) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:9: 143:27 (#83), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), segments: [PathSegment { ident: $crate#83, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).181), res: Err, args: None, infer_args: true }, PathSegment { ident: io#83, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).182), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _print#83, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).183), res: Def(Fn, DefId(1:3346 ~ std[3ef1]::io::stdio::_print)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3346 ~ std[3ef1]::io::stdio::_print), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).190), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).188), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84) }, PathSegment { ident: new_const#84, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).189), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).187), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).186), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).185), kind: Lit(Spanned { node: Str("AST traversal complete\n", Cooked), span: src/main.rs:215:27: 215:51 (#0) }), span: src/main.rs:215:27: 215:51 (#0) }]), span: src/main.rs:215:27: 215:51 (#0) }), span: src/main.rs:215:27: 215:51 (#0) }]))
  Function call with 1 arguments
  Called function: std::fmt::Arguments::<'a>::new_const
  Function type: FnDef(DefId(2:9415 ~ core[ae61]::fmt::{impl#2}::new_const), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).188), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:143:28: 143:61 (#84) }, PathSegment { ident: new_const#84, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).189), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9415 ~ core[ae61]::fmt::{impl#2}::new_const), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).186), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).185), kind: Lit(Spanned { node: Str("AST traversal complete\n", Cooked), span: src/main.rs:215:27: 215:51 (#0) }), span: src/main.rs:215:27: 215:51 (#0) }]), span: src/main.rs:215:27: 215:51 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).185), kind: Lit(Spanned { node: Str("AST traversal complete\n", Cooked), span: src/main.rs:215:27: 215:51 (#0) }), span: src/main.rs:215:27: 215:51 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Lit(Spanned { node: Str("AST traversal complete\n", Cooked), span: src/main.rs:215:27: 215:51 (#0) }))
  Expression type: &ReErased str
Expression (kind: Block(Block { stmts: [Stmt { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).220), kind: Semi(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).198), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).199), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:9: 221:28 (#85), res: Def(Fn, DefId(1:3347 ~ std[3ef1]::io::stdio::_eprint)), segments: [PathSegment { ident: $crate#85, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).200), res: Err, args: None, infer_args: true }, PathSegment { ident: io#85, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).201), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _eprint#85, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).202), res: Def(Fn, DefId(1:3347 ~ std[3ef1]::io::stdio::_eprint)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:9: 221:28 (#85) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).203), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).219), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).217), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }, PathSegment { ident: new_v1#86, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).218), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).207), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).206), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).204), kind: Lit(Spanned { node: Str("Compiler error: ", Cooked), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).205), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }]), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).216), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).215), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).214), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).213), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).211), kind: Path(LangItem(FormatArgument, src/main.rs:216:46: 216:50 (#86), None)), span: src/main.rs:216:46: 216:50 (#86) }, PathSegment { ident: new_debug#86, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).212), res: Err, args: None, infer_args: true })), span: src/main.rs:216:46: 216:50 (#86) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).210), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).208), kind: Path(Resolved(None, Path { span: src/main.rs:216:53: 216:54 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), segments: [PathSegment { ident: e#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).209), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), args: None, infer_args: true }] })), span: src/main.rs:216:53: 216:54 (#0) }), span: src/main.rs:216:53: 216:54 (#86) }]), span: src/main.rs:216:46: 216:50 (#86) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:9: 221:63 (#85) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:9: 221:64 (#85) }], expr: None, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).221), rules: DefaultBlock, span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:220:23: 222:6 (#85), targeted_by_break: false }, None))
  Expression type: ()
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).199), kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:9: 221:28 (#85), res: Def(Fn, DefId(1:3347 ~ std[3ef1]::io::stdio::_eprint)), segments: [PathSegment { ident: $crate#85, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).200), res: Err, args: None, infer_args: true }, PathSegment { ident: io#85, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).201), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _eprint#85, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).202), res: Def(Fn, DefId(1:3347 ~ std[3ef1]::io::stdio::_eprint)), args: None, infer_args: true }] })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:9: 221:28 (#85) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).203), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).219), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).217), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }, PathSegment { ident: new_v1#86, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).218), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).207), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).206), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).204), kind: Lit(Spanned { node: Str("Compiler error: ", Cooked), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).205), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }]), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).216), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).215), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).214), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).213), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).211), kind: Path(LangItem(FormatArgument, src/main.rs:216:46: 216:50 (#86), None)), span: src/main.rs:216:46: 216:50 (#86) }, PathSegment { ident: new_debug#86, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).212), res: Err, args: None, infer_args: true })), span: src/main.rs:216:46: 216:50 (#86) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).210), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).208), kind: Path(Resolved(None, Path { span: src/main.rs:216:53: 216:54 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), segments: [PathSegment { ident: e#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).209), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), args: None, infer_args: true }] })), span: src/main.rs:216:53: 216:54 (#0) }), span: src/main.rs:216:53: 216:54 (#86) }]), span: src/main.rs:216:46: 216:50 (#86) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }]))
  Function call with 1 arguments
  Expression type: ()
Expression (kind: Path(Resolved(None, Path { span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:9: 221:28 (#85), res: Def(Fn, DefId(1:3347 ~ std[3ef1]::io::stdio::_eprint)), segments: [PathSegment { ident: $crate#85, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).200), res: Err, args: None, infer_args: true }, PathSegment { ident: io#85, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).201), res: Def(Mod, DefId(1:2406 ~ std[3ef1]::io)), args: None, infer_args: true }, PathSegment { ident: _eprint#85, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).202), res: Def(Fn, DefId(1:3347 ~ std[3ef1]::io::stdio::_eprint)), args: None, infer_args: true }] })))
  Expression type: FnDef(DefId(1:3347 ~ std[3ef1]::io::stdio::_eprint), [])
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).219), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).217), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }, PathSegment { ident: new_v1#86, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).218), res: Err, args: None, infer_args: true })), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).207), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).206), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).204), kind: Lit(Spanned { node: Str("Compiler error: ", Cooked), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).205), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }]), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).216), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).215), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).214), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).213), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).211), kind: Path(LangItem(FormatArgument, src/main.rs:216:46: 216:50 (#86), None)), span: src/main.rs:216:46: 216:50 (#86) }, PathSegment { ident: new_debug#86, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).212), res: Err, args: None, infer_args: true })), span: src/main.rs:216:46: 216:50 (#86) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).210), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).208), kind: Path(Resolved(None, Path { span: src/main.rs:216:53: 216:54 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), segments: [PathSegment { ident: e#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).209), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), args: None, infer_args: true }] })), span: src/main.rs:216:53: 216:54 (#0) }), span: src/main.rs:216:53: 216:54 (#86) }]), span: src/main.rs:216:46: 216:50 (#86) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }]))
  Function call with 2 arguments
  Called function: std::fmt::Arguments::<'a>::new_v1
  Function type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReEarlyBound(DefId(2:9414 ~ core[ae61]::fmt::{impl#2}::'a), 0, 'a)])
  Expression type: Adt(std::fmt::Arguments, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).217), kind: Path(LangItem(FormatArguments, /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86), None)), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }, PathSegment { ident: new_v1#86, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).218), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9416 ~ core[ae61]::fmt::{impl#2}::new_v1), [ReErased])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).206), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).204), kind: Lit(Spanned { node: Str("Compiler error: ", Cooked), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).205), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }]), span: src/main.rs:216:29: 216:51 (#0) }))
  Expression type: &ReErased [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).204), kind: Lit(Spanned { node: Str("Compiler error: ", Cooked), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).205), kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:216:29: 216:51 (#0) }), span: src/main.rs:216:29: 216:51 (#0) }]))
  Expression type: [&ReErased str; Const { ty: usize, kind: Leaf(0x0000000000000002) }]
Expression (kind: Lit(Spanned { node: Str("Compiler error: ", Cooked), span: src/main.rs:216:29: 216:51 (#0) }))
  Expression type: &ReErased str
Expression (kind: Lit(Spanned { node: Str("\n", Cooked), span: src/main.rs:216:29: 216:51 (#0) }))
  Expression type: &ReErased str
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).215), kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).214), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).213), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).211), kind: Path(LangItem(FormatArgument, src/main.rs:216:46: 216:50 (#86), None)), span: src/main.rs:216:46: 216:50 (#86) }, PathSegment { ident: new_debug#86, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).212), res: Err, args: None, infer_args: true })), span: src/main.rs:216:46: 216:50 (#86) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).210), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).208), kind: Path(Resolved(None, Path { span: src/main.rs:216:53: 216:54 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), segments: [PathSegment { ident: e#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).209), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), args: None, infer_args: true }] })), span: src/main.rs:216:53: 216:54 (#0) }), span: src/main.rs:216:53: 216:54 (#86) }]), span: src/main.rs:216:46: 216:50 (#86) }]), span: /Users/eswar.tadiparth/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:221:29: 221:62 (#86) }))
  Expression type: &ReErased [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Array([Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).214), kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).213), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).211), kind: Path(LangItem(FormatArgument, src/main.rs:216:46: 216:50 (#86), None)), span: src/main.rs:216:46: 216:50 (#86) }, PathSegment { ident: new_debug#86, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).212), res: Err, args: None, infer_args: true })), span: src/main.rs:216:46: 216:50 (#86) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).210), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).208), kind: Path(Resolved(None, Path { span: src/main.rs:216:53: 216:54 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), segments: [PathSegment { ident: e#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).209), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), args: None, infer_args: true }] })), span: src/main.rs:216:53: 216:54 (#0) }), span: src/main.rs:216:53: 216:54 (#86) }]), span: src/main.rs:216:46: 216:50 (#86) }]))
  Expression type: [Adt(core::fmt::rt::Argument, [ReErased]); Const { ty: usize, kind: Leaf(0x0000000000000001) }]
Expression (kind: Call(Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).213), kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).211), kind: Path(LangItem(FormatArgument, src/main.rs:216:46: 216:50 (#86), None)), span: src/main.rs:216:46: 216:50 (#86) }, PathSegment { ident: new_debug#86, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).212), res: Err, args: None, infer_args: true })), span: src/main.rs:216:46: 216:50 (#86) }, [Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).210), kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).208), kind: Path(Resolved(None, Path { span: src/main.rs:216:53: 216:54 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), segments: [PathSegment { ident: e#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).209), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), args: None, infer_args: true }] })), span: src/main.rs:216:53: 216:54 (#0) }), span: src/main.rs:216:53: 216:54 (#86) }]))
  Function call with 1 arguments
  Called function: core::fmt::rt::Argument::<'a>::new_debug
  Function type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReEarlyBound(DefId(2:9341 ~ core[ae61]::fmt::rt::{impl#1}::'a), 0, 'a), T/#1])
  Expression type: Adt(core::fmt::rt::Argument, [ReErased])
Expression (kind: Path(TypeRelative(Ty { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).211), kind: Path(LangItem(FormatArgument, src/main.rs:216:46: 216:50 (#86), None)), span: src/main.rs:216:46: 216:50 (#86) }, PathSegment { ident: new_debug#86, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).212), res: Err, args: None, infer_args: true })))
  Expression type: FnDef(DefId(2:9348 ~ core[ae61]::fmt::rt::{impl#1}::new_debug), [ReErased, Adt(rustc_span::ErrorGuaranteed, [])])
Expression (kind: AddrOf(Ref, Not, Expr { hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).208), kind: Path(Resolved(None, Path { span: src/main.rs:216:53: 216:54 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), segments: [PathSegment { ident: e#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).209), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), args: None, infer_args: true }] })), span: src/main.rs:216:53: 216:54 (#0) }))
  Expression type: &ReErased Adt(rustc_span::ErrorGuaranteed, [])
Expression (kind: Path(Resolved(None, Path { span: src/main.rs:216:53: 216:54 (#0), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), segments: [PathSegment { ident: e#0, hir_id: HirId(DefId(0:37 ~ main[cc0f]::main).209), res: Local(HirId(DefId(0:37 ~ main[cc0f]::main).194)), args: None, infer_args: true }] })))
  Expression type: Adt(rustc_span::ErrorGuaranteed, [])
